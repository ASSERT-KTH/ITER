bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  recordSize;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  /  recordSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  1;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  blockSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  blockSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  -  blockSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  this.assemLen  =  os.readFully();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readFully();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readFully();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
5	[BUG]  [BUGGY]  this.assemLen  =  os.readFile();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readFile();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readFile();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
6	[BUG]  [BUGGY]  this.assemLen  =  os.read();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.read();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.read();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  this.assemLen  =  os.readShort();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readShort();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readShort();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  this.assemLen  =  os.readCharacters();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readCharacters();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readCharacters();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
9	[BUG]  [BUGGY]  this.assemLen  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readUTF();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readUTF();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
10	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  System.currentTimeMillis()  +  1;	  this.assemLen    -=    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
11	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  recordSize;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  System.currentTimeMillis()  +  recordSize;	  this.assemLen    -=    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
12	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  System.currentTimeMillis()  +  2;	  this.assemLen    -=    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
13	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  4;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  +  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  System.currentTimeMillis()  +  4;	  this.assemLen    -=    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
14	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  *  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  System.currentTimeMillis()  *  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  System.currentTimeMillis()  *  recordSize;	  this.assemLen    -=    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
15	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  *  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  *  2;	  this.assemLen    =    recordSize    *    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  this.assemLen  =  blockSize  *  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  *  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  *  1;	  this.assemLen    =    recordSize    *    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  4;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  *  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  *  4;	  this.assemLen    =    recordSize    *    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  this.assemLen  =  blockSize  /  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  /  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  /  1;	  this.assemLen    =    recordSize    *    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  this.assemLen  =  new  long[recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  long[recordSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  long[recordSize];	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
20	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  longFileMode  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  longFileMode  +  1;	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode  +  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  longFileMode  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  longFileMode  +  recordSize;	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  longFileMode();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  longFileMode();	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  longFileMode  -  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  longFileMode  -  1;	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
25	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
26	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  out);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  out);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  out);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
27	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
28	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  6;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  /  6;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  /  6;	  this.assemLen    =    recordSize    -    6;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
29	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  5;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  -  5;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  -  5;	  this.assemLen    =    recordSize    -    6;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
30	[BUG]  [BUGGY]  this.assemLen  =  new  int[blockSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  int[blockSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  int[blockSize];	  this.assemLen    =    new    int[recordSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
31	[BUG]  [BUGGY]  this.assemLen  =  new  int[length];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  int[length];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  int[length];	  this.assemLen    =    new    int[recordSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
32	[BUG]  [BUGGY]  this.assemLen  =  new  int[recordSize  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  int[recordSize  +  1];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  int[recordSize  +  1];	  this.assemLen    =    new    int[recordSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
33	[BUG]  [BUGGY]  this.assemLen  =  12;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  12;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  12;	  this.assemLen    =    6;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
34	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(os,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(os,  blockSize,  recordSize);	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
35	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
36	[BUG]  [BUGGY]  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
37	[BUG]  [BUGGY]  InputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  InputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	InputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
38	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
39	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
40	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize  +  1;	  this.assemLen    =    System.currentTimeMillis()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
41	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  -  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize  -  1;	  this.assemLen    =    System.currentTimeMillis()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
42	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize  +  2;	  this.assemLen    =    System.currentTimeMillis()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
43	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  /  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  /  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize  /  2;	  this.assemLen    =    System.currentTimeMillis()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
44	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
45	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  -  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
46	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  out);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  out);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  out);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
47	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  blockSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  blockSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
48	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  2);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  2);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
49	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  recordSize;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  +  recordSize;	  this.assemLen    =    blockSize    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  +  2;	  this.assemLen    =    blockSize    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  +  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  +  4;	  this.assemLen    =    blockSize    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  this.assemLen  -=  5;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  5;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  5;	  this.assemLen    -=    4;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
53	[BUG]  [BUGGY]  this.assemLen  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[blockSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[blockSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
54	[BUG]  [BUGGY]  this.assemLen  =  new  byte[0];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[0];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[0];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
55	[BUG]  [BUGGY]  this.assemLen  =  new  byte[length];  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[length];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[length];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
56	[BUG]  [BUGGY]  this.assemLen  =  new  byte[recordSize  +  1];  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[recordSize  +  1];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[recordSize  +  1];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
57	[BUG]  [BUGGY]  this.assemLen  =  new  byte[lockSize];  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[lockSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[lockSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  this.assemLen  =  new  byte[lenSize];  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[lenSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[lenSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
59	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  /  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  /  2;	  this.assemLen    =    recordSize    /    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  /  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  /  4;	  this.assemLen    =    recordSize    /    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  /  3;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  /  3;	  this.assemLen    =    recordSize    /    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.recordBuf  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.recordBuf  =  new  TarBuffer(blockSize,  recordSize);	  this.recordBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
63	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.recordBuf  =  new  TarBuffer(os,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.recordBuf  =  new  TarBuffer(os,  blockSize,  recordSize);	  this.recordBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
64	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.recordBuf  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.recordBuf  =  new  TarBuffer(blockSize,  blockSize,  recordSize);	  this.recordBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
65	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.recordBuf  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.recordBuf  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);	  this.recordBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
66	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(buff,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.recordBuf  =  new  TarBuffer(buff,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.recordBuf  =  new  TarBuffer(buff,  blockSize,  recordSize);	  this.recordBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
67	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
69	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  /  1;	  this.assemLen    =    System.currentTimeMillis()    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
70	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  *  1;	  this.assemLen    =    System.currentTimeMillis()    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
71	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  *  2;	  this.assemLen    =    System.currentTimeMillis()    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
72	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  byte[blockSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  byte[blockSize];	  this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
73	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[0];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  byte[0];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  byte[0];	  this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
74	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  1];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  1];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  byte[recordSize  +  1];	  this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
75	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[length];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  byte[length];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  byte[length];	  this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
76	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[out];  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  byte[out];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  byte[out];	  this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
77	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize  /  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize  /  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  +  recordSize  /  2;	  this.assemLen    =    System.currentTimeMillis()    /    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
78	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  +  2;	  this.assemLen    =    System.currentTimeMillis()    /    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
79	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
80	[BUG]  [BUGGY]  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
81	[BUG]  [BUGGY]  InputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  InputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	InputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
82	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
83	[BUG]  [BUGGY]  this.assemLen  =  os.getLength()  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.getLength()  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.getLength()  +  1;	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
84	[BUG]  [BUGGY]  this.assemLen  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.toByteArray();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.toByteArray();	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
85	[BUG]  [BUGGY]  this.assemLen  =  os.getLength()  +  2;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.getLength()  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.getLength()  +  2;	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
86	[BUG]  [BUGGY]  this.assemLen  =  recordSize.getLength();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize.getLength();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize.getLength();	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
87	[BUG]  [BUGGY]  this.assemLen  =  os.getCharacterEncoding();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.getCharacterEncoding();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.getCharacterEncoding();	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
88	[BUG]  [BUGGY]  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
89	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[blockSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[blockSize];	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
90	[BUG]  [BUGGY]  InputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  InputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	InputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
91	[BUG]  [BUGGY]  this.assemLen  -=  LONGFILE_TRUNCATE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  LONGFILE_TRUNCATE;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  LONGFILE_TRUNCATE;	  this.assemLen    -=    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
92	[BUG]  [BUGGY]  this.assemLen  -=  LONGFILE_GNU  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  LONGFILE_GNU  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  LONGFILE_GNU  +  1;	  this.assemLen    -=    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
93	[BUG]  [BUGGY]  this.assemLen  -=  blockSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  blockSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  blockSize;	  this.assemLen    -=    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
94	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[blockSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[blockSize];	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
95	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
96	[BUG]  [BUGGY]  if(os.getOutputStream()!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.getOutputStream()!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.getOutputStream()!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
97	[BUG]  [BUGGY]  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
98	[BUG]  [BUGGY]  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[blockSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	out  =  os.getOutputStream();  this.assemBuf  =  new  byte[blockSize];	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
99	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  *  3;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  *  3;	  this.assemLen    =    recordSize    +    3;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
100	[BUG]  [BUGGY]  this.assemLen  =  Long.parseLong(currName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  Long.parseLong(currName);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  Long.parseLong(currName);	  this.assemLen    =    currName;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
101	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_ERROR;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_ERROR;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_ERROR;	  this.assemLen    =    currName;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  this.assemLen  =  currName  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  currName  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  currName  +  1;	  this.assemLen    =    currName;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
103	[BUG]  [BUGGY]  this.assemLen  =  new  Long(blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(blockSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(blockSize);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
104	[BUG]  [BUGGY]  this.assemLen  =  new  Long(recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(recordSize  +  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(recordSize  +  1);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
105	[BUG]  [BUGGY]  this.assemLen  =  new  Long(recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(recordSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(recordSize,  recordSize);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
106	[BUG]  [BUGGY]  this.assemLen  =  new  Long(recordSize  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(recordSize  -  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(recordSize  -  1);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
107	[BUG]  [BUGGY]  this.assemLen  =  new  Long(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(blockSize,  recordSize);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
108	[BUG]  [BUGGY]  this.assemLen  =  new  long(recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  long(recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  long(recordSize);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
109	[BUG]  [BUGGY]  if(os.isEnabled())  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.isEnabled())  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.isEnabled())  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
110	[BUG]  [BUGGY]  if(os.readLine()!=  0)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  0)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  0)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
111	[BUG]  [BUGGY]  InputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  InputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	InputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
112	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  5;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  +  5;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  +  5;	  this.assemLen    =    recordSize    +    4;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
113	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  blockSize,  recordSize);	  this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
114	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);	  this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
115	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(buff,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(buff,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(buff,  blockSize,  recordSize);	  this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
116	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  blockSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  blockSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  blockSize);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
117	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  1);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
118	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize,  out);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize,  out);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  recordSize,  out);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
119	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  -  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  -  1);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
120	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize,  0);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  recordSize,  0);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
121	[BUG]  [BUGGY]  this.assemLen  =  blockSize  -  recordSize;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  -  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  -  recordSize;	  this.assemLen    =    blockSize;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
122	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_GNU  +  2;	  this.assemLen    =    LONGFILE_GNU    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
123	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  4;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_GNU  +  4;	  this.assemLen    =    LONGFILE_GNU    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
124	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  0;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  0;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_GNU  +  0;	  this.assemLen    =    LONGFILE_GNU    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
125	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  8;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  /  8;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  /  8;	  this.assemLen    =    recordSize    +    8;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
126	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  8;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  *  8;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  *  8;	  this.assemLen    =    recordSize    +    8;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
127	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  LONGFILE_GNU;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  +  LONGFILE_GNU;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  +  LONGFILE_GNU;	  this.assemLen    =    LONGFILE_GNU    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
128	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  LONGFILE_GNU;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  +  LONGFILE_GNU;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  +  LONGFILE_GNU;	  this.assemLen    =    LONGFILE_GNU    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
129	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  blockSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  blockSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_GNU  +  blockSize;	  this.assemLen    =    LONGFILE_GNU    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
130	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  recordSize  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_GNU  +  recordSize  +  1;	  this.assemLen    =    LONGFILE_GNU    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
131	[BUG]  [BUGGY]  this.assemLen  =  0  +  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  0  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  0  +  recordSize;	  this.assemLen    =    LONGFILE_GNU    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
132	[BUG]  [BUGGY]  this.assemLen  =  recordSize  %  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  %  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  %  2;	  this.assemLen    =    recordSize    -    2;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
133	[BUG]  [BUGGY]  this.assemLen  -=  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  recordSize  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  recordSize  +  1;	  this.assemLen    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
134	[BUG]  [BUGGY]  this.assemLen  -=  recordSize  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  recordSize  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  recordSize  +  2;	  this.assemLen    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
135	[BUG]  [BUGGY]  this.assemLen  -=  recordSize  +  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  recordSize  +  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  recordSize  +  4;	  this.assemLen    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
136	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  blockSize;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  blockSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  +  blockSize;	  this.assemLen    =    System.currentTimeMillis()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
137	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize  -  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  +  recordSize  -  1;	  this.assemLen    =    System.currentTimeMillis()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
138	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  +  recordSize  +  1;	  this.assemLen    =    System.currentTimeMillis()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
139	[BUG]  [BUGGY]  this.assemLen  =  blockSize  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  -  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  -  2;	  this.assemLen    =    blockSize    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
140	[BUG]  [BUGGY]  this.assemLen  -=  recordSize  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  recordSize  -  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  recordSize  -  1;	  this.assemLen    =    blockSize    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
141	[BUG]  [BUGGY]  this.assemLen  =  blockSize  -  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  blockSize  -  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  blockSize  -  4;	  this.assemLen    =    blockSize    -    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
142	[BUG]  [BUGGY]  This.assemLen  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  This.assemLen  =  System.currentTimeMillis();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	This.assemLen  =  System.currentTimeMillis();	  this.assemLen    =    System.currentTimeMillis()    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
143	[BUG]  [BUGGY]  this.assemLen  =  new  byte[out];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[out];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[out];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
144	[BUG]  [BUGGY]  this.assemLen  =  new  byte[len];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[len];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[len];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
145	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  /  recordSize;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize  /  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize  /  recordSize;	  this.assemLen    =    System.currentTimeMillis()    *    recordSize;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
146	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readLine()  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readLine()  +  recordSize;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
147	[BUG]  [BUGGY]  this.assemLen  =  os.readLine()  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readLine()  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readLine()  +  1;	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
148	[BUG]  [BUGGY]  this.assemLen  =  out.readLine();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  out.readLine();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  out.readLine();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
149	[BUG]  [BUGGY]  this.assemLen  =  os.readInt();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readInt();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readInt();	  this.assemLen    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
150	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  *  recordSize;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  *  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  *  recordSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
151	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  2;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
152	[BUG]  [BUGGY]  this.assemLen  =  8;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  8;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  8;	  this.assemLen    =    10;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
153	[BUG]  [BUGGY]  this.assemLen  =  new  short[recordSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  short[recordSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  short[recordSize];	  this.assemLen    =    new    int[recordSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
154	[BUG]  [BUGGY]  this.assemLen  =  new  int[0];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  int[0];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  int[0];	  this.assemLen    =    new    int[recordSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
155	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.recordBuf  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.recordBuf  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);	  this.recordBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
156	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(in,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.recordBuf  =  new  TarBuffer(in,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.recordBuf  =  new  TarBuffer(in,  blockSize,  recordSize);	  this.recordBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
157	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
158	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  OutputStream  out  =  os.readLine();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	OutputStream  out  =  os.readLine();	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
159	[BUG]  [BUGGY]  if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
160	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  recordSize  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  recordSize  -  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_GNU  +  recordSize  -  1;	  this.assemLen    =    LONGFILE_GNU    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
161	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
162	[BUG]  [BUGGY]  if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[out];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	44	None	replace
163	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  /  4;	  this.assemLen    =    System.currentTimeMillis()    /    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
164	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2L;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2L;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  /  2L;	  this.assemLen    =    System.currentTimeMillis()    /    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
165	[BUG]  [BUGGY]  this.assemLen  =  LongFileMode.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LongFileMode.DEFAULT;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LongFileMode.DEFAULT;	  this.assemLen    =    LONGFILE_TRUNCATE;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
166	[BUG]  [BUGGY]  this.assemLen  =  LongFileMode.TRUNCATE;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LongFileMode.TRUNCATE;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LongFileMode.TRUNCATE;	  this.assemLen    =    LONGFILE_TRUNCATE;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
167	[BUG]  [BUGGY]  this.assemLen  -=  out;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  out;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  out;	  this.assemLen    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
168	[BUG]  [BUGGY]  this.assemLen  -=  currBytes;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  currBytes;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  currBytes;	  this.assemLen    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
169	[BUG]  [BUGGY]  this.assemLen  -=  LONGFILE_GNU  +  recordSize;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  LONGFILE_GNU  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  LONGFILE_GNU  +  recordSize;	  this.assemLen    -=    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
170	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
171	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
172	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blocks,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(blocks,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(blocks,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
173	[BUG]  [BUGGY]  this.assemLen  =  new  Long(out);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(out);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(out);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
174	[BUG]  [BUGGY]  this.assemLen  =  new  Long(recordSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(recordSize  +  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(recordSize  +  recordSize);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
175	[BUG]  [BUGGY]  this.assemLen  =  new  byte[lONGFILE_GNU];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  byte[lONGFILE_GNU];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  byte[lONGFILE_GNU];	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
176	[BUG]  [BUGGY]  this.assemLen  =  new  LongFileMode(0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  LongFileMode(0);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  LongFileMode(0);	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
177	[BUG]  [BUGGY]  this.assemLen  =  currName  +  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  currName  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  currName  +  recordSize;	  this.assemLen    =    currName;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
178	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  2);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  2);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
179	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  4);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(blockSize,  recordSize  +  4);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
180	[BUG]  [BUGGY]  final  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  final  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	final  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
181	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputStream();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  OutputStream  out  =  os.getOutputStream();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	OutputStream  out  =  os.getOutputStream();	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
182	[BUG]  [BUGGY]  if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  null)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
183	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
184	[BUG]  [BUGGY]  this.assemLen  =  os.getLength()  +  recordSize;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.getLength()  +  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.getLength()  +  recordSize;	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
185	[BUG]  [BUGGY]  this.assemLen  =  os.getLength()  *  recordSize;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.getLength()  *  recordSize;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.getLength()  *  recordSize;	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
186	[BUG]  [BUGGY]  this.assemLen  =  os.getLength()  +  4;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.getLength()  +  4;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.getLength()  +  4;	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
187	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  10;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  /  10;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  /  10;	  this.assemLen    =    recordSize    /    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
188	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);	  this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
189	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(in,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(in,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(in,  blockSize,  recordSize);	  this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
190	[BUG]  [BUGGY]  if(os  ==  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os  ==  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os  ==  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
191	[BUG]  [BUGGY]  final  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  final  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	final  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
192	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  2;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  -  2;	  this.assemLen    =    System.currentTimeMillis()    -    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
193	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  8;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  8;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  LONGFILE_GNU  +  8;	  this.assemLen    =    LONGFILE_GNU    +    1;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
194	[BUG]  [BUGGY]  if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
195	[BUG]  [BUGGY]  if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
196	[BUG]  [BUGGY]  if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  blockSize)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
197	[BUG]  [BUGGY]  this.assemLen  -=  9;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  9;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  9;	  this.assemLen    -=    8;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
198	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  9;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  -  9;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  -  9;	  this.assemLen    =    recordSize    -    4;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
199	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  0;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  +  0;	  this.assemLen    =    System.currentTimeMillis()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
200	[BUG]  [BUGGY]  this.assemLen  -=  buffer.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  buffer.length;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  buffer.length;	  this.assemLen    -=    recordSize;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
201	[BUG]  [BUGGY]  this.assemLen  =  new  Long(currBytes);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  Long(currBytes);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  Long(currBytes);	  this.assemLen    =    new    Long(recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
202	[BUG]  [BUGGY]  this.assemLen  =  new  LongFileMode(recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  new  LongFileMode(recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  new  LongFileMode(recordSize);	  this.assemLen    =    new    longFileMode;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
203	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  -  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  -  1;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
204	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(block,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(block,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(block,  recordSize);	  this.assemBuf    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
205	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[computeSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  byte[computeSize];  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  byte[computeSize];	  this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	23	None	replace
206	[BUG]  [BUGGY]  this.assemLen  -=  currName;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  currName;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  currName;	  this.assemLen    =    currName;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
207	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(block,  recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemBuf  =  new  TarBuffer(block,  recordSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemBuf  =  new  TarBuffer(block,  recordSize,  recordSize);	  this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
208	[BUG]  [BUGGY]  if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
209	[BUG]  [BUGGY]  if(os.getOutputStream()!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.getOutputStream()!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.getOutputStream()!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
210	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  byte[recordSize];  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
211	[BUG]  [BUGGY]  this.assemLen  -=  blockSize  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  -=  blockSize  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  -=  blockSize  +  1;	  this.assemLen    =    blockSize    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
212	[BUG]  [BUGGY]  this.assemLen  =  os  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os  +  1;	  this.assemLen    =    blockSize    +    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
213	[BUG]  [BUGGY]  if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
214	[BUG]  [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os!=  null)  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
215	[BUG]  [BUGGY]  if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.isRecorded())  {  OutputStream  out  =  os.getOutputStream();  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  }  else  {  System.arraycopy(assemBuf,  0,  this.assemBuf,	  OutputStream    out    =    os.getOutputStream();    this.assemBuf    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
216	[BUG]  [BUGGY]  if(os.readLine()!=  assemBuf)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  assemBuf)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  assemBuf)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
217	[BUG]  [BUGGY]  if(os.readLine()!=  assemBuf)  {  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()!=  assemBuf)  {  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()!=  assemBuf)  {  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
218	[BUG]  [BUGGY]  if(os.readLine()  ==  assemBuf)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  if(os.readLine()  ==  assemBuf)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	if(os.readLine()  ==  assemBuf)  {  OutputStream  out  =  os.readLine();  this.assemBuf  =  new  byte[recordSize];  }	  OutputStream    out    =    os.readLine();    this.assemBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
219	[BUG]  [BUGGY]  this.assemLen  =  os.toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.toString();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.toString();	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
220	[BUG]  [BUGGY]  this.assemLen  =  os.readLong();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  os.readLong();  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  os.readLong();	  this.assemLen    =    os.getLength();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
221	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  recordSize  +  0;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  recordSize  +  0;	  this.assemLen    =    recordSize    +    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
222	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  1;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
223	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  2);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
224	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
225	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2  +  1;  [BUGGY]      this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	this.assemLen  =  System.currentTimeMillis()  /  2  +  1;	  this.assemLen    =    System.currentTimeMillis()    /    2;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
