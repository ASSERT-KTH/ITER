bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  2);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  2);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  4);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  4);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize  +  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize  +  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize)+  1;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize)+  1;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  2;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  2;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize)+  1;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize)+  1;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  4;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  4;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize)+  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize)+  2;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize)+  2;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  -  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  2);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  2);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  2);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  out);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  out);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  out);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  0);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  0);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  0);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  8);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  8);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  8);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  4);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  4);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  buffer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  buffer);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  buffer);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  /  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  blockSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  blockSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  LONGFILE_GNU);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  out);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  out);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  out);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  0);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize,  0);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(this.out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(this.out,  blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(this.out,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  this.blockSize  =  blockSize  +  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.blockSize  =  blockSize  +  recordSize;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.blockSize  =  blockSize  +  recordSize;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  os.write(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  os.write(blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	os.write(blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  TarBuffer  buffer  =  new  TarBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  TarBuffer  buffer  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	TarBuffer  buffer  =  new  TarBuffer(blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  this.assemLen  =  blockSize  +  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.assemLen  =  blockSize  +  recordSize;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.assemLen  =  blockSize  +  recordSize;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  os.close();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  os.close();  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	os.close();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  this.blockSize  =  blockSize;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.blockSize  =  blockSize;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.blockSize  =  blockSize;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputStream();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  OutputStream  out  =  os.getOutputStream();  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	OutputStream  out  =  os.getOutputStream();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  this.buffer  =  buffer.toByteArray();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  buffer.toByteArray();  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  buffer.toByteArray();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  OutputStream  out  =  os.readLine();  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	OutputStream  out  =  os.readLine();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  false);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  4);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  4);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize  +  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize  +  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  0;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  0;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)/  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)/  1;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)/  1;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(recordSize,  blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(recordSize,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  4);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  4);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  4);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  bufferSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  bufferSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  bufferSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize  +  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize  +  recordSize);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  this.closed);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  this.closed);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  this.closed);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  9);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  9);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  9);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize,    out);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
58	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  3);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  3);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  +  3);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  3;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  3;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)+  3;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
60	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)-  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)-  1;  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize)-  1;	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
61	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(len,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(len,  blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(len,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
62	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  recordSize  -  1);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  *  recordSize  -  1);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1L);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize  -  1L);	  this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  this.buffer  =  buffer.getInputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  buffer.getInputStream(blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  buffer.getInputStream(blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  super(os,  blockSize,  recordSize);  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	super(os,  blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  this.currName  =  os.getPropertyName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.currName  =  os.getPropertyName();  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.currName  =  os.getPropertyName();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  this.buffer  =  buffer.getOutputStream();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.buffer  =  buffer.getOutputStream();  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.buffer  =  buffer.getOutputStream();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
68	[BUG]  [BUGGY]  this.currName  =  os.readLine();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;    [BUGGY]  this.currName  =  os.readLine();  [BUGGY]    this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	this.currName  =  os.readLine();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
