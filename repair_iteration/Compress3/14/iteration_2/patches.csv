bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEORFecord();  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
2	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
3	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
4	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished ");	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
5	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finish ");	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
6	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished  by ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished  by ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished  by ");  writeEOFRecord();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
9	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finishing ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finishing ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finishing ");  writeEOFRecord();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
10	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
11	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
12	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
13	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
14	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed. ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
15	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
16	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
17	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
18	[BUG]  [BUGGY]  if(!closed)  {  os.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  os.close();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  os.close();  writeEOFRecord();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
19	[BUG]  [BUGGY]  out.close();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.close();  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.close();  writeEOFRecord();	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
20	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
21	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
22	[BUG]  [BUGGY]  os.write(assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  blockSize);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
23	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  recordSize);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
24	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  buffer.length);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
25	[BUG]  [BUGGY]  os.write(assemBuf,  0,  currSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  currSize);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
26	[BUG]  [BUGGY]  os.write(assemBuf,  0,  currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  currName);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
27	[BUG]  [BUGGY]  os.write(assemBuf,  0,  currBytes);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  currBytes);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
28	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
29	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
30	[BUG]  [BUGGY]  while(!closed)  {  if(buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer!=  null)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
31	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
32	[BUG]  [BUGGY]  os.write(':');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(':');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(':');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
33	[BUG]  [BUGGY]  os.write('0');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('0');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('0');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
34	[BUG]  [BUGGY]  os.write('/');  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('/');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('/');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
35	[BUG]  [BUGGY]  os.write('%');  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('%');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('%');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
36	[BUG]  [BUGGY]  os.write(',');  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(',');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(',');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
37	[BUG]  [BUGGY]  writeEOFRecord(false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  writeEOFRecord(false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord(false);	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
38	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord(true);  }	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
39	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalStateException( " ");  }	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
40	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
41	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeEOFRecord(true);  }  else  {  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord(true);  }  else  {  buffer.flush();  }	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
42	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
43	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
44	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
45	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
46	[BUG]  [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
47	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
48	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
49	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
50	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
51	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
52	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
53	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
54	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
55	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
56	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
57	[BUG]  [BUGGY]  if(closed)  {  if(currName!=  null)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  if(currName!=  null)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  if(currName!=  null)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
58	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
59	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
60	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
61	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
62	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName    ==    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
63	[BUG]  [BUGGY]  if(buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.close();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished ");  buffer.close();	  System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
66	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
67	[BUG]  [BUGGY]  os.setCurrentSize(LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.setCurrentSize(LONGFILE_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.setCurrentSize(LONGFILE_GNU);	  os.finish();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
68	[BUG]  [BUGGY]  os.delete(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.delete(buffer,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.delete(buffer,  0,  buffer.length);	  os.finish();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
69	[BUG]  [BUGGY]  os.setCurrentSize(currSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.setCurrentSize(currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.setCurrentSize(currSize);	  os.finish();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
70	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
71	[BUG]  [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
72	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
73	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
74	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished "  +  currName);	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
75	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
76	[BUG]  [BUGGY]  if(currName  ==  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
77	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
78	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  out.close();  }	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
79	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(currName    ==    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
80	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }	  if(currName    ==    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  if(!closed)  {  os.flush();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  os.flush();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  os.flush();  writeEOFRecord();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
82	[BUG]  [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(os!=  null)  {  os.flush();  writeEOFRecord();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
83	[BUG]  [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  buffer.close();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
84	[BUG]  [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  out.close();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
85	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
86	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
87	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
88	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.   ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.   ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.   ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
89	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
90	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName    ==    null)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
91	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
92	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
93	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
94	[BUG]  [BUGGY]  if(!closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
95	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream  closed ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream  closed ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream  closed ");	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
96	[BUG]  [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
97	[BUG]  [BUGGY]  Writer.info( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.info( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.info( "TarArchiveOutputStream  closed ");  writeEOFRecord();	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
98	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream  closed ");  if(closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream  closed ");  if(closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream  closed ");  if(closed)  {  writeEOFRecord();  }	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
99	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
100	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish();  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
101	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream:  finish ");  writeEOFRecord();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
102	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemLen  +  1);	  os.write(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
103	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemLen  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  assemLen  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemLen  +  2);	  os.write(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
104	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemLen  +  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  assemLen  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemLen  +  4);	  os.write(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
105	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
106	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
107	[BUG]  [BUGGY]  if(!closed)  {  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
108	[BUG]  [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
109	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
110	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  by "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  by "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished  by "  +  currName);  writeEOFRecord();	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
111	[BUG]  [BUGGY]  if(buffer!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
112	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  buffer.flush();	  System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
113	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  buffer.close();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  buffer.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed ");  buffer.close();	  System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
114	[BUG]  [BUGGY]  writeEORFecord();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  writeEORFecord();  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEORFecord();  writeEOFRecord();	  if(!closed)    {    writeEORFecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
115	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }	  if(!closed)    {    writeEORFecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
116	[BUG]  [BUGGY]  readEORFecord();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  readEORFecord();  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	readEORFecord();  writeEOFRecord();	  if(!closed)    {    writeEORFecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
117	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }	  if(!closed)    {    writeEORFecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
118	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
119	[BUG]  [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Error.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();	  System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
120	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream:  finished ");  writeEOFRecord();	  System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
121	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEORFecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
122	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEORFecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
123	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  writeEORFecord();  writeEOFRecord();  }	  if(closed)    {    writeEORFecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
124	[BUG]  [BUGGY]  os.writeEndObject();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.writeEndObject();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.writeEndObject();	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
125	[BUG]  [BUGGY]  os.writeObject(currName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.writeObject(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.writeObject(currName);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
126	[BUG]  [BUGGY]  os.writeInt(assemLen);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.writeInt(assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.writeInt(assemLen);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
127	[BUG]  [BUGGY]  if(this.closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(this.closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEORFecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
128	[BUG]  [BUGGY]  this.buffer.close();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.close();	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
129	[BUG]  [BUGGY]  this.buffer.finish(currName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finish(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish(currName);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
130	[BUG]  [BUGGY]  this.buffer.finish(true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finish(true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish(true);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
131	[BUG]  [BUGGY]  this.buffer.finish(recordBuf);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finish(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish(recordBuf);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
132	[BUG]  [BUGGY]  this.buffer.finishBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finishBytes(recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finishBytes(recordBuf);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
133	[BUG]  [BUGGY]  this.buffer.append('n');  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.append('n');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.append('n');	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
134	[BUG]  [BUGGY]  os.write(assemBuf,  0,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  0);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
135	[BUG]  [BUGGY]  os.write(buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  recordSize);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
136	[BUG]  [BUGGY]  os.write(currName,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(currName,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(currName,  0,  buffer.length);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
137	[BUG]  [BUGGY]  os.write(buffer,  0,  getLength());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  getLength());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  getLength());	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
138	[BUG]  [BUGGY]  os.write(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  size);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  size);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
139	[BUG]  [BUGGY]  if(!closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
140	[BUG]  [BUGGY]  if(closed)  {  writeERROR();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeERROR();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeERROR();  writeEOFRecord();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
141	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
142	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
143	[BUG]  [BUGGY]  readERROR();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  readERROR();  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	readERROR();  writeEOFRecord();	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
144	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
145	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  buffer.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buffer.length  +  1);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
146	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  buffer.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buffer.length  -  1);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
147	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  +  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  buffer.length  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buffer.length  +  2);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
148	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  +  4);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  buffer.length  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buffer.length  +  4);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
149	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  -  2);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  buffer.length  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buffer.length  -  2);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
150	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished. ");	  System.err.println(   "TarArchiveOutputStream:    finished   ");    	non-compiled	[CE]  <identifier>  expected	98	None	replace
151	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finish ");	  System.err.println(   "TarArchiveOutputStream:    finished   ");    	non-compiled	[CE]  <identifier>  expected	98	None	replace
152	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  by ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  by ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished  by ");	  System.err.println(   "TarArchiveOutputStream:    finished   ");    	non-compiled	[CE]  <identifier>  expected	98	None	replace
153	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished "  +  this);	  System.err.println(   "TarArchiveOutputStream:    finished   ");    	non-compiled	[CE]  <identifier>  expected	98	None	replace
154	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  closed ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  closed ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  closed ");	  System.err.println(   "TarArchiveOutputStream:    finished   ");    	non-compiled	[CE]  <identifier>  expected	98	None	replace
155	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
156	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
157	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
158	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
159	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
160	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
161	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
162	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
163	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
164	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
165	[BUG]  [BUGGY]  Os.write(assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Os.write(assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(assemBuf,  0,  os.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
166	[BUG]  [BUGGY]  Os.write(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Os.write(buffer,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(buffer,  0,  buffer.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
167	[BUG]  [BUGGY]  Os.write(buffer,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Os.write(buffer,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(buffer,  0,  os.length  +  1);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
168	[BUG]  [BUGGY]  Os.write(assemBuffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Os.write(assemBuffer,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(assemBuffer,  0,  os.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
169	[BUG]  [BUGGY]  Os.write(os,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Os.write(os,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(os,  0,  buffer.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
170	[BUG]  [BUGGY]  Os.write(buffer,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Os.write(buffer,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(buffer,  0,  os.length  -  1);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
171	[BUG]  [BUGGY]  if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  readEOFRecord();  writeEOFRecord();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
172	[BUG]  [BUGGY]  if(closed)  {  readEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  readEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  readEOFRecord();  writeEOFRecord();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
173	[BUG]  [BUGGY]  if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  finish();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
174	[BUG]  [BUGGY]  if(closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  finish();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
175	[BUG]  [BUGGY]  if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  readEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
176	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
177	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
178	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
179	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
180	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
181	[BUG]  [BUGGY]  while(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
182	[BUG]  [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
183	[BUG]  [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  while(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
184	[BUG]  [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  while(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
185	[BUG]  [BUGGY]  if(!closed)  {  while(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  while(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  while(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
186	[BUG]  [BUGGY]  if(buffer!=  null)  {  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
187	[BUG]  [BUGGY]  if(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
188	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
189	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
190	[BUG]  [BUGGY]  if(buffer!=  null)  {  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
191	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
192	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
193	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
194	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  else  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  else  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  else  {  writeEOFRecord();  }	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
195	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.finish();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.finish();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.finish();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
196	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finish "  +  currName);  buffer.flush();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
197	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished.   "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
198	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished.n ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished.n ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished.n ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
199	[BUG]  [BUGGY]  if(!closed)  {  WriteEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  WriteEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  WriteEOFRecord();  writeEOFRecord();  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
200	[BUG]  [BUGGY]  if(closed)  {  WriteEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  WriteEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  WriteEOFRecord();  writeEOFRecord();  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
201	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  finish();  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
202	[BUG]  [BUGGY]  if(!closed)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  finish();  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
203	[BUG]  [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
204	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
205	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  else  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  else  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  else  {  writeEOFRecord();  }	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
206	[BUG]  [BUGGY]  os.write(buffer,  currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  currName);	  os.write(currName);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
207	[BUG]  [BUGGY]  os.write(String.valueOf(currName));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(String.valueOf(currName));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(String.valueOf(currName));	  os.write(currName);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
208	[BUG]  [BUGGY]  os.write(buffer.toString());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer.toString());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer.toString());	  os.write(currName);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
209	[BUG]  [BUGGY]  os.write(currName,  0,  currSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(currName,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(currName,  0,  currSize);	  os.write(currName);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
210	[BUG]  [BUGGY]  if(!closed)  {  if(currName!=  null)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  if(currName!=  null)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  if(currName!=  null)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append(currName);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
211	[BUG]  [BUGGY]  if(closed)  {  if(currName  ==  null)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  if(currName  ==  null)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  if(currName  ==  null)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append(currName);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
212	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length()  >  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length()  >  0)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
213	[BUG]  [BUGGY]  while(!closed)  {  buffer.append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  buffer.append('n');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  buffer.append('n');	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
214	[BUG]  [BUGGY]  if(isClosed())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isClosed())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isClosed())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
215	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream:  finished "  +  currName);	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
216	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
217	[BUG]  [BUGGY]  if(currName  ==  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
218	[BUG]  [BUGGY]  Writer.info( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.info( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.info( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
219	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.close();  }	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
220	[BUG]  [BUGGY]  Writer.info( "TarArchiveOutputStream:  finished "  +  currName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.info( "TarArchiveOutputStream:  finished "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.info( "TarArchiveOutputStream:  finished "  +  currName);	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
221	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  }	  if(currName    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
222	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }	  if(currName    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
223	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }	  if(currName    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
224	[BUG]  [BUGGY]  if(currName  ==  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
225	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
226	[BUG]  [BUGGY]  if(buffer!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
227	[BUG]  [BUGGY]  if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  completed "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  completed "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  completed "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
228	[BUG]  [BUGGY]  readEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  readEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	readEOFRecord();	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
229	[BUG]  [BUGGY]  if(closed  ||  writeEOFRecord())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  writeEOFRecord())  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  writeEOFRecord())  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
230	[BUG]  [BUGGY]  if(closed  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  currName.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  currName.length()  ==  0)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
231	[BUG]  [BUGGY]  if(!closed)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
232	[BUG]  [BUGGY]  if(buffer!=  null)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
233	[BUG]  [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Error.println( "TarArchiveOutputStream:  finished ");	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
234	[BUG]  [BUGGY]  if(closed)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
235	[BUG]  [BUGGY]  final  TarArchiveOutputStream.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  final  TarArchiveOutputStream.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	final  TarArchiveOutputStream.println( "TarArchiveOutputStream:  finished ");  buffer.flush();	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
236	[BUG]  [BUGGY]  final  TarArchiveOutputStream.println( "TarArchiveOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  final  TarArchiveOutputStream.println( "TarArchiveOutputStream:  finished ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	final  TarArchiveOutputStream.println( "TarArchiveOutputStream:  finished ");	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
237	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished ");	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
238	[BUG]  [BUGGY]  if(!closed)  {  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
239	[BUG]  [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
240	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished ");  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished ");  if(!closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished ");  if(!closed)  {  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
241	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished  by ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished  by ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished  by ");  writeEOFRecord();	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
242	[BUG]  [BUGGY]  final  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  final  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	final  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
243	[BUG]  [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
244	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
245	[BUG]  [BUGGY]  Error.println( "TarArchiveOutputStream  closed ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Error.println( "TarArchiveOutputStream  closed ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Error.println( "TarArchiveOutputStream  closed ");  buffer.flush();	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
246	[BUG]  [BUGGY]  if(!this.closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!this.closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!this.closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
247	[BUG]  [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
248	[BUG]  [BUGGY]  if(currName  ==  null)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
249	[BUG]  [BUGGY]  if(currName!=  null)  {  out.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  out.close();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  out.close();  writeEOFRecord();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
250	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
251	[BUG]  [BUGGY]  if(currName  ==  null)  {  out.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  out.close();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  out.close();  writeEOFRecord();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
252	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.close();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  out.close();  writeEOFRecord();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
253	[BUG]  [BUGGY]  if(!this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
254	[BUG]  [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
255	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
256	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
257	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()!=    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
258	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()!=    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
259	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
260	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed: "  +  currName);	  System.err.println(   "TarArchiveOutputStream    closed   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
261	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed "  +  currName);	  System.err.println(   "TarArchiveOutputStream    closed   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
262	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed. ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed. ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed. ");	  System.err.println(   "TarArchiveOutputStream    closed   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
263	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed! ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed! ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed! ");	  System.err.println(   "TarArchiveOutputStream    closed   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
264	[BUG]  [BUGGY]  System.err.println( "JarArchiveOutputStream  closed ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "JarArchiveOutputStream  closed ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "JarArchiveOutputStream  closed ");	  System.err.println(   "TarArchiveOutputStream    closed   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
265	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ",  currName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ",  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed ",  currName);	  System.err.println(   "TarArchiveOutputStream    closed   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
266	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
267	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
268	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
269	[BUG]  [BUGGY]  os.write('n',  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('n',  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('n',  4);	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
270	[BUG]  [BUGGY]  os.write('N');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('N');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('N');	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
271	[BUG]  [BUGGY]  os.write('#');  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('#');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('#');	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
272	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
273	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
274	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  writeEORFecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeEOFRecord();  writeEORFecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  writeEORFecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
275	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currSize);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currSize);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
276	[BUG]  [BUGGY]  os.writeEnd().flush();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.writeEnd().flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.writeEnd().flush();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
277	[BUG]  [BUGGY]  os.writeStartObject().flush();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.writeStartObject().flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.writeStartObject().flush();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
278	[BUG]  [BUGGY]  os.defaultReader().write(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.defaultReader().write(buffer,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.defaultReader().write(buffer,  0,  buffer.length);	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
279	[BUG]  [BUGGY]  os.defaultReader().close();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.defaultReader().close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.defaultReader().close();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
280	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
281	[BUG]  [BUGGY]  Error.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Error.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Error.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
282	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    out.write(currName);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
283	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    out.write(currName);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
284	[BUG]  [BUGGY]  out.write('n');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write('n');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write('n');	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
285	[BUG]  [BUGGY]  out.write(buffer,  currName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(buffer,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(buffer,  currName);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
286	[BUG]  [BUGGY]  out.write(assemBuf,  currName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(assemBuf,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(assemBuf,  currName);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
287	[BUG]  [BUGGY]  out.write(assemBuf);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(assemBuf);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
288	[BUG]  [BUGGY]  out.write('  ');  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write('  ');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write('  ');	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
289	[BUG]  [BUGGY]  out.write(assemBuf,  0,  currName.length);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(assemBuf,  0,  currName.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(assemBuf,  0,  currName.length);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
290	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buf.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  buf.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  buf.length  -  1);	  os.write(assemBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
291	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buf.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  buf.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  buf.length  +  1);	  os.write(assemBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
292	[BUG]  [BUGGY]  os.write(buffer,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  buf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buf.length);	  os.write(assemBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
293	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buf.length  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  buf.length  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  buf.length  -  2);	  os.write(assemBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
294	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buf.length  -  4);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  buf.length  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  buf.length  -  4);	  os.write(assemBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
295	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
296	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
297	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
298	[BUG]  [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
299	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  closed  =!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  final  EOFRecord  <  K,  V>  closed  =!closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	final  EOFRecord  <  K,  V>  closed  =!closed)  {  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
300	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
301	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
302	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
303	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed!   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
304	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed!   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
305	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed!n ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed!n ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed!n ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed!   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
306	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed!   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
307	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream  closed! ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed!   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
308	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream  closed ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream  closed ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream  closed ");	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
309	[BUG]  [BUGGY]  if(!closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
310	[BUG]  [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
311	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream  closed ");  if(closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream  closed ");  if(closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream  closed ");  if(closed)  {  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
312	[BUG]  [BUGGY]  if(!closed)  {  Writer.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  Writer.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  Writer.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
313	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
314	[BUG]  [BUGGY]  if(currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
315	[BUG]  [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  finish();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  finish();  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
316	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
317	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  by "  +  currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  by "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished  by "  +  currName);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
318	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  with  curr  name "  +  currName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  with  curr  name "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished  with  curr  name "  +  currName);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
319	[BUG]  [BUGGY]  System.err.println( "JarArchiveOutputStream:  finished "  +  currName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "JarArchiveOutputStream:  finished "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "JarArchiveOutputStream:  finished "  +  currName);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
320	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName,  buffer);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName,  buffer);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished "  +  currName,  buffer);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
321	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finish "  +  currName);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
322	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
323	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed!n ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed!n ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed!n ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed!   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
324	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
325	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
326	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.close();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
327	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.n ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
328	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.   "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.   "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed.   "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
329	[BUG]  [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.flush();  }	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
330	[BUG]  [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.finish();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.finish();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.finish();  }	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
331	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
332	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish. ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish. ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
333	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
334	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEORFecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
335	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ".getMessage());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ".getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed ".getMessage());	  System.err.println(   "TarArchiveOutputStream    closed   ");    	non-compiled	[CE]  <identifier>  expected	88	None	replace
336	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  recordBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  recordBuf.length);	  os.write(assemBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
337	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
338	[BUG]  [BUGGY]  os.write(buffer,  0,  writeEOFRecord());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  writeEOFRecord());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  writeEOFRecord());	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
339	[BUG]  [BUGGY]  os.write(buffer,  0,  currName.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  currName.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  currName.length);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
340	[BUG]  [BUGGY]  os.write(buffer,  0,  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  1);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
341	[BUG]  [BUGGY]  os.write(currName,  0,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(currName,  0,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(currName,  0,  0);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
342	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarOutputStream  closed ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
343	[BUG]  [BUGGY]  WriteEORFecord();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  WriteEORFecord();  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	WriteEORFecord();  writeEOFRecord();	  if(!closed)    {    writeEORFecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
344	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
345	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length!=  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
346	[BUG]  [BUGGY]  if(closed)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
347	[BUG]  [BUGGY]  if(closed)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
348	[BUG]  [BUGGY]  buffer.append('n');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  buffer.append('n');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	buffer.append('n');	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
349	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
350	[BUG]  [BUGGY]  if(closed)  {  writeERROR();  writeERROR();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeERROR();  writeERROR();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeERROR();  writeERROR();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
351	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  buffer.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  buffer.close();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
352	[BUG]  [BUGGY]  if(currName!=  null)  {  out.flush();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  out.flush();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  out.flush();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
353	[BUG]  [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.flush();  }	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
354	[BUG]  [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.finish();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.finish();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.finish();  }	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
355	[BUG]  [BUGGY]  if(currName!=  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName    ==    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
356	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
357	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
358	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished  on "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished  on "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished  on "  +  currName);  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
359	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
360	[BUG]  [BUGGY]  Writer.getInstance().println( "TarOutputStream:  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarOutputStream:  finished "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarOutputStream:  finished "  +  currName);  buffer.flush();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
361	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish "  +  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finish "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finish "  +  currName);	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
362	[BUG]  [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
363	[BUG]  [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
364	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
365	[BUG]  [BUGGY]  os.write('>');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('>');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('>');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
366	[BUG]  [BUGGY]  os.write(']');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(']');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(']');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
367	[BUG]  [BUGGY]  if(closed)  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append(currName);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
368	[BUG]  [BUGGY]  if(closed)  {  buffer.append('n');  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  buffer.append('n');  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  buffer.append('n');  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append(currName);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
369	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
370	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarOutputStream:  finished. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarOutputStream:  finished. ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarOutputStream:  finished. ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
371	[BUG]  [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
372	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  buffer.length  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buffer.length  -  4);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
373	[BUG]  [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
374	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
375	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closing ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closing ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closing ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
376	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
377	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarOutputStream:  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarOutputStream:  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarOutputStream:  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
378	[BUG]  [BUGGY]  os.endObject();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.endObject();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.endObject();	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
379	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed "  +  currName);  writeEOFRecord();	  System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
380	[BUG]  [BUGGY]  System.err.println( "TarOutputStream  closed ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarOutputStream  closed ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarOutputStream  closed ");  writeEOFRecord();	  System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
381	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.close();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
382	[BUG]  [BUGGY]  os.write(assemBuf,  0,  writeEOFRecord());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  writeEOFRecord());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  writeEOFRecord());	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
383	[BUG]  [BUGGY]  os.write(assemBuf,  0,  length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  length);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
384	[BUG]  [BUGGY]  this.buffer.finish(assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finish(assemBuf,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish(assemBuf,  0,  assemLen);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
385	[BUG]  [BUGGY]  this.buffer.finish(assemBuf);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finish(assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish(assemBuf);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
386	[BUG]  [BUGGY]  out.write(buffer,  0,  currSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(buffer,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(buffer,  0,  currSize);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
387	[BUG]  [BUGGY]  out.write(assemBuf,  0,  currSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(assemBuf,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(assemBuf,  0,  currSize);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
388	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
389	[BUG]  [BUGGY]  if(closed  ||  currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
390	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
391	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length()  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length()  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length()  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
392	[BUG]  [BUGGY]  OutputStream  out  =  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  OutputStream  out  =  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	OutputStream  out  =  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
393	[BUG]  [BUGGY]  System.err.println( "JarArchiveOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "JarArchiveOutputStream:  finished ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "JarArchiveOutputStream:  finished ");	  System.err.println(   "TarArchiveOutputStream:    finished   ");    	non-compiled	[CE]  <identifier>  expected	98	None	replace
394	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName!=  null)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName!=  null)  {  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
395	[BUG]  [BUGGY]  System.err.println( "TarOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarOutputStream:  finished ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarOutputStream:  finished ");  writeEOFRecord();	  System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
396	[BUG]  [BUGGY]  writeEOFRecord(true,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  writeEOFRecord(true,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord(true,  0);	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
397	[BUG]  [BUGGY]  writeEOFRecord(true,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  writeEOFRecord(true,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord(true,  false);	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
398	[BUG]  [BUGGY]  writeEOFRecord(true,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  writeEOFRecord(true,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord(true,  true);	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
399	[BUG]  [BUGGY]  writeEOFRecord(null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  writeEOFRecord(null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord(null);	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
400	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
401	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEORFecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
402	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEORFecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEORFecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEORFecord();  writeEOFRecord();  }	  if(closed)    {    writeEORFecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
403	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish "  +  currName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finish "  +  currName);	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
404	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.flush();  }	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
405	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.append('n');  }	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
406	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
407	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
408	[BUG]  [BUGGY]  os.write('n',  8);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('n',  8);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('n',  8);	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
409	[BUG]  [BUGGY]  if(!closed)  {  writeERROR();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  writeERROR();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeERROR();  writeEOFRecord();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
410	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
411	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(recordBuf!=  null)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(recordBuf!=  null)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
412	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeERROR();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeERROR();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeERROR();  writeEOFRecord();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
413	[BUG]  [BUGGY]  if(isClosed())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isClosed())  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isClosed())  {  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
414	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
415	[BUG]  [BUGGY]  if(closed)  {  writeEOFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeEOFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
416	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
417	[BUG]  [BUGGY]  System.err.println(currName  + "TarArchiveOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println(currName  + "TarArchiveOutputStream:  finished ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println(currName  + "TarArchiveOutputStream:  finished ");	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
418	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  with  curr  ' "  +  currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  with  curr  ' "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished  with  curr  ' "  +  currName);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
419	[BUG]  [BUGGY]  os.writeEnd();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.writeEnd();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.writeEnd();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
420	[BUG]  [BUGGY]  os.defaultReader().finish();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.defaultReader().finish();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.defaultReader().finish();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
421	[BUG]  [BUGGY]  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarOutputStream:  finished ");  buffer.flush();	  System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
422	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.   "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.   "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed.   "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
423	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemLen  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  assemLen  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemLen  -  1);	  os.write(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
424	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream:  finish "  +  currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream:  finish "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream:  finish "  +  currName);	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
425	[BUG]  [BUGGY]  if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  else  {  buffer.flush();  }	  Writer.log(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
426	[BUG]  [BUGGY]  Os.write(currName,  0,  os.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Os.write(currName,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(currName,  0,  os.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	109	None	replace
427	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(currName    ==    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
428	[BUG]  [BUGGY]  if(currName!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
429	[BUG]  [BUGGY]  if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
430	[BUG]  [BUGGY]  Writer.getInstance().println( "TarOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarOutputStream:  finished ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarOutputStream:  finished ");	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
431	[BUG]  [BUGGY]  Writer.getInstance().println( "TarOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarOutputStream:  finished ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarOutputStream:  finished ");  writeEOFRecord();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
432	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finishing ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finishing ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finishing ");	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
433	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  buffer.length  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
434	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
435	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(isEnabled(Feature.QUOTE_FIELD_NAMES))    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
436	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
437	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
438	[BUG]  [BUGGY]  if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
439	[BUG]  [BUGGY]  Error.println( "TarOutputStream:  finished ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Error.println( "TarOutputStream:  finished ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Error.println( "TarOutputStream:  finished ");  buffer.flush();	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
440	[BUG]  [BUGGY]  final  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  final  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	final  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
441	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish. ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish. ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
442	[BUG]  [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
443	[BUG]  [BUGGY]  if(this.closed)  {  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(this.closed)  {  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  System.err.println( "TarOutputStream:  finished ");  buffer.flush();  }	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
444	[BUG]  [BUGGY]  if(currName!=  null)  {  readEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  readEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  readEOFRecord();  writeEOFRecord();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
445	[BUG]  [BUGGY]  if(currName  ==  null)  {  readEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  readEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  readEOFRecord();  writeEOFRecord();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
446	[BUG]  [BUGGY]  if(currName!=  null)  {  readEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {  readEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  readEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
447	[BUG]  [BUGGY]  if(currName  ==  null)  {  readEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null)  {  readEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  readEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  readEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
448	[BUG]  [BUGGY]  System.err.println( "TarOutputStream:  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarOutputStream:  finished "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarOutputStream:  finished "  +  currName);  buffer.flush();	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
449	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finish "  +  currName);  buffer.flush();	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
450	[BUG]  [BUGGY]  System.err.println( "JarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "JarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "JarArchiveOutputStream:  finished "  +  currName);  buffer.flush();	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
451	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed "  +  currName);  buffer.flush();	  System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
452	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finish ");	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
453	[BUG]  [BUGGY]  Writer.println( "TarOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarOutputStream:  finished ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarOutputStream:  finished ");  writeEOFRecord();	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
454	[BUG]  [BUGGY]  if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
455	[BUG]  [BUGGY]  if(closed)  {  writeIORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeIORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeIORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEORFecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
456	[BUG]  [BUGGY]  if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
457	[BUG]  [BUGGY]  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
458	[BUG]  [BUGGY]  if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeIOFRecord();  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
459	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
460	[BUG]  [BUGGY]  final  String  currName  =  currName.trim();  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  final  String  currName  =  currName.trim();  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	final  String  currName  =  currName.trim();  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
461	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    out.write(currName);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
462	[BUG]  [BUGGY]  this.buffer.append(currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.append(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.append(currName);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
463	[BUG]  [BUGGY]  this.buffer.finish(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finish(buffer,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish(buffer,  0,  buffer.length);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
464	[BUG]  [BUGGY]  this.buffer.finish(buffer,  0,  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  this.buffer.finish(buffer,  0,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish(buffer,  0,  0);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
465	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
466	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed: "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
467	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
468	[BUG]  [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  buffer.flush();  }	  if(this.closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
469	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
470	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
471	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
472	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
473	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
474	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {    if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
475	[BUG]  [BUGGY]  os.write(currName,  0,  currBytes);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(currName,  0,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(currName,  0,  currBytes);	  os.write(currName);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
476	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName,  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName,  LONGFILE_ERROR);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished "  +  currName,  LONGFILE_ERROR);	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
477	[BUG]  [BUGGY]  out.write(buffer,  0,  currName.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(buffer,  0,  currName.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(buffer,  0,  currName.length);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
478	[BUG]  [BUGGY]  out.write(currName,  0,  currSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  out.write(currName,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(currName,  0,  currSize);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
479	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
480	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  out.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  out.close();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  out.close();  writeEOFRecord();  }	  if(currName!=    null)    {    out.close();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
481	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
482	[BUG]  [BUGGY]  os.write(buffer,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  blockSize);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
483	[BUG]  [BUGGY]  os.write(buffer,  0,  currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(buffer,  0,  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  currName);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
484	[BUG]  [BUGGY]  if(isRecorded())  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(isRecorded())  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isRecorded())  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
485	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
486	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream    closed.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
487	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finishing ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finishing ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finishing ");  writeEOFRecord();	  Writer.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
488	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish() ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish() ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish() ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
489	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finish ");  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finish ");  buffer.flush();	  System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
490	[BUG]  [BUGGY]  writeEOFRecord(false,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  writeEOFRecord(false,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord(false,  true);	  writeEOFRecord(true);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
491	[BUG]  [BUGGY]  while(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
492	[BUG]  [BUGGY]  while(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
493	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  closing ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  closing ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  closing ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
494	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
495	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished! ");  writeEOFRecord();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
496	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName    ==    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
497	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
498	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
499	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >=  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
500	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed!   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
501	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.close();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
502	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()!=    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
503	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
504	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length  >  0  ||  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length  >  0  ||  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length  >  0  ||  buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
505	[BUG]  [BUGGY]  if(closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
506	[BUG]  [BUGGY]  if(closed)  {  while(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  while(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  while(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
507	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length  >  0  ||  buffer.length  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  if(buffer.length  >  0  ||  buffer.length  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length  >  0  ||  buffer.length  <  =  0)  {  writeEOFRecord();  writeEOFRecord();  }	  while(!closed)    {    if(buffer.length    >    0)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
508	[BUG]  [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.append('n');  }	  Writer.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
509	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
510	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
511	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish() ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish() ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish() ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finish   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
512	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finish "  +  currName);  writeEOFRecord();	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
513	[BUG]  [BUGGY]  Writer.println(buffer,   "TarArchiveOutputStream:  finished "  +  currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println(buffer,   "TarArchiveOutputStream:  finished "  +  currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println(buffer,   "TarArchiveOutputStream:  finished "  +  currName);	  Writer.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
514	[BUG]  [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  buffer.close();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  buffer.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Error.println( "TarArchiveOutputStream:  finished ");  buffer.close();	  Error.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
515	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
516	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
517	[BUG]  [BUGGY]  os.writeObject(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.writeObject(buffer,  0,  buffer.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.writeObject(buffer,  0,  buffer.length);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
518	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemLen  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  assemLen  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemLen  +  3);	  os.write(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
519	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  with  curr  name "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished  with  curr  name "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished  with  curr  name "  +  currName);  buffer.flush();	  System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
520	[BUG]  [BUGGY]  if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
521	[BUG]  [BUGGY]  if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
522	[BUG]  [BUGGY]  if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append( "n ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append( "n ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append( "n ");  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
523	[BUG]  [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }	  writeEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
524	[BUG]  [BUGGY]  Writer.getInstance().println(currName  + ":  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.getInstance().println(currName  + ":  finished "  +  currName);  buffer.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println(currName  + ":  finished "  +  currName);  buffer.flush();	  Writer.getInstance().println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
525	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
526	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
527	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.append(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.append(currName);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
528	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
529	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.append(currName);  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
530	[BUG]  [BUGGY]  while(!closed)  {  writeERROR();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  while(!closed)  {  writeERROR();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  writeERROR();  writeEOFRecord();  }	  if(closed)    {    writeERROR();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
531	[BUG]  [BUGGY]  if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeIOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
532	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
533	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finishing ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  System.err.println( "TarArchiveOutputStream:  finishing ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finishing ");	  System.err.println(   "TarArchiveOutputStream:    finished   ");    	non-compiled	[CE]  <identifier>  expected	98	None	replace
534	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".js "))  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".js "))  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.endsWith( ".js "))  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(currName!=    null)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
535	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
536	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemBuf,  0,  assemSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemSize  +  1);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
537	[BUG]  [BUGGY]  os.write(assemLen,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write(assemLen,  0,  assemSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemLen,  0,  assemSize);	  os.write(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
538	[BUG]  [BUGGY]  if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
539	[BUG]  [BUGGY]  os.write('-');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('-');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('-');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	52	None	replace
540	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished.   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
541	[BUG]  [BUGGY]  if(!closed  &&  writeEOFRecord())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!closed  &&  writeEOFRecord())  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed  &&  writeEOFRecord())  {  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
542	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName    ==    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
543	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName    ==    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
544	[BUG]  [BUGGY]  if(!finished)  {  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(!finished)  {  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!finished)  {  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }	  System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
545	[BUG]  [BUGGY]  if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  buffer.append('n');  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
546	[BUG]  [BUGGY]  if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(buffer!=  null)  {  WriteEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  WriteEOFRecord();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
547	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
548	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
549	[BUG]  [BUGGY]  if(closed)  {  buffer.append('n');  }  else  {  buffer.append('r');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  buffer.append('n');  }  else  {  buffer.append('r');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  buffer.append('n');  }  else  {  buffer.append('r');  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append(currName);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
550	[BUG]  [BUGGY]  if(closed)  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  buffer.append(LONGFILE_GNU);  }	  if(currName!=    null)    {    buffer.append(currName);    }    else    {    buffer.append(currName);    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
551	[BUG]  [BUGGY]  os.write('n',  'n');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  os.write('n',  'n');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('n',  'n');	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	49	None	replace
552	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  }	  if(closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
553	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }	  if(currName    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
554	[BUG]  [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();      [BUGGY]  if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  else  {  buffer.append('n');  }	  Writer.log(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
