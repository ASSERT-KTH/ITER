bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord();  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  writeEOFRecord();  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Error.println( "TarArchiveOutputStream:  finished ");  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
14	[BUG]  [BUGGY]  writeEOFRecord();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  writeEOFRecord();  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord();  writeEOFRecord();	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
16	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished "  +  currName);	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  while(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  while(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	while(!closed)  {  if(buffer.length  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.write(currName);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  out.close();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {!closed)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
39	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  readEOFRecord();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  readEOFRecord();  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	readEOFRecord();  writeEOFRecord();	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  WriteEOFRecord();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  WriteEOFRecord();  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	WriteEOFRecord();  writeEOFRecord();	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEORFecord();  writeEOFRecord();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
45	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
49	[BUG]  [BUGGY]  os.write('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write('n');  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('n');	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write(buffer,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  buffer.length);	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  os.defaultReader().flush();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.defaultReader().flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.defaultReader().flush();	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  os.write('ufffd');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write('ufffd');  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write('ufffd');	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  os.defaultWriteObject();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.defaultWriteObject();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.defaultWriteObject();	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
54	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
55	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
56	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
57	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
58	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream  closed! ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
59	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write(assemBuf,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemLen);	  os.close();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
60	[BUG]  [BUGGY]  os.write(assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write(assemBuf,  0,  assemSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  assemSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write(assemBuf,  0,  buf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(assemBuf,  0,  buf.length);	  os.close();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
62	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream  closed ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream  closed ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  os.write(buffer,  0,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write(buffer,  0,  0);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(buffer,  0,  0);	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  os.write(currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.write(currName);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.write(currName);	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.println( "TarArchiveOutputStream:  finished ");  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
71	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
72	[BUG]  [BUGGY]  os.close();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.close();  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.close();  writeEOFRecord();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  this.buffer.finish();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  this.buffer.finish();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	this.buffer.finish();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  os.flush();  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.flush();  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.flush();  writeEOFRecord();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
75	[BUG]  [BUGGY]  out.write(currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  out.write(currName);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	out.write(currName);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
76	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.getInstance().println( "TarArchiveOutputStream:  finished "  +  currName);  buffer.flush();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
78	[BUG]  [BUGGY]  os.finish();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  os.finish();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	os.finish();	  os.close();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEORFecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
81	[BUG]  [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
82	[BUG]  [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
83	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
84	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
85	[BUG]  [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
86	[BUG]  [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
87	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream  closed. ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
88	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream  closed ");  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream  closed ");	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
89	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
90	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
91	[BUG]  [BUGGY]  writeEOFRecord(true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  writeEOFRecord(true);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	writeEOFRecord(true);	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
92	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
93	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finish ");  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
94	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  buffer.append(currName);  }  else  {  buffer.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.append(currName);  }  else  {  buffer.append(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  buffer.append(currName);  }  else  {  buffer.append(currName);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  buffer.append(currName);  }  else  {  buffer.append(currName);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
96	[BUG]  [BUGGY]  if(currName!=  null)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null)  {  out.close();  writeEOFRecord();  }  else  {  buffer.close();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
97	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream:  finished ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
98	[BUG]  [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  System.err.println( "TarArchiveOutputStream:  finished ");  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	System.err.println( "TarArchiveOutputStream:  finished ");	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
99	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
100	[BUG]  [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
101	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
102	[BUG]  [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(this.closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(this.closed)  {  System.err.println( "TarArchiveOutputStream  closed ");  buffer.flush();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream    closed   ");    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
103	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.write(assemBuf,  0,  currName);  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.write(assemBuf,    0,    currName);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
104	[BUG]  [BUGGY]  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(closed)  {  writeERROR();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
105	[BUG]  [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Writer.log( "TarArchiveOutputStream:  finished "  +  currName);  writeEOFRecord();	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
106	[BUG]  [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(!closed)  {  System.err.println( "TarArchiveOutputStream:  finished. "  +  currName);  writeEOFRecord();  }	  if(!closed)    {    System.err.println(   "TarArchiveOutputStream:    finished   "    +    currName);    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
107	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
108	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  writeEOFRecord();  writeEOFRecord();  }	  if(currName!=    null)    {    writeEOFRecord();    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
109	[BUG]  [BUGGY]  Os.write(buffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  finish()  throws  IOException  {  writeEOFRecord();  writeEOFRecord();    [BUGGY]  Os.write(buffer,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	Os.write(buffer,  0,  os.length);	  os.flush();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
