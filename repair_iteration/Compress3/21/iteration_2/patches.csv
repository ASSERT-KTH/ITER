bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  currSize  =  entry.getCurrentSize()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getCurrentSize()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getCurrentSize()  +  1;	  currSize    =    entry.getCurrentSize();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
2	[BUG]  [BUGGY]  currSize  =  entry.getCurrentDirectory();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getCurrentDirectory();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getCurrentDirectory();	  currSize    =    entry.getCurrentSize();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
3	[BUG]  [BUGGY]  currSize  =  entry.getCurrentSize()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getCurrentSize()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getCurrentSize()  -  1;	  currSize    =    entry.getCurrentSize();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
4	[BUG]  [BUGGY]  currSize  =  entry.getUpperBlockSize()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBlockSize()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBlockSize()  -  1;	  currSize    =    entry.getBlockSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
5	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName)-  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName)-  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName)-  1;	  currSize    =    entry.getBytes()    -    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
6	[BUG]  [BUGGY]  currSize  =  entry.getBytes()  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes()  *  1;	  currSize    =    entry.getBytes()    -    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
7	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName).getBytes()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName).getBytes()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName).getBytes()  -  1;	  currSize    =    entry.getBytes()    -    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
8	[BUG]  [BUGGY]  currSize  =  entry.getKey()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getKey()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getKey()  -  1;	  currSize    =    entry.getValue()    -    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
9	[BUG]  [BUGGY]  currSize  =  entry.getValue()  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getValue()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getValue()  *  1;	  currSize    =    entry.getValue()    -    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
10	[BUG]  [BUGGY]  currSize  =  entry.getLowerBytes(recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerBytes(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBytes(recordSize);	  currSize    =    entry.getUpperBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
11	[BUG]  [BUGGY]  currSize  =  entry.getLowerBytes(currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerBytes(currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBytes(currName);	  currSize    =    entry.getUpperBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
12	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(currName,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(currName,  LONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(currName,  LONGFILE_GNU);	  currSize    =    entry.getUpperBytes(currName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(currName  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(currName  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(currName  +  1);	  currSize    =    entry.getUpperBytes(currName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_ERROR);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(LONGFILE_ERROR);	  currSize    =    entry.getUpperBytes(currName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(currName,  buffer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(currName,  buffer);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(currName,  buffer);	  currSize    =    entry.getUpperBytes(currName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  currSize  =  entry.getLowerBytes()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerBytes()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBytes()  +  1;	  currSize    =    entry.getUpperBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes()  /  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes()  /  1;	  currSize    =    entry.getUpperBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes()  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes()  -  1;	  currSize    =    entry.getUpperBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes()  *  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes()  *  1;	  currSize    =    entry.getUpperBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getName(),  currSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getName(),  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getName(),  currSize);	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  archiveEntry.setDirectory(currName,  entry.getName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currName,  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currName,  entry.getName());	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  currName,  entry.getName());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  currName,  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  currName,  entry.getName());	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName(),  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName(),  LONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getName(),  LONGFILE_GNU);	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getName());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getName());	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName(),  currBytes);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName(),  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getName(),  currBytes);	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName()  +  1);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName()  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getName()  +  1);	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  currSize  =  entry.getLongDirectory()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongDirectory()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongDirectory()  +  1;	  currSize    =    entry.getLongDirectory();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
28	[BUG]  [BUGGY]  currSize  =  entry.getRawSize()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRawSize()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRawSize()  +  1;	  currSize    =    entry.getRawSize();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
29	[BUG]  [BUGGY]  currSize  =  entry.getLongSize();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongSize();	  currSize    =    entry.getRawSize();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
30	[BUG]  [BUGGY]  if(currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
31	[BUG]  [BUGGY]  if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
32	[BUG]  [BUGGY]  if(currSize  ==  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
33	[BUG]  [BUGGY]  if(currSize  <  0  ||  currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  <  0  ||  currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  <  0  ||  currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
34	[BUG]  [BUGGY]  if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
35	[BUG]  [BUGGY]  if(currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  >  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
36	[BUG]  [BUGGY]  if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  <  0  ||  currSize  >  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
37	[BUG]  [BUGGY]  currSize  =  entry.getLowerSize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerSize();	  currSize    =    entry.getUpperSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
38	[BUG]  [BUGGY]  currSize  =  entry.getUpperSize()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperSize()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperSize()  +  1;	  currSize    =    entry.getUpperSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
39	[BUG]  [BUGGY]  currSize  =  entry.getUpperSize()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperSize()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperSize()  -  1;	  currSize    =    entry.getUpperSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
40	[BUG]  [BUGGY]  currSize  =  entry.getLowerBlockSize();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerBlockSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBlockSize();	  currSize    =    entry.getUpperBlockSize();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  currSize  =  entry.getUpperBlockSize()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBlockSize()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBlockSize()  +  1;	  currSize    =    entry.getUpperBlockSize();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  currSize  =  entry.getOwnerBlockSize();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getOwnerBlockSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getOwnerBlockSize();	  currSize    =    entry.getUpperBlockSize();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  currSize  =  entry.getBytes(LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(LONGFILE_ERROR);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(LONGFILE_ERROR);	  currSize    =    entry.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
44	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName,  LONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName,  LONGFILE_GNU);	  currSize    =    entry.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
45	[BUG]  [BUGGY]  currSize  =  entry.getBytes(lONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(lONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(lONGFILE_GNU);	  currSize    =    entry.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
46	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName  +  1);	  currSize    =    entry.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
47	[BUG]  [BUGGY]  currSize  =  entries.getHeaderSize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entries.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entries.getHeaderSize();	  currSize    =    entry.getHeaderSize()    +    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
48	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  /  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getHeaderSize()  /  2;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  /  2;	  currSize    =    entry.getHeaderSize()    +    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
49	[BUG]  [BUGGY]  currSize  -=  entry.getHeaderSize();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getHeaderSize();	  currSize    =    entry.getHeaderSize()    +    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
50	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  -  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getHeaderSize()  -  2;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  -  2;	  currSize    =    entry.getHeaderSize()    +    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
51	[BUG]  [BUGGY]  currSize  =  entry.getLong();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLong();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLong();	  currSize    =    entry.getKey();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
52	[BUG]  [BUGGY]  currSize  =  entry.getKey()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getKey()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getKey()  +  1;	  currSize    =    entry.getKey();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
53	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive_ "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( "Archive_ "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive_ "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
54	[BUG]  [BUGGY]  buffer.put(entry.getName(),  entry.getName());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(entry.getName(),  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getName(),  entry.getName());	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
55	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive- "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( "Archive- "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive- "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
56	[BUG]  [BUGGY]  currSize  =  entry.getImplicitProtocol()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitProtocol()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitProtocol()  +  1;	  currSize    =    entry.getImplicitProtocol();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
57	[BUG]  [BUGGY]  currSize  =  entry.getImplicitDirectory();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitDirectory();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitDirectory();	  currSize    =    entry.getImplicitProtocol();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
58	[BUG]  [BUGGY]  currSize  =  entry.getImplicitProtocol()  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitProtocol()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitProtocol()  -  1;	  currSize    =    entry.getImplicitProtocol();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
59	[BUG]  [BUGGY]  currSize  =  entry.getImplicitFileMode();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitFileMode();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitFileMode();	  currSize    =    entry.getImplicitProtocol();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
60	[BUG]  [BUGGY]  currSize  =  entry.getDirectory()  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getDirectory()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getDirectory()  /  1;	  currSize    =    entry.getDirectory()    +    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  currSize  =  entry.getDirectory()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getDirectory()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getDirectory()  -  1;	  currSize    =    entry.getDirectory()    +    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  currSize  =  entry.getFileMode()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getFileMode()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getFileMode()  +  1;	  currSize    =    entry.getDirectory()    +    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
63	[BUG]  [BUGGY]  currSize  =  entry.getUpperCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperCase();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperCase();	  currSize    =    entry.getLowerCase();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
64	[BUG]  [BUGGY]  currSize  =  entry.getLowerCase()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerCase()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerCase()  +  1;	  currSize    =    entry.getLowerCase();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
65	[BUG]  [BUGGY]  currSize  =  entry.getOwnerCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getOwnerCase();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getOwnerCase();	  currSize    =    entry.getLowerCase();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
66	[BUG]  [BUGGY]  currSize  =  entry.getLongCase();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongCase();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongCase();	  currSize    =    entry.getLowerCase();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
67	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getName(),  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getName(),  entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getName(),  entry.getLongFileMode());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
68	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getDirectory(),  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getDirectory(),  entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getDirectory(),  entry.getLongFileMode());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
69	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode(),  currSize);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode(),  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getLongFileMode(),  currSize);	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
70	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry,  currSize,  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry,  currSize,  entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry,  currSize,  entry.getLongFileMode());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
71	[BUG]  [BUGGY]  archiveEntry.setDirectory(currName,  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currName,  entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currName,  entry.getLongFileMode());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
72	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getLongFileMode(),  currBytes);  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getLongFileMode(),  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getLongFileMode(),  currBytes);	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
73	[BUG]  [BUGGY]  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  currSize;	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
74	[BUG]  [BUGGY]  if(currSize!=  null  &&  entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize!=  null  &&  entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize!=  null  &&  entry.getName().endsWith(currName))  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
75	[BUG]  [BUGGY]  if(entry.getName().endsWith(currName)&&  currSize  <  =  LONGFILE_GNU)  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith(currName)&&  currSize  <  =  LONGFILE_GNU)  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith(currName)&&  currSize  <  =  LONGFILE_GNU)  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
76	[BUG]  [BUGGY]  if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName))  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
77	[BUG]  [BUGGY]  if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName))  {  currSize  =  LONGFILE_GNU;  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName))  {  currSize  =  LONGFILE_GNU;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName))  {  currSize  =  LONGFILE_GNU;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
78	[BUG]  [BUGGY]  if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName);  }  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize!=  null)  {  currSize  =  entry.getName().endsWith(currName);  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
79	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getDirectory());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getDirectory());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getDirectory());	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getPath());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getPath());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getPath());	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
81	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getLongFileMode());	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
82	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getURL());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getURL());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getURL());	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
83	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getParent());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getParent());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getParent());	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
84	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize  +  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize  +  1);	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
85	[BUG]  [BUGGY]  putDirectory(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
86	[BUG]  [BUGGY]  putValue(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putValue(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putValue(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
87	[BUG]  [BUGGY]  putCanonicalEntry(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putCanonicalEntry(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putCanonicalEntry(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  putDirectoryEntry(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectoryEntry(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectoryEntry(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
89	[BUG]  [BUGGY]  putArchiveEntry(entry.getName(),  entry.getValue(),  currSize);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putArchiveEntry(entry.getName(),  entry.getValue(),  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putArchiveEntry(entry.getName(),  entry.getValue(),  currSize);	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
90	[BUG]  [BUGGY]  putRaw(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putRaw(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putRaw(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
91	[BUG]  [BUGGY]  putInt(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putInt(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putInt(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
92	[BUG]  [BUGGY]  currSize  =  entry.getBinaryFileMode()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBinaryFileMode()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryFileMode()  +  1;	  currSize    =    entry.getBinaryFileMode();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
93	[BUG]  [BUGGY]  currSize  =  entry.getBinaryFileMode()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBinaryFileMode()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryFileMode()  -  1;	  currSize    =    entry.getBinaryFileMode();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
94	[BUG]  [BUGGY]  currSize  =  entry.getBlockSize()  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBlockSize()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBlockSize()  /  1;	  currSize    =    entry.getBlockSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
95	[BUG]  [BUGGY]  currSize  =  entry.getLowerBound()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerBound()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBound()  +  1;	  currSize    =    entry.getLowerBound();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
96	[BUG]  [BUGGY]  currSize  =  entry.getLowerBound()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerBound()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBound()  -  1;	  currSize    =    entry.getLowerBound();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
97	[BUG]  [BUGGY]  currSize  =  entry.getBound();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBound();	  currSize    =    entry.getLowerBound();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
98	[BUG]  [BUGGY]  currSize  =  entry.getOwnerBound();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getOwnerBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getOwnerBound();	  currSize    =    entry.getLowerBound();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
99	[BUG]  [BUGGY]  buffer.put(currName,  entry.getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(currName,  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(currName,  entry.getName());	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
100	[BUG]  [BUGGY]  buffer.put(entry.getName(),  currBytes);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(entry.getName(),  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getName(),  currBytes);	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
101	[BUG]  [BUGGY]  buffer.put(entry.getName(),  currSize  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(entry.getName(),  currSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getName(),  currSize  +  1);	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
102	[BUG]  [BUGGY]  buffer.put(currName,  entry.getValue());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(currName,  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(currName,  entry.getValue());	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
103	[BUG]  [BUGGY]  buffer.put(entry.getName(),  curr);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(entry.getName(),  curr);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getName(),  curr);	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
104	[BUG]  [BUGGY]  buffer.put(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getName(),  entry.getValue());	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
105	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU,  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU,  LONGFILE_TRUNCATE);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(LONGFILE_GNU,  LONGFILE_TRUNCATE);	  currSize    =    entry.getUpperBytes(LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
106	[BUG]  [BUGGY]  currSize  =  entry.getLowerBytes(LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerBytes(LONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBytes(LONGFILE_GNU);	  currSize    =    entry.getUpperBytes(LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
107	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(LONGFILE_GNU  +  1);	  currSize    =    entry.getUpperBytes(LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
108	[BUG]  [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU,  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU,  LONGFILE_TRUNCATE);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(LONGFILE_GNU,  LONGFILE_TRUNCATE);	  currSize    =    entry.getBytes(LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
109	[BUG]  [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(LONGFILE_GNU  +  1);	  currSize    =    entry.getBytes(LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
110	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getName(),  entry.getValue());	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
111	[BUG]  [BUGGY]  archiveEntry.setDirectory(currName,  entry.getValue());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currName,  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currName,  entry.getValue());	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
112	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getPath(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getPath(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getPath(),  entry.getValue());	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
113	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getValue(),  currSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getValue(),  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getValue(),  currSize);	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
114	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getValue()  +  1);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getValue()  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getValue()  +  1);	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
115	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getKey());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getKey());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getKey());	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
116	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName,  recordSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName,  recordSize);	  currSize    =    entry.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
117	[BUG]  [BUGGY]  currSize  =  entry.getBytes(recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(recordSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(recordSize  +  1);	  currSize    =    entry.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
118	[BUG]  [BUGGY]  currSize  =  entry.getBytes(fileMode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(fileMode);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(fileMode);	  currSize    =    entry.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
119	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getName());  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getName());  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getName());  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
120	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getDirectory());  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getDirectory());  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getDirectory());  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
121	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getPath());  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getPath());  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getPath());  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
122	[BUG]  [BUGGY]  archiveEntry.setDirectory(currName);  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currName);  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currName);  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
123	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode());  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode());  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getLongFileMode());  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
124	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getParent());  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getParent());  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getParent());  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
125	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getURL());  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getURL());  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getURL());  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
126	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize,  buffer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currSize,  buffer);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize,  buffer);	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
127	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize,  fileMode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currSize,  fileMode);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize,  fileMode);	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
128	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currBytes);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currBytes);	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
129	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize,  true);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currSize,  true);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize,  true);	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
130	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize  +  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize  +  1);	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
131	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize,  cache);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currSize,  cache);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize,  cache);	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
132	[BUG]  [BUGGY]  entry.setDirectory(currSize  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize  +  1);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
133	[BUG]  [BUGGY]  entry.setDirectory(currSize  -  currSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize  -  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize  -  currSize);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
134	[BUG]  [BUGGY]  entry.setDirectory(currName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currName);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
135	[BUG]  [BUGGY]  entry.setDirectory(currSize,  currBytes);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize,  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize,  currBytes);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
136	[BUG]  [BUGGY]  entry.setDirectory(currSize  -  currBytes);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize  -  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize  -  currBytes);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
137	[BUG]  [BUGGY]  entry.setDirectory(currSize  -  1);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize  -  1);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
138	[BUG]  [BUGGY]  currSize  =  entry.getLowerByteMode();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerByteMode();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerByteMode();	  currSize    =    entry.getUpperByteMode();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
139	[BUG]  [BUGGY]  currSize  =  entry.getUpperByteMode()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperByteMode()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperByteMode()  +  1;	  currSize    =    entry.getUpperByteMode();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
140	[BUG]  [BUGGY]  currSize  =  entry.getUpperByteMode()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperByteMode()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperByteMode()  -  1;	  currSize    =    entry.getUpperByteMode();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
141	[BUG]  [BUGGY]  archiveEntry.putDirectory(entry.getName(),  currSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(entry.getName(),  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(entry.getName(),  currSize);	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
142	[BUG]  [BUGGY]  archiveEntry.putDirectory(currName,  entry.getValue());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(currName,  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currName,  entry.getValue());	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
143	[BUG]  [BUGGY]  archiveEntry.putDirectory(currName,  currSize  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(currName,  currSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currName,  currSize  +  1);	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
144	[BUG]  [BUGGY]  archiveEntry.putDirectory(currName,  currSize,  entry.getValue());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(currName,  currSize,  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currName,  currSize,  entry.getValue());	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
145	[BUG]  [BUGGY]  archiveEntry.putDirectory(currName,  currBytes);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(currName,  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currName,  currBytes);	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
146	[BUG]  [BUGGY]  archiveEntry.putDirectory(currName,  currSize  -  1);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(currName,  currSize  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currName,  currSize  -  1);	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
147	[BUG]  [BUGGY]  currSize  =  entry.getImplicitRecordSize()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitRecordSize()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitRecordSize()  +  1;	  currSize    =    entry.getImplicitRecordSize();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
148	[BUG]  [BUGGY]  currSize  =  entry.getImplicitRecordSize()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitRecordSize()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitRecordSize()  -  1;	  currSize    =    entry.getImplicitRecordSize();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
149	[BUG]  [BUGGY]  currSize  =  entry.getAbsolutePosition()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getAbsolutePosition()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getAbsolutePosition()  +  1;	  currSize    =    entry.getVersion()    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
150	[BUG]  [BUGGY]  currSize  =  entry.getAbsolutePath()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getAbsolutePath()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getAbsolutePath()  +  1;	  currSize    =    entry.getVersion()    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
151	[BUG]  [BUGGY]  currSize  =  entry.getRecordSize()  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRecordSize()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRecordSize()  /  1;	  currSize    =    entry.getRecordSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
152	[BUG]  [BUGGY]  currSize  -=  entry.getLowerBound();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getLowerBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getLowerBound();	  currSize    -=    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
153	[BUG]  [BUGGY]  currSize  -=  entry.getUpperBound()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getUpperBound()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getUpperBound()  +  1;	  currSize    -=    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
154	[BUG]  [BUGGY]  currSize  -=  entry.getFullBound();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getFullBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getFullBound();	  currSize    -=    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
155	[BUG]  [BUGGY]  currSize  =  entry.getLongMode();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongMode();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongMode();	  currSize    =    entry.getFileMode();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
156	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  /  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getHeaderSize()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  /  1;	  currSize    =    entry.getHeaderSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
157	[BUG]  [BUGGY]  currSize  -=  entry.getHeaderSize()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getHeaderSize()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getHeaderSize()  +  1;	  currSize    =    entry.getHeaderSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
158	[BUG]  [BUGGY]  currSize  =  entry.getBytes()  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes()  /  1;	  currSize    =    entry.getBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
159	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName)+  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName)+  1;	  currSize    =    entry.getBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
160	[BUG]  [BUGGY]  currSize  -=  entry.getBytes()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getBytes()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getBytes()  +  1;	  currSize    =    entry.getBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
161	[BUG]  [BUGGY]  currSize  =  entry.getValue()  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getValue()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getValue()  /  1;	  currSize    =    entry.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
162	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive_ "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( "Archive_ "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive_ "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
163	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  entry.getValue();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
164	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
165	[BUG]  [BUGGY]  currSize  =  entry.getUpperBound()  *  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBound()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBound()  *  1;	  currSize    =    entry.getUpperBound()    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
166	[BUG]  [BUGGY]  currSize  =  entry.getBytes(1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(1);	  currSize    =    entry.getBytes(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
167	[BUG]  [BUGGY]  currSize  =  entry.getBytes(2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(2);	  currSize    =    entry.getBytes(0);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
168	[BUG]  [BUGGY]  currSize  =  entry.getLongValue()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongValue()  +  1;	  currSize    =    entry.getLongValue();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
169	[BUG]  [BUGGY]  currSize  +=  entry.getName().length();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  +=  entry.getName().length();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  +=  entry.getName().length();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
170	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getEntry();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getEntry();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  entry.getEntry();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
171	[BUG]  [BUGGY]  Entry  <?>  currSize  +=  entry.getName().length();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <?>  currSize  +=  entry.getName().length();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <?>  currSize  +=  entry.getName().length();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
172	[BUG]  [BUGGY]  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
173	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  *  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getHeaderSize()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  *  1;	  currSize    =    entry.getHeaderSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
174	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  *  2  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getHeaderSize()  *  2  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  *  2  -  1;	  currSize    =    entry.getHeaderSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
175	[BUG]  [BUGGY]  currSize  =  entry.getIntValue()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getIntValue()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getIntValue()  +  1;	  currSize    =    entry.getLongFileMode()    +    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
176	[BUG]  [BUGGY]  currSize  =  entry.getFileMode()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getFileMode()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getFileMode()  -  1;	  currSize    =    entry.getLongFileMode()    -    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
177	[BUG]  [BUGGY]  currSize  =  entry.getOwnerBytes();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getOwnerBytes();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getOwnerBytes();	  currSize    =    entry.getLowerBytes();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
178	[BUG]  [BUGGY]  currSize  =  entry.getUpperBound()  /  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBound()  /  2;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBound()  /  2;	  currSize    =    entry.getUpperBound()    +    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
179	[BUG]  [BUGGY]  currSize  =  entries.getUpperBound();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entries.getUpperBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entries.getUpperBound();	  currSize    =    entry.getUpperBound()    +    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
180	[BUG]  [BUGGY]  currSize  =  entry.getUpperBound()  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBound()  -  2;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBound()  -  2;	  currSize    =    entry.getUpperBound()    +    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
181	[BUG]  [BUGGY]  Entry  <  K,  V>  currSize  +=  entry.getName().length();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  currSize  +=  entry.getName().length();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  currSize  +=  entry.getName().length();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
182	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getName();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getName();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  entry.getName();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
183	[BUG]  [BUGGY]  terator  <  TarArchiveEntry>  buffer  =  entry.getValue();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  terator  <  TarArchiveEntry>  buffer  =  entry.getValue();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	terator  <  TarArchiveEntry>  buffer  =  entry.getValue();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
184	[BUG]  [BUGGY]  currSize  =  entry.getBinaryDirectory()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBinaryDirectory()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryDirectory()  +  1;	  currSize    =    entry.getBinaryDirectory();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
185	[BUG]  [BUGGY]  currSize  =  entry.getBinaryDirectory()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBinaryDirectory()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryDirectory()  -  1;	  currSize    =    entry.getBinaryDirectory();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
186	[BUG]  [BUGGY]  currSize  =  entry.getRawSize()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRawSize()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRawSize()  -  1;	  currSize    =    entry.getRecordSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
187	[BUG]  [BUGGY]  currSize  =  entry.getRowSize()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRowSize()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRowSize()  -  1;	  currSize    =    entry.getRecordSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
188	[BUG]  [BUGGY]  currSize  =  entry.getRotationSize();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRotationSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRotationSize();	  currSize    =    entry.getRecordSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
189	[BUG]  [BUGGY]  currSize  =  entry.getUpperBound()  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBound()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBound()  /  1;	  currSize    =    entry.getUpperBound()    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
190	[BUG]  [BUGGY]  currSize  =  entry.getRaw()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRaw()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRaw()  +  1;	  currSize    =    entry.getName()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
191	[BUG]  [BUGGY]  currSize  =  entry.getName()  /  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getName()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getName()  /  1;	  currSize    =    entry.getName()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
192	[BUG]  [BUGGY]  currSize  =  entry.getRawName()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRawName()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRawName()  +  1;	  currSize    =    entry.getName()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
193	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(lONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(lONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(lONGFILE_GNU);	  currSize    =    entry.getUpperBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
194	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(recordSize  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(recordSize  +  1);	  currSize    =    entry.getUpperBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
195	[BUG]  [BUGGY]  currSize  -=  entry.getISOControl();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getISOControl();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getISOControl();	  currSize    -=    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
196	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU)+  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(LONGFILE_GNU)+  1;	  currSize    =    entry.getUpperBytes(LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
197	[BUG]  [BUGGY]  currSize  =  entries.getBlockSize();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entries.getBlockSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entries.getBlockSize();	  currSize    =    entry.getBlockSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
198	[BUG]  [BUGGY]  currSize  =  entry.getCurrentFileMode();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getCurrentFileMode();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getCurrentFileMode();	  currSize    =    entry.getCurrentSize();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
199	[BUG]  [BUGGY]  currSize  =  entry.getCalendarSize();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getCalendarSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getCalendarSize();	  currSize    =    entry.getCurrentSize();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
200	[BUG]  [BUGGY]  buffer.put(entry.getName(),  currSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(entry.getName(),  currSize,  LONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getName(),  currSize,  LONGFILE_GNU);	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
201	[BUG]  [BUGGY]  buffer.put(entry.getAbsolutePath(),  currSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  buffer.put(entry.getAbsolutePath(),  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getAbsolutePath(),  currSize);	  buffer.put(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
202	[BUG]  [BUGGY]  currSize  =  entry.getDirectory()  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getDirectory()  +  2;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getDirectory()  +  2;	  currSize    =    entry.getDirectory()    +    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
203	[BUG]  [BUGGY]  currSize  =  entry.getAbsolutePositive()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getAbsolutePositive()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getAbsolutePositive()  +  1;	  currSize    =    entry.getName()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
204	[BUG]  [BUGGY]  currSize  =  entry.getAbsolutePositive();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getAbsolutePositive();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getAbsolutePositive();	  currSize    =    entry.getName()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
205	[BUG]  [BUGGY]  currSize  =  entry.getDirectorySize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getDirectorySize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getDirectorySize();	  currSize    =    entry.getUpperSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
206	[BUG]  [BUGGY]  entry.setDirectory(currSize  +  currBytes);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize  +  currBytes);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize  +  currBytes);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
207	[BUG]  [BUGGY]  currSize  =  entry.getImplicitRecord();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitRecord();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitRecord();	  currSize    =    entry.getImplicitProtocol();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
208	[BUG]  [BUGGY]  FileUtil.copyFileInfo(buffer,  currSize,  entry.getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  FileUtil.copyFileInfo(buffer,  currSize,  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	FileUtil.copyFileInfo(buffer,  currSize,  entry.getName());	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
209	[BUG]  [BUGGY]  FileUtils.copyFileInfo(buffer,  currSize,  entry.getName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  FileUtils.copyFileInfo(buffer,  currSize,  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	FileUtils.copyFileInfo(buffer,  currSize,  entry.getName());	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
210	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName  -  1);	  currSize    =    entry.getBytes()    -    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
211	[BUG]  [BUGGY]  currSize  =  entry.getUpperCase()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperCase()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperCase()  +  1;	  currSize    =    entry.getVersion()    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
212	[BUG]  [BUGGY]  currSize  =  entry.getURL()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getURL()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getURL()  +  1;	  currSize    =    entry.getVersion()    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
213	[BUG]  [BUGGY]  FileUtils.copyFileInfo(buffer,  currSize,  entry.getName().length());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  FileUtils.copyFileInfo(buffer,  currSize,  entry.getName().length());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	FileUtils.copyFileInfo(buffer,  currSize,  entry.getName().length());	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
214	[BUG]  [BUGGY]  CurrSize  =  entry.getUpperBound();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  CurrSize  =  entry.getUpperBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	CurrSize  =  entry.getUpperBound();	  currSize    =    entry.getUpperBound()    +    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
215	[BUG]  [BUGGY]  allowNonDirectory(entry.getName(),  entry.getValue()))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  allowNonDirectory(entry.getName(),  entry.getValue()))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	allowNonDirectory(entry.getName(),  entry.getValue()))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
216	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
217	[BUG]  [BUGGY]  allowNonDirectory(entry.getName(),  entry.getValue())  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  allowNonDirectory(entry.getName(),  entry.getValue())  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	allowNonDirectory(entry.getName(),  entry.getValue())  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
218	[BUG]  [BUGGY]  allowNonDirectory(entry.getName(),  currSize))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  allowNonDirectory(entry.getName(),  currSize))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	allowNonDirectory(entry.getName(),  currSize))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
219	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValu  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValu  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValu	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
220	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  entry.getValue();  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
221	[BUG]  [BUGGY]  currSize  =  entry.getBytes(recordBuf);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(recordBuf);	  currSize    =    entry.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
222	[BUG]  [BUGGY]  currSize  =  archiveEntry.getBytes(recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  archiveEntry.getBytes(recordSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  archiveEntry.getBytes(recordSize);	  currSize    =    entry.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
223	[BUG]  [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU)+  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU)+  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(LONGFILE_GNU)+  1;	  currSize    =    entry.getBytes(LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
224	[BUG]  [BUGGY]  currSize  =  entry.getRecordSize()  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRecordSize()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRecordSize()  *  1;	  currSize    =    entry.getRecordSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
225	[BUG]  [BUGGY]  currSize  =  entry.getRcordSize();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRcordSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRcordSize();	  currSize    =    entry.getRecordSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
226	[BUG]  [BUGGY]  currSize  =  entry.getUpperFileMode()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperFileMode()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperFileMode()  -  1;	  currSize    =    entry.getLongFileMode()    -    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
227	[BUG]  [BUGGY]  currSize  =  entry.getUpperByFileMode()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperByFileMode()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperByFileMode()  -  1;	  currSize    =    entry.getLongFileMode()    -    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
228	[BUG]  [BUGGY]  if(currName!=  null)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currName!=  null)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currName!=  null)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
229	[BUG]  [BUGGY]  if(currSize  >=  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  >=  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  >=  0)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
230	[BUG]  [BUGGY]  if(currName!=  null)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currName!=  null)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currName!=  null)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
231	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currName!=  null  ||  currName.endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currName!=  null  ||  currName.endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
232	[BUG]  [BUGGY]  currSize  =  entry.getUpperFileMode()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperFileMode()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperFileMode()  +  1;	  currSize    =    entry.getLongFileMode()    +    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
233	[BUG]  [BUGGY]  currSize  =  entry.getUpperByFileMode()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperByFileMode()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperByFileMode()  +  1;	  currSize    =    entry.getLongFileMode()    +    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
234	[BUG]  [BUGGY]  currSize  =  entry.getIntFileMode()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getIntFileMode()  +  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getIntFileMode()  +  1;	  currSize    =    entry.getLongFileMode()    +    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
235	[BUG]  [BUGGY]  currSize  -=  entry.getLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getLowerCase();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getLowerCase();	  currSize    =    entry.getLowerCase();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
236	[BUG]  [BUGGY]  currSize  =  entry.getLowerCase()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLowerCase()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerCase()  -  1;	  currSize    =    entry.getLowerCase();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
237	[BUG]  [BUGGY]  archiveEntry.putDirectory(entry,  currSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(entry,  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(entry,  currSize);	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
238	[BUG]  [BUGGY]  archiveEntry.putDirectory(currSize,  currName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(currSize,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currSize,  currName);	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
239	[BUG]  [BUGGY]  currSize  +=  entry.getHeaderSize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  +=  entry.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  +=  entry.getHeaderSize();	  currSize    =    entry.getHeaderSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
240	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getPath(),  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getPath(),  entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getPath(),  entry.getLongFileMode());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
241	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getURL(),  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getURL(),  entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getURL(),  entry.getLongFileMode());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
242	[BUG]  [BUGGY]  currSize  =  entry.getByteValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getByteValue();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getByteValue();	  currSize    =    entry.getLongValue();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
243	[BUG]  [BUGGY]  currSize  =  entry.getBinaryValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBinaryValue();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryValue();	  currSize    =    entry.getLongValue();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
244	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath());  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath());  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getAbsolutePath());  currSize  =  currSize;	  archiveEntry.setDirectory(currSize);    currSize    =    currSize;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
245	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  buffer.getEntry(entry.getName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  buffer.getEntry(entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  buffer.getEntry(entry.getName());	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
246	[BUG]  [BUGGY]  ArchiveEntry  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  ArchiveEntry  currSize  =  currSize;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	ArchiveEntry  currSize  =  currSize;	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
247	[BUG]  [BUGGY]  ArchiveEntry  currSize  =  archiveEntry.getName();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  ArchiveEntry  currSize  =  archiveEntry.getName();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	ArchiveEntry  currSize  =  archiveEntry.getName();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
248	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValueEntry();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValueEntry();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	Entry  <  K,  V>  entry  =  entry.getValueEntry();	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
249	[BUG]  [BUGGY]  if(entry.getName().endsWith(currName)||  currSize  <  =  LONGFILE_GNU)  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith(currName)||  currSize  <  =  LONGFILE_GNU)  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith(currName)||  currSize  <  =  LONGFILE_GNU)  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
250	[BUG]  [BUGGY]  if(currSize  ==  null)  {  currSize  =  entry.getName().endsWith(currName);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  null)  {  currSize  =  entry.getName().endsWith(currName);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  null)  {  currSize  =  entry.getName().endsWith(currName);  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
251	[BUG]  [BUGGY]  if(entry.getName().endsWith(currName))  {  currSize  =  LONGFILE_GNU;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith(currName))  {  currSize  =  LONGFILE_GNU;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith(currName))  {  currSize  =  LONGFILE_GNU;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
252	[BUG]  [BUGGY]  currSize  =  Entry.getHeaderSize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  Entry.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  Entry.getHeaderSize();	  currSize    =    entry.getHeaderSize()    +    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
253	[BUG]  [BUGGY]  CurrSize  =  entry.getHeaderSize();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  CurrSize  =  entry.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	CurrSize  =  entry.getHeaderSize();	  currSize    =    entry.getHeaderSize()    +    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
254	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currSize,  LONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize,  LONGFILE_GNU);	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
255	[BUG]  [BUGGY]  currSize  =  entry.getBytes(lONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(lONGFILE_ERROR);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(lONGFILE_ERROR);	  currSize    =    entry.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
256	[BUG]  [BUGGY]  currSize  =  entries.getRecordSize();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entries.getRecordSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entries.getRecordSize();	  currSize    =    entry.getRecordSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
257	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath(),  entry.getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath(),  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getAbsolutePath(),  entry.getName());	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
258	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry,  currSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry,  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry,  currSize);	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
259	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getURL(),  entry.getName());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getURL(),  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getURL(),  entry.getName());	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
260	[BUG]  [BUGGY]  putNextEntry(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putNextEntry(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putNextEntry(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
261	[BUG]  [BUGGY]  putFileEntry(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putFileEntry(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putFileEntry(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
262	[BUG]  [BUGGY]  putPropertyEntry(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putPropertyEntry(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putPropertyEntry(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
263	[BUG]  [BUGGY]  putCandidate(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putCandidate(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putCandidate(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
264	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getAbsolutePath(),  entry.getValue());	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
265	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getURL(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getURL(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getURL(),  entry.getValue());	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
266	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePath());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getAbsolutePath());	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
267	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePosition());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getAbsolutePosition());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getAbsolutePosition());	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
268	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  *  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getHeaderSize()  *  2;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  *  2;	  currSize    =    entry.getHeaderSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
269	[BUG]  [BUGGY]  archiveEntry.putDirectory(currName,  entry.getName());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.putDirectory(currName,  entry.getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currName,  entry.getName());	  archiveEntry.putDirectory(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
270	[BUG]  [BUGGY]  currSize  -=  entry.getUpperByteMode();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getUpperByteMode();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getUpperByteMode();	  currSize    =    entry.getUpperByteMode();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
271	[BUG]  [BUGGY]  currSize  -=  entry.getLowerBytes();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getLowerBytes();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getLowerBytes();	  currSize    =    entry.getLowerBytes();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
272	[BUG]  [BUGGY]  currSize  =  entry.getCurrentLong();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getCurrentLong();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getCurrentLong();	  currSize    =    entry.getCurrentSize();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
273	[BUG]  [BUGGY]  currSize  -=  entry.getKey();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getKey();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getKey();	  currSize    =    entry.getKey();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
274	[BUG]  [BUGGY]  currSize  =  entry.getDirectory()  *  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getDirectory()  *  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getDirectory()  *  1;	  currSize    =    entry.getDirectory()    +    1;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
275	[BUG]  [BUGGY]  currSize  =  entry.getLongFileMode()  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongFileMode()  /  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongFileMode()  /  1;	  currSize    =    entry.getLongFileMode()    +    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
276	[BUG]  [BUGGY]  currSize  =  entry.getLongValue()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongValue()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongValue()  -  1;	  currSize    =    entry.getValue()    -    1;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
277	[BUG]  [BUGGY]  currSize  =  entry.getBinarySize();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBinarySize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinarySize();	  currSize    =    entry.getRawSize();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
278	[BUG]  [BUGGY]  if(currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
279	[BUG]  [BUGGY]  if(currSize  ==  null)  {  if(entry.getName().endsWith( ".Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  null)  {  if(entry.getName().endsWith( ".Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  null)  {  if(entry.getName().endsWith( ".Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
280	[BUG]  [BUGGY]  if(currSize  ==  null  ||  currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  null  ||  currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  null  ||  currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
281	[BUG]  [BUGGY]  if(currSize  ==  null  ||  currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValu  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  null  ||  currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValu  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  null  ||  currSize  ==  null)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValu	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
282	[BUG]  [BUGGY]  if(currSize  ==  null  ||  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  null  ||  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  null  ||  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
283	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(recordSize  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getUpperBytes(recordSize  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(recordSize  -  1);	  currSize    =    entry.getUpperBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
284	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( ".Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
285	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive ")||  entry.getName().length()  ==  0)  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( "Archive ")||  entry.getName().length()  ==  0)  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive ")||  entry.getName().length()  ==  0)  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
286	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive ")&&  entry.getName().length()  >  0)  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( "Archive ")&&  entry.getName().length()  >  0)  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive ")&&  entry.getName().length()  >  0)  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getValue());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
287	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize,  entry.getVersion());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putDirectory(entry.getName(),  currSize,  entry.getVersion());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize,  entry.getVersion());	  putDirectory(entry.getName(),    currSize);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
288	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( ".Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
289	[BUG]  [BUGGY]  ((  TarArchiveEntry)entry).getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  ((  TarArchiveEntry)entry).getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	((  TarArchiveEntry)entry).getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    +=    entry.getName().length();    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
290	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getURL());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getURL());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getURL());	  archiveEntry.setDirectory(currSize,    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
291	[BUG]  [BUGGY]  currSize  -  entry.getHeaderSize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -  entry.getHeaderSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -  entry.getHeaderSize();	  currSize    =    entry.getHeaderSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
292	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( ".Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
293	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive ")||  entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(entry.getName().endsWith( "Archive ")||  entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive ")||  entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	  if(entry.getName().endsWith(   "Archive   "))    {    currSize    =    currSize;    }    else    {    buffer.put(entry.getName(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
294	[BUG]  [BUGGY]  entry.setDirectory(currSize,  fileMode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize,  fileMode);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize,  fileMode);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
295	[BUG]  [BUGGY]  entry.setDirectory(currSize,  buffer);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  entry.setDirectory(currSize,  buffer);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize,  buffer);	  entry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
296	[BUG]  [BUGGY]  currSize  =  entry.getOwnerSize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getOwnerSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getOwnerSize();	  currSize    =    entry.getUpperSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
297	[BUG]  [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode(),  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(entry.getLongFileMode(),  entry.getLongFileMode());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(entry.getLongFileMode(),  entry.getLongFileMode());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
298	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getUpperBytes());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getUpperBytes());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getUpperBytes());	  archiveEntry.setDirectory(currSize,    entry.getLongFileMode());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
299	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize  -  1);	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
300	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize  -  currSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize  -  currSize);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize  -  currSize);	  archiveEntry.setDirectory(currSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
301	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName(),  buffer);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName(),  buffer);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getName(),  buffer);	  archiveEntry.setDirectory(currSize,    entry.getName());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
302	[BUG]  [BUGGY]  currSize  =  entry.getImplicitFile();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getImplicitFile();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitFile();	  currSize    =    entry.getImplicitProtocol();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
303	[BUG]  [BUGGY]  currSize  =  entry.getBinaryVersion();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBinaryVersion();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryVersion();	  currSize    =    entry.getLongVersion();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
304	[BUG]  [BUGGY]  currSize  -  entry.getUpperBound();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -  entry.getUpperBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -  entry.getUpperBound();	  currSize    =    entry.getUpperBound()    +    2;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
305	[BUG]  [BUGGY]  currSize  -  entry.getBytes();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -  entry.getBytes();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -  entry.getBytes();	  currSize    =    entry.getBytes()    +    1;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
306	[BUG]  [BUGGY]  putInternalEntry(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putInternalEntry(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putInternalEntry(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
307	[BUG]  [BUGGY]  putInputStream(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  putInputStream(entry.getName(),  entry.getValue());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putInputStream(entry.getName(),  entry.getValue());	  putArchiveEntry(entry.getName(),    entry.getValue());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
308	[BUG]  [BUGGY]  currSize  -=  entry.getOwnerBound();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getOwnerBound();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getOwnerBound();	  currSize    -=    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
309	[BUG]  [BUGGY]  currSize  -=  entry.getImplicitReturn();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getImplicitReturn();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getImplicitReturn();	  currSize    -=    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
310	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(currName,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName,  0);	  currSize    =    entry.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
311	[BUG]  [BUGGY]  currSize  =  entry.getBytes(recordSize  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getBytes(recordSize  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(recordSize  -  1);	  currSize    =    entry.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
312	[BUG]  [BUGGY]  currSize  -=  entry.getBytes();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getBytes();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getBytes();	  currSize    =    entry.getBytes()    -    1;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
313	[BUG]  [BUGGY]  currSize  =  entry.getRecordSize()  *  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRecordSize()  *  2;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRecordSize()  *  2;	  currSize    =    entry.getRecordSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
314	[BUG]  [BUGGY]  currSize  -=  entry.getUpperBlockSize();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -=  entry.getUpperBlockSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getUpperBlockSize();	  currSize    =    entry.getUpperBlockSize();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
315	[BUG]  [BUGGY]  currSize  =  entry.getName().endsWith(currName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getName().endsWith(currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getName().endsWith(currName);	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
316	[BUG]  [BUGGY]  if(currSize  ==  currSize)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize  ==  currSize)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize  ==  currSize)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
317	[BUG]  [BUGGY]  if(currSize!=  currSize)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currSize!=  currSize)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currSize!=  currSize)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
318	[BUG]  [BUGGY]  if(currName!=  null  &&  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currName!=  null  &&  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currName!=  null  &&  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
319	[BUG]  [BUGGY]  if(currName!=  null  &&  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  if(currName!=  null  &&  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(currName!=  null  &&  currSize  <  =  LONGFILE_GNU)  {  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }	  if(entry.getName().endsWith(currName))    {    currSize    =    currSize;    }    else    {    buffer.append(entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
320	[BUG]  [BUGGY]  currSize  =  entry.getRawClass().getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getRawClass().getName();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRawClass().getName();	  currSize    =    entry.getName()    +    1;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
321	[BUG]  [BUGGY]  currSize  =  entry.getLongBlockSize()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  =  entry.getLongBlockSize()  -  1;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongBlockSize()  -  1;	  currSize    =    entry.getBlockSize()    -    1;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
322	[BUG]  [BUGGY]  currSize  -  entry.getRecordSize();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (entry.isDirectory())  {  currSize  =  0;  }  else  {      [BUGGY]  currSize  -  entry.getRecordSize();  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -  entry.getRecordSize();	  currSize    =    entry.getRecordSize()    +    1;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
