bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  currSize  =  entry.getBlockSize()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBlockSize()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBlockSize()  +  1;	  currSize    =    entry.getBlockSize();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
2	[BUG]  [BUGGY]  currSize  =  entry.getUpperBlockSize();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBlockSize();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBlockSize();	  currSize    =    entry.getBlockSize();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
3	[BUG]  [BUGGY]  currSize  =  entry.getLowerBytes();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLowerBytes();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBytes();	  currSize    =    entry.getUpperBytes();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBytes(currName);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(currName);	  currSize    =    entry.getUpperBytes();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBytes()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes()  +  1;	  currSize    =    entry.getUpperBytes();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  archiveEntry.setDirectory(currSize);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  entry.setDirectory(currSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  entry.setDirectory(currSize);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	entry.setDirectory(currSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getValue());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getValue());  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getValue());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getName());  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getName());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  putArchiveEntry(entry.getName(),  entry.getValue());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  putArchiveEntry(entry.getName(),  entry.getValue());  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putArchiveEntry(entry.getName(),  entry.getValue());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getLongFileMode());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  archiveEntry.setDirectory(currSize,  entry.getLongFileMode());  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize,  entry.getLongFileMode());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  archiveEntry.setDirectory(currSize);  currSize  =  currSize;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  archiveEntry.setDirectory(currSize);  currSize  =  currSize;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.setDirectory(currSize);  currSize  =  currSize;	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  currSize  =  entry.getVersion()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getVersion()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getVersion()  +  1;	  currSize    =    entry.getVersion();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  currSize  =  entry.getLowerBound();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLowerBound();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerBound();	  currSize    =    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  currSize  =  entry.getUpperBound()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBound()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBound()  +  1;	  currSize    =    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  currSize  =  entry.getUpperBound()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBound()  -  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBound()  -  1;	  currSize    =    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
17	[BUG]  [BUGGY]  currSize  =  entry.getDirectory()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getDirectory()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getDirectory()  +  1;	  currSize    =    entry.getDirectory();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  currSize  =  entry.getLowerCase();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLowerCase();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLowerCase();	  currSize    =    entry.getDirectory();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  currSize  =  entry.getLongDirectory();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLongDirectory();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongDirectory();	  currSize    =    entry.getDirectory();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  currSize  =  entry.getValue()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getValue()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getValue()  +  1;	  currSize    =    entry.getValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  currSize  =  entry.getValue()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getValue()  -  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getValue()  -  1;	  currSize    =    entry.getValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  currSize  =  entry.getLongValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLongValue();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongValue();	  currSize    =    entry.getValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  currSize  =  entry.getKey();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getKey();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getKey();	  currSize    =    entry.getValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  currSize  =  entry.getName()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getName()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getName()  +  1;	  currSize    =    entry.getName();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  currSize  =  entry.getFileMode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getFileMode();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getFileMode();	  currSize    =    entry.getName();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  currSize  =  entry.getImplicitProtocol();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getImplicitProtocol();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitProtocol();	  currSize    =    entry.getName();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getHeaderSize()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  +  1;	  currSize    =    entry.getHeaderSize();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  -  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getHeaderSize()  -  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  -  1;	  currSize    =    entry.getHeaderSize();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  currSize  =  entry.getBytes(currName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBytes(currName);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(currName);	  currSize    =    entry.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  currSize  =  entry.getBytes()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBytes()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes()  +  1;	  currSize    =    entry.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  currSize  =  entry.getBytes()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBytes()  -  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes()  -  1;	  currSize    =    entry.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  currSize  =  entry.getLongFileMode()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLongFileMode()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongFileMode()  +  1;	  currSize    =    entry.getLongFileMode();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  currSize  =  entry.getLongFileMode()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLongFileMode()  -  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongFileMode()  -  1;	  currSize    =    entry.getLongFileMode();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  currSize  =  entry.getRecordSize()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getRecordSize()  +  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRecordSize()  +  1;	  currSize    =    entry.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  currSize  =  entry.getRawSize();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getRawSize();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRawSize();	  currSize    =    entry.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  currSize  =  entry.getBytes(0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBytes(0);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(0);	  currSize    =    entry.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  currSize  =  entry.getBytes(recordSize);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBytes(recordSize);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(recordSize);	  currSize    =    entry.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBytes(recordSize);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(recordSize);	  currSize    =    entry.getUpperBytes();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  currSize  =  entry.getUpperByteMode();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperByteMode();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperByteMode();	  currSize    =    entry.getLongFileMode();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
40	[BUG]  [BUGGY]  currSize  =  entry.getRecordSize()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getRecordSize()  -  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getRecordSize()  -  1;	  currSize    =    entry.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
41	[BUG]  [BUGGY]  buffer.put(entry.getName(),  currSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  buffer.put(entry.getName(),  currSize);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	buffer.put(entry.getName(),  currSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  putDirectory(entry.getName(),  currSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  putDirectory(entry.getName(),  currSize);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	putDirectory(entry.getName(),  currSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  archiveEntry.putDirectory(currName,  currSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  archiveEntry.putDirectory(currName,  currSize);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	archiveEntry.putDirectory(currName,  currSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  currSize  =  entry.getUpperBound()  +  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBound()  +  2;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBound()  +  2;	  currSize    =    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  currSize  =  entry.getUpperSize();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperSize();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperSize();	  currSize    =    entry.getHeaderSize();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  currSize  =  entry.getCurrentSize();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getCurrentSize();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getCurrentSize();	  currSize    =    entry.getHeaderSize();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
47	[BUG]  [BUGGY]  currSize  =  entry.getBlockSize()  -  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBlockSize()  -  1;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBlockSize()  -  1;	  currSize    =    entry.getBlockSize();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  currSize  =  entry.getLongVersion();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getLongVersion();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getLongVersion();	  currSize    =    entry.getVersion();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  currSize  =  entry.getImplicitRecordSize();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getImplicitRecordSize();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getImplicitRecordSize();	  currSize    =    entry.getRecordSize();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  currSize  =  entry.getBinaryDirectory();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBinaryDirectory();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryDirectory();	  currSize    =    entry.getDirectory();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
51	[BUG]  [BUGGY]  currSize  =  entry.getHeaderSize()  +  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getHeaderSize()  +  2;  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getHeaderSize()  +  2;	  currSize    =    entry.getHeaderSize();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
52	[BUG]  [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBytes(LONGFILE_GNU);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBytes(LONGFILE_GNU);	  currSize    =    entry.getBytes();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getUpperBytes(LONGFILE_GNU);  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getUpperBytes(LONGFILE_GNU);	  currSize    =    entry.getUpperBytes();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  currSize  -=  entry.getUpperBound();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  -=  entry.getUpperBound();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  -=  entry.getUpperBound();	  currSize    =    entry.getUpperBound();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
55	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  else  {  buffer.append(entry.getName());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
57	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getValue());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
58	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive "))  {  currSize  +=  entry.getName().length();  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
59	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith( "Archive "))  {  currSize  =  currSize;  }  else  {  buffer.put(entry.getName(),  entry.getName());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
60	[BUG]  [BUGGY]  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	if(entry.getName().endsWith(currName))  {  currSize  =  currSize;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
61	[BUG]  [BUGGY]  currSize  =  entry.getBinaryFileMode();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (entry.isDirectory())  {  currSize  =  0;  }  else  {    [BUGGY]  currSize  =  entry.getBinaryFileMode();  [BUGGY]    }  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	currSize  =  entry.getBinaryFileMode();	  currSize    =    entry.getLongFileMode();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
