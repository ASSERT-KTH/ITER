projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-2;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length+1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length+2;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length+3;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length+4;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length+5;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length+6;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-4;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-3;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-6;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-5;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(EOFRecord.toString());}else{buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=2;i<recordBuf.length;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length-2;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length-1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length/2;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303For(inti=0;i<recordBuf.length;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeEOFRecord(i);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length&&recordBuf[i]!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length/1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName,buffer.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName,true);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName,0,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName,false);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName,null);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length();++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length/4;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(REcordBuf[i]);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303buffer.writeRecord(recordBuf[i]);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);RecordBuf[i]=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName!=null){byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName==null){byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName!=null){byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303writeEOFRecord(recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName==null){byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(REcordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordsBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==0){if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i!=0){if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0,recordBuf.length;i<recordBuf.length;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=2;i<recordBuf.length-1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303For(inti=0;i<recordBuf.length-1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303For(inti=0;i<recordBuf.length-2;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303For(inti=0;i<recordBuf.length+1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303For(inti=1;i<recordBuf.length;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(0,recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length-3;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length-4;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length/2;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i!=0){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==0){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(true);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord().cloneTarBuffer();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEORFecord();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord().toByteArray();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord().getBytes();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length-6;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=recordBuf.length){buffer.writeRecord(EOFRecord.toString());}else{buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==recordBuf.length){buffer.writeRecord(EOFRecord.toString());}else{buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(EOFRecord.toString());}else{buffer.writeRecord(EOFRecord.toString());}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf.toString());}else{buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==0){if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i!=0){if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(buffer!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(REcordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){if(i<recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(REcordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){if(i<recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303while(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(REcordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&recordBuf[i]!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length&&recordBuf[i]==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length&&recordBuf[i]>=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length&&buffer[i]!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length&&buffer.canWriteEOFRecord(recordBuf[i])){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length&&buffer.nextToken()!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&!closed){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&i<LONGFILE_GNU){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&!recordBuf.length){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&!buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&!isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(buffer!=null){for(inti=0;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){for(inti=0;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<currName.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=1;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303while(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(buffer!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordsBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(buffer!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(REcordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<records.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(buffer!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303while(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordsBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){for(inti=0;i<recordBuf.length;i++){buffer.writeEOFRecord(i);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;i++){buffer.writeEOFRecord(i);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303while(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeEOFRecord(i);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeEOFRecord(i+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuf.length;i++){buffer.writeEOFRecord(i);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){writeEOFRecord(i);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=0){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length-5;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=2;i<recordBuf.length-2;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-8;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[i]=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(null);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(wBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(0,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=0){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){buffer.writeRecord(REcordBuf);}else{buffer.writeRecord(REcordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=0){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==0){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&recordBuf[i]!=0;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length/2+1;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length/3;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length/2+4;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=2;i<recordBuf.length&&recordBuf[i]!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&recordBuf[i]==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordsBuf.length;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(currName,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeBytes(recordBuf[i]
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null||recordBuf.length==0){for(inti=0;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null||recordBuf.length<0){for(inti=0;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuffer.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<RecordBuffer.length;i++){buffer.writeEOFRecord(i);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeEOFRecord(0);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeEOFRecord();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);recordBuf[0]=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){recordBuf[i]=buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordsBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&recordBuf[i]!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&recordBuf[i]==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length-1&&++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&recordBuf[i]>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length+++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(REcordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i]
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeEOFRecord(recordBuf[i],}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i==recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){recordBuf[i]=buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf,0,recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordsBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getLongName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(EOFRecord.toString());}else{buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>recordBuf.length){buffer.writeRecord(EOFRecord.toString());}else{buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(!closed){byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i!=recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&!isEnabled(Feature.FLUSH_PASSED_TO_STREAM)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length&&!isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){recordBuf=buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf[i],recordBuf[i]);}else{buffer.writeRecord(0,recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303For(inti=0;i<recordBuf.length&&recordBuf[i]!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303For(inti=0;i<recordBuf.length-4;++i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303while(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i!=0){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecordBytes();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord(0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303byte[]recordBuf=getEOFRecord2();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>=recordBuf.length){if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i!=recordBuf.length){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){byte[]recordBuf=getEOFRecord(currName);writeEOFRecord(recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=0;i<recordBuf.length;--i){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<records.length;++i){buffer.writeEOFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeEEFRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){if(i<recordBuf.length){buffer.writeRecord(recordBuf[i]);}else{buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303while(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<currSize;++i){writeEOFRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,1,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length+1&&recordBuf[i]!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303for(inti=1;i<recordBuf.length&&recordBuf[i]!=null);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(recordBuf.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i<recordBuf.length){buffer.writeRecord(REcord.toString());}else{buffer.writeRecord(EOFRecord.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(i>0){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(currName!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){for(inti=0;i<records.length;++i){buffer.writeBytes(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,0,recordBuf.length);RecordBuf[i]=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java303if(recordBuf!=null){System.arraycopy(recordBuf,0,recordBuf,1,recordBuf.length);recordBuf[i]=0;}
