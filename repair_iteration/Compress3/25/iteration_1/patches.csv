bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  2);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  2);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
7	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
9	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
10	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
17	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  1;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  +  1;	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  writeEOFRecord(i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i);	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  recordBuf[i]  =  getRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getRecord();  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getRecord();	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  i;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  +  i;	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  recordBuf[i]  =  getEORFecord();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEORFecord();  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEORFecord();	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
24	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  2);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
30	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName);	  recordBuf[i]    =    getEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  0);	  recordBuf[i]    =    getEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  i);	  recordBuf[i]    =    getEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
35	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1);	  recordBuf[i]    =    getEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  buffer);	  recordBuf[i]    =    getEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
38	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  -  1);	  recordBuf[i]    =    getEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
39	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
40	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf.length  >  0)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
46	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  1];  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  1];	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  ];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  ];  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  ];	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU];  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU];	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
50	[BUG]  [BUGGY]  recordBuf[i]  =  1L;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  1L;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  1L;	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
51	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
54	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.DEFAULT;	  recordBuf[i]    =    EOFRecord.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
57	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.DEFAULT;	  recordBuf[i]    =    EOFRecord.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
58	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.RELATIVE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  EOFRecord.RELATIVE;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.RELATIVE;	  recordBuf[i]    =    EOFRecord.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
59	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord();  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.toEOFRecord();	  recordBuf[i]    =    EOFRecord.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
60	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.DEFAULT  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  EOFRecord.DEFAULT  +  1;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.DEFAULT  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
61	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
62	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  currName);	  recordBuf[i]    =    getEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
64	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  i);	  recordBuf[i]    =    getEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
65	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  2);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  2);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
73	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
74	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
75	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  2);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  2);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  2);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
77	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.EMPTY;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  EOFRecord.EMPTY;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.EMPTY;	  recordBuf[i]    =    0L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
78	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.ERROR;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  EOFRecord.ERROR;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.ERROR;	  recordBuf[i]    =    0L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
79	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord();  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord();	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
80	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i];  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i];	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++];  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++];	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(0);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(0);	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
85	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  computeEOFRecord(i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i);	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
86	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
87	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
88	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
89	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
90	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
91	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
92	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
93	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
94	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
95	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0L);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0L);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0L);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
97	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  3);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  3);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
98	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0L);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0L);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
99	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  3);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  3);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
100	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf.length);	  recordBuf[i]    =    0L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
101	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length;  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length;	  recordBuf[i]    =    0L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
102	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  i);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
103	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
104	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
105	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
106	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
107	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wOffset);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wOffset);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wOffset);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
108	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aLen);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aLen);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aLen);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
109	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
110	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
111	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
112	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
113	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i]);	  recordBuf[i]    =    0L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
114	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  i);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  i);	  recordBuf[i]    =    0L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
115	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i]);	  recordBuf[i]    =    0L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
116	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
117	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  writeEOFRecord();  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord();	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
118	[BUG]  [BUGGY]  recordBuf[i]  =  readEOFRecord();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  readEOFRecord();  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  readEOFRecord();	  recordBuf[i]    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
119	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  4);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
120	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  3);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
121	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
122	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  6);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  6);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  6);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
123	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  11);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  11);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  11);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
124	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
125	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
126	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf);	  recordBuf[i]    =    getEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
127	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    EOFRecord.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
128	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i]);	  recordBuf[i]    =    EOFRecord.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
129	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i]);	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
130	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName);	  recordBuf[i]    =    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
131	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf);	  recordBuf[i]    =    getEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
132	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU);	  recordBuf[i]    =    getEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
133	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]);	  recordBuf[i]    =    getEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
134	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {    [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length);  [BUGGY]    }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
