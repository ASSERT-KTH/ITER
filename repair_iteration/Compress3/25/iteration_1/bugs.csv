bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i]);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i]);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
2	[BUG]  [BUGGY]  recordBuf[i]  =  0L;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  0L;  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  0L;	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
3	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  getEOFRecord(i);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
4	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
5	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  getEOFRecord();  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord();	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
6	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
7	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]    [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	  	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
8	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
9	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
10	[BUG]  [BUGGY]  recordBuf[i]  =  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  1;  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  1;	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
11	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  i);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  i);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
12	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
13	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
14	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName);  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName);	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
15	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.DEFAULT;  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  [BUGGY]  recordBuf[i]  =  EOFRecord.DEFAULT;  [BUGGY]  }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.DEFAULT;	recordBuf[i]  =  0;  	non-compiled	[CE]  <identifier>  expected	49	None	replace
