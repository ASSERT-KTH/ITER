bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  recordBuf[i]  =  RELATIVE;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RELATIVE;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RELATIVE;	  recordBuf[i]    =    EOFRecord.RELATIVE;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
2	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.EOF;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.EOF;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.EOF;	  recordBuf[i]    =    EOFRecord.RELATIVE;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
3	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.readEOFRecord();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.readEOFRecord();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.readEOFRecord();	  recordBuf[i]    =    EOFRecord.RELATIVE;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
4	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
5	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
6	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
7	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
8	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
9	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
10	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  3);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
11	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  4);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
12	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  128);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  128);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  128);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
13	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  i);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
14	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
15	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  +  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
16	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
17	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  0);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  0);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
18	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  2);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  2);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
19	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  4);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  4);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
22	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  buffer.writeRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	buffer.writeRecord(recordBuf[i]);	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
23	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  recordBuf.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  recordBuf.writeRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  recordBuf.writeRecord(recordBuf[i]);	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
24	[BUG]  [BUGGY]  (TarBuffer)this.recordBuf.clone();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  (TarBuffer)this.recordBuf.clone();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	(TarBuffer)this.recordBuf.clone();	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
25	[BUG]  [BUGGY]  (TarBuffer)recordBuf.clone();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  (TarBuffer)recordBuf.clone();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	(TarBuffer)recordBuf.clone();	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
26	[BUG]  [BUGGY]  (recordBuf[i]!=  null)?  null  :  recordBuf.length;  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  (recordBuf[i]!=  null)?  null  :  recordBuf.length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	(recordBuf[i]!=  null)?  null  :  recordBuf.length;	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i!=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i!=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length  -  1;  i!=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  ==  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  ==  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length  -  1;  i  ==  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length  -  1;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
33	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT_BACKSLASH;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT_BACKSLASH;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.DEFAULT_BACKSLASH;	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
34	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  |  TarBuffer.DEFAULT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  |  TarBuffer.DEFAULT;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.DEFAULT  |  TarBuffer.DEFAULT;	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
35	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.DEFAULT  +  1;	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
36	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.EOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.EOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.EOFRecord(recordBuf[i]);	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
37	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR];	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
38	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_GNU];	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
39	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU+1];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU+1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU+1];	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
40	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU]  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU]  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU]  +  1;	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
41	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_ERROR];	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
42	[BUG]  [BUGGY]  RecordBuf[i]  =  getEOFRecord();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuf[i]  =  getEOFRecord();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuf[i]  =  getEOFRecord();	  recordBuf[i]    =    getEOFRecord()    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
43	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  /  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord()  /  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  /  1;	  recordBuf[i]    =    getEOFRecord()    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  EOFRecord();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord();	  recordBuf[i]    =    getEOFRecord()    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i  +  1]);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
46	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  buffer);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
47	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i++]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i++]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i++]);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
48	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].toString());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].toString());	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
49	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].recordSize);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].recordSize);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
50	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i]  +  1);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
51	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    i);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
52	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    i);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
53	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  4);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    i);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
54	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  *  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  *  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  *  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    i);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
55	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    i);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
56	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(recordBuf,  i);	  recordBuf[i]    =    writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
57	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i]);	  recordBuf[i]    =    writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
58	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(recordBuf.length);	  recordBuf[i]    =    writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
59	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(recordBuf);	  recordBuf[i]    =    writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
60	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(recordBuf[i]);	  recordBuf[i]    =    writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
61	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf.length,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(recordBuf.length,  i);	  recordBuf[i]    =    writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
62	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU].writeEOFRecord();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU].writeEOFRecord();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_GNU].writeEOFRecord();	  recordBuf[i]    =    new    byte[LONGFILE_GNU].writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
63	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(currName);	  recordBuf[i]    =    new    byte[LONGFILE_GNU].writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
64	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(i);	  recordBuf[i]    =    new    byte[LONGFILE_GNU].writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
65	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf[i]);	  recordBuf[i]    =    new    byte[LONGFILE_GNU].writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
66	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf.length);	  recordBuf[i]    =    new    byte[LONGFILE_GNU].writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
67	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf);	  recordBuf[i]    =    new    byte[LONGFILE_GNU].writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
68	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  3);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
73	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
74	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  -  1);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
75	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
76	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  -  2);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
77	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
78	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length,  buffer.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length,  buffer.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length,  buffer.length);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
79	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1,  currName.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1,  currName.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1,  currName.length);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
80	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
81	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
82	[BUG]  [BUGGY]  ||  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  ||  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	||  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
83	[BUG]  [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
84	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  <  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
85	[BUG]  [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
86	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1];	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
87	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
88	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
89	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  currName);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
90	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemBuf[i]);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
91	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  0);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
92	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i  +  1]);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
93	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemBuf);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemBuf);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
94	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
95	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2]  -  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2]  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2]  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
96	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  -  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
97	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3]  -  i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3]  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3]  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
98	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1]  -  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1]  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1]  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
99	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  2);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
100	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
101	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
102	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
103	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
104	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
105	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  /  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  /  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  /  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
106	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  true);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  true);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
107	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
108	[BUG]  [BUGGY]  RecordBuffer  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuffer  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  true);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuffer  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  true);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
109	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  null);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  null);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
110	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  0);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
111	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  buffer);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
112	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
113	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].getLength());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].getLength());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].getLength());	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
114	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  0);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    aLen);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
115	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  aLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  aLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  aLen);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    aLen);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
116	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aLen  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aLen  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aLen  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    aLen);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
117	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i  +  1]);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
118	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i  -  1]);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
119	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].getName());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].getName());	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
120	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].getLength());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].getLength());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].getLength());	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
121	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[0]);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[0]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[0]);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
122	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4  +  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    4);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
123	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
124	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
126	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  buffer.writeEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	buffer.writeEOFRecord(recordBuf[i]);	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
127	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(REcordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(REcordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
128	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
129	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  RecordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  RecordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  RecordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
130	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  -  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  -  1;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i++];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
131	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1];	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i++];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
132	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  +  1;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i++];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
133	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++].length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++].length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++].length;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i++];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
134	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i++];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
135	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  &  0xff;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  &  0xff;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]  &  0xff;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i++];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
136	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  2);	  recordBuf[i]    =    getEOFRecord(i    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
137	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  3);	  recordBuf[i]    =    getEOFRecord(i    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
138	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  buffer.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  buffer.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  buffer.length);	  recordBuf[i]    =    getEOFRecord(i    +    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
139	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
140	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  4);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
141	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
142	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  0,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
143	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  i);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
144	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  3);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
145	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  recordBuf.length  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
146	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  0L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  0L);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  0L);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0L);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
147	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0L,  0L);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0L,  0L);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0L,  0L);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0L);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
148	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
149	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf.length  -  1);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
150	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  +  1]);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
151	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  1]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1]);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
152	[BUG]  [BUGGY]  RecordBuf  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuf  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuf  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1]);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
153	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  2]);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  2]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  2]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1]);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
154	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1]);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
155	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  currName  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
156	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
157	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  2);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
158	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
159	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
160	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i];	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
161	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
162	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU.length()  ];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU.length()  ];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU.length()  ];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    ];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
163	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU.length()  ];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU.length()  ];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_GNU.length()  ];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    ];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
164	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[recordBuf.length()  ];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[recordBuf.length()  ];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[recordBuf.length()  ];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    ];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
165	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR.length()  ];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR.length()  ];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_ERROR.length()  ];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    ];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
166	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR.length()  +  1];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR.length()  +  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_ERROR.length()  +  1];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    ];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
167	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  2];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  2];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  2];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    ];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
168	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  0);	  recordBuf[i]    =    getEOFRecord(currName,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
169	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  1);	  recordBuf[i]    =    getEOFRecord(currName,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
170	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  0,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
171	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  4);	  recordBuf[i]    =    getEOFRecord(currName,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
172	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0L);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0L);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  0L);	  recordBuf[i]    =    getEOFRecord(currName,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
173	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  2);	  recordBuf[i]    =    getEOFRecord(currName,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
174	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  buffer,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(i,    buffer);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
175	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf);	  recordBuf[i]    =    getEOFRecord(i,    buffer);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
176	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  buffer,  0);	  recordBuf[i]    =    getEOFRecord(i,    buffer);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
177	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer,  assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  buffer,  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  buffer,  assemLen);	  recordBuf[i]    =    getEOFRecord(i,    buffer);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
178	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(1);	  recordBuf[i]    =    getEOFRecord(0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
179	[BUG]  [BUGGY]  recordBuf[i]  =  getRecord(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getRecord(i);	  recordBuf[i]    =    getEOFRecord(0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
180	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  8);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  8);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  8);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    3);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
181	[BUG]  [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
183	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
184	[BUG]  [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
185	[BUG]  [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
186	[BUG]  [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i],  currName);  }  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i],  currName);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i],  currName);  }  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
187	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  buffer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  currName,  buffer);	  recordBuf[i]    =    getEOFRecord(i,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
188	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  assemBuf,  currName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  assemBuf,  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  assemBuf,  currName);	  recordBuf[i]    =    getEOFRecord(i,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
189	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  currName,  0);	  recordBuf[i]    =    getEOFRecord(i,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
190	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  assemBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  assemBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  assemBuf[i]);	  recordBuf[i]    =    getEOFRecord(i,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
191	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  currName,  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(i,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
192	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2];	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    i);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
193	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  11);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  11);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  11);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    i);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
194	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
195	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  1  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  1  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  1  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
196	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  -  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
197	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  2  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  2  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  2  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
198	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  4);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
199	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  4);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
200	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  3);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
201	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
202	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf.length  -  1);	  recordBuf[i]    =    getEOFRecord(recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
203	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf.length  +  1);	  recordBuf[i]    =    getEOFRecord(recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
204	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf.length  +  i);	  recordBuf[i]    =    getEOFRecord(recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
205	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  2  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  2  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  2  +  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    2);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
206	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  8);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  8);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  8);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    2);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
207	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
208	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(assemBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(assemBuf[i],  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(assemBuf[i],  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
209	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
210	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  wOffset);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  wOffset);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  wOffset);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
211	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  this.assemBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  this.assemBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  this.assemBuf);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
212	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i  +  1]);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
213	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i],  buffer);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
214	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i],  currName);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
215	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i].getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i].getName());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i].getName());	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
216	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i]  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
217	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i++]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i++]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i++]);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
219	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i].getName());  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
220	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(recordBuf[j].getName());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(recordBuf[j].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(recordBuf[j].getName());  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
221	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i].getName());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  buffer.writeRecord(recordBuf[i].getName());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	buffer.writeRecord(recordBuf[i].getName());	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
222	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getAbsolutePath());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getAbsolutePath());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getAbsolutePath());  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
223	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getLongName());  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getLongName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getLongName());  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
225	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
226	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
227	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
228	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
229	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
230	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
231	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
232	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
233	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
234	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(i,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(i,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(i,  0,  recordBuf.length);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
235	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(0,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(0,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(0,  0,  recordBuf.length);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
236	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  2);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
237	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.writeEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  EOFRecord.writeEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.writeEOFRecord(recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
238	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.EMPTY;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.EMPTY;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.EMPTY;	  recordBuf[i]    =    EOFRecord.EMPTY;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
240	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
241	[BUG]  [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
242	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeEOFRecord(j);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeEOFRecord(j);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeEOFRecord(j);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
243	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i  +  1);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i  +  1);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i  +  1);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
244	[BUG]  [BUGGY]  recordBuf[i]  =  recordBuf.length  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  recordBuf.length  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  recordBuf.length  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
245	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.DEFAULT  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
246	[BUG]  [BUGGY]  recordBuf[i]  =  recordBuf.toString()  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  recordBuf.toString()  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  recordBuf.toString()  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
247	[BUG]  [BUGGY]  recordBuf[i]  =  recordBuf[i]  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  recordBuf[i]  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  recordBuf[i]  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
248	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.DEFAULT  +  2;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  EOFRecord.DEFAULT  +  2;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.DEFAULT  +  2;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
249	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
250	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
251	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  4]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  4]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  4]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
252	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i++]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
253	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
254	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
255	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(REcordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
256	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
257	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
258	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  currName);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
259	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  buffer);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  buffer);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
260	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  currName);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
261	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  0);	  recordBuf[i]    =    getEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
262	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  2  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  2  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  2  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
263	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
264	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen,  buffer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemLen,  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
265	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  assemLen);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
266	[BUG]  [BUGGY]  recordBuf[i]  =  readEOFRecord(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  readEOFRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  readEOFRecord(i);	  recordBuf[i]    =    readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
267	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
268	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  recordBuf.length;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  recordBuf.length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  +  recordBuf.length;	  recordBuf[i]    =    getEOFRecord()    +    i;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
269	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  i  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord()  +  i  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  +  i  +  1;	  recordBuf[i]    =    getEOFRecord()    +    i;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
270	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  /  i;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord()  /  i;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  /  i;	  recordBuf[i]    =    getEOFRecord()    +    i;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
271	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  *  i;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord()  *  i;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  *  i;	  recordBuf[i]    =    getEOFRecord()    +    i;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
272	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
273	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i  +  1]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
274	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i].getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i].getName());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i].getName());	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
275	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i-1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i-1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i-1]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
276	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i++]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i++]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i++]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
277	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
278	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf[i]);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
279	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  1,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
280	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  -  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
281	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
282	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  +  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
283	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  0);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    buffer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
284	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  assemLen);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    buffer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
285	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  assemBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  assemBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  assemBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    buffer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
286	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    buffer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
287	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
288	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
289	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
290	[BUG]  [BUGGY]  assemBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  assemBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	assemBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
291	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    3);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
292	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
293	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  /  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  /  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  /  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
294	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf[i]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
295	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
296	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
297	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i  +  1]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
298	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  -  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
299	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
300	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
301	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i  -  1]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
302	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i]);	  recordBuf[i]    =    System.arraycopy(ttarBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
303	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(ttarBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
305	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
306	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
307	[BUG]  [BUGGY]  (recordBuf[i]!=  null)?  null  :  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  (recordBuf[i]!=  null)?  null  :  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	(recordBuf[i]!=  null)?  null  :  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
308	[BUG]  [BUGGY]  writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  writeEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	writeEOFRecord(recordBuf[i]);	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
309	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
310	[BUG]  [BUGGY]  readEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  readEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	readEOFRecord(recordBuf[i]);	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
311	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  6);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  6);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  6);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    4);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
312	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
313	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
314	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  0);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
315	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
316	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  2);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length  -  2);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
317	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer.length);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer.length);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
318	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
319	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
320	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(0));  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(0));  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(0));  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
321	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(EOFRecord.get(j);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(EOFRecord.get(j);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(EOFRecord.get(j);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
322	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(EOFRecord.get(i);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(EOFRecord.get(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(EOFRecord.get(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
323	[BUG]  [BUGGY]  buffer.writeRecord(EOFRecord.get(i);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  buffer.writeRecord(EOFRecord.get(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	buffer.writeRecord(EOFRecord.get(i);	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
324	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    new    EOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
325	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    new    EOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
326	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  2);	  recordBuf[i]    =    new    EOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
327	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  4);	  recordBuf[i]    =    new    EOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
328	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  -  1]);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
329	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i  +  1]);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
330	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  buffer);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
331	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i++]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i++]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i++]);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
332	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i  -  1]);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
333	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i].getBytes());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i].getBytes());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i].getBytes());	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
334	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i]  +  1);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
335	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  +  1);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
336	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  -  1);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
337	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  +  2);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
338	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
339	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf.length  -  2);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
340	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  recordBuf.length);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
341	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  currName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i,  currName);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
342	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  0);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
343	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i  +  1]);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
344	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i++]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i++]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i++]);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
345	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.toEOFRecord(i);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
346	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord()  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.toEOFRecord()  +  1;	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
347	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.toEOFRecord();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.toEOFRecord();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.toEOFRecord();	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
348	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.toEOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.toEOFRecord(recordBuf,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.toEOFRecord(recordBuf,  i);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
349	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.toEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.toEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.toEOFRecord(recordBuf[i]);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
350	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.toEOFRecord(buffer,  i);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.toEOFRecord(buffer,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.toEOFRecord(buffer,  i);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
351	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  -  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
352	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  +  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
353	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
354	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.ERROR;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.ERROR;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.ERROR;	  recordBuf[i]    =    EOFRecord.ERROR;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
355	[BUG]  [BUGGY]  recordBuf[i]  =  EOFRecord.ERROR  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  EOFRecord.ERROR  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  EOFRecord.ERROR  +  1;	  recordBuf[i]    =    EOFRecord.ERROR;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
356	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(i);	  recordBuf[i]    =    EOFRecord.ERROR;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
357	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  buffer);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
358	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  0);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
359	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i]  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
360	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].recordSize);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].recordSize);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
361	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  1L);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  1L);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  1L);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    1);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
362	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(recordBuf[j]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(recordBuf[j]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(recordBuf[j]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
363	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
364	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
365	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i  +  1);	  recordBuf[i]    =    writeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
366	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(i  +  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i  +  1,  recordBuf.length);	  recordBuf[i]    =    writeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
367	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i,  recordBuf[i]);	  recordBuf[i]    =    writeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
368	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  buffer);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(i,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i,  buffer);	  recordBuf[i]    =    writeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
369	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    4);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
370	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  -  1);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
371	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  0);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
372	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  +  1);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
373	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  buffer.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  buffer.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  buffer.length);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
374	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length  -  2);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
375	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  i);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
376	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf,  i.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf,  i.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf,  i.length);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
377	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  i);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
378	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  i);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
379	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  i);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
380	[BUG]  [BUGGY]  recordBuf[i]  =  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  2;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  2;	  recordBuf[i]    =    1L;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
381	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
382	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
383	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
384	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
385	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  1)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  1)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  1)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
386	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  else  {  buffer.write  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  else  {  buffer.write  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  else  {  buffer.write	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
387	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
388	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
389	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  /  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
390	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
391	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
392	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
393	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  1L);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  1L);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  1L);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
394	[BUG]  [BUGGY]  RecordBuf  recordBuf[]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuf  recordBuf[]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuf  recordBuf[]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
395	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
396	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  1);	  recordBuf[i]    =    getEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
397	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  1,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
398	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
399	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
400	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  +  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
401	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
402	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
403	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  3);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
404	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
405	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  3  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  3  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  3  +  1);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    3);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
406	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  2  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  2  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  2  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    2);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
407	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  buffer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  buffer);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
408	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i  +  1]);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
409	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  0);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
410	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
411	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i].getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i].getName());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i].getName());	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
412	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i]  +  1);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
413	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
414	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
415	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
416	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(j);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(j);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  buffer.writeRecord(j);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
417	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(i);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
418	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  [i];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  [i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  [i];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	47	None	replace
419	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  *  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  *  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  *  1];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	47	None	replace
420	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  |  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  |  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  |  1];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	47	None	replace
421	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  1];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	47	None	replace
422	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getName());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getName());	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
423	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getLength());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getLength());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getLength());	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
424	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i]  -  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
425	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i  +  1);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
426	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(recordBuf[i]);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
427	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i,  recordBuf.length);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
428	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(i  +  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i  +  1,  recordBuf.length);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
429	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i,  recordBuf[i]);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
430	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  buffer);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i,  buffer);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
431	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(i  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i  -  1);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
432	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
433	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  +  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
434	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_TRUNCATE);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_TRUNCATE);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
435	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_ERROR);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_ERROR);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
436	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  0);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
437	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
438	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  0,  LONGFILE_GNU);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  0,  LONGFILE_GNU);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
439	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.EOF;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.EOF;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.EOF;	  recordBuf[i]    =    RecordBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
440	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT_BACKSLASH;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT_BACKSLASH;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.DEFAULT_BACKSLASH;	  recordBuf[i]    =    RecordBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
441	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.ERROR;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.ERROR;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.ERROR;	  recordBuf[i]    =    RecordBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
442	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
443	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
444	[BUG]  [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
445	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  writeEOFRecord(j);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  writeEOFRecord(j);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  writeEOFRecord(j);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
446	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
447	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  1;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  1;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  1;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
448	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);	  recordBuf[i]    =    System.arraycopy(REcordBuf,    0,    recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
449	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
450	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
451	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
452	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
453	[BUG]  [BUGGY]  recordBuf[i]  =  getEORFecord(i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEORFecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEORFecord(i);	  recordBuf[i]    =    getEORFecord();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
454	[BUG]  [BUGGY]  recordBuf[i]  =  getEORFecord()  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEORFecord()  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEORFecord()  +  1;	  recordBuf[i]    =    getEORFecord();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
455	[BUG]  [BUGGY]  recordBuf[i]  =  getEORFecord()  +  i;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEORFecord()  +  i;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEORFecord()  +  i;	  recordBuf[i]    =    getEORFecord();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
456	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  0);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0L);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
457	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  0L);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  0L);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  0L);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0L);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
458	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0L,  0L);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0L,  0L);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0L,  0L);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0L);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
459	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR  +  i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_ERROR  +  i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_ERROR  +  i];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
460	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  1];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
461	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU  +  i];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[lONGFILE_GNU  +  i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[lONGFILE_GNU  +  i];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
462	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU  +  i];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU  +  i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU  +  i];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
463	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[recordBuf.length  +  i];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[recordBuf.length  +  i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[recordBuf.length  +  i];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
464	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  *  i];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  *  i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR  *  i];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
465	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  buffer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  buffer);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
466	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
467	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  0);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
468	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++].recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++].recordSize);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++].recordSize);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
469	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  writeEOFRecord(recordBuf[j]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  writeEOFRecord(recordBuf[j]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  j  =  0;  j  <  recordBuf.length;  ++j)  {  writeEOFRecord(recordBuf[j]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
470	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
471	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i].getName());  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
472	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  numToWrite);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  numToWrite);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  numToWrite);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    wOffset);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
473	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  wOffset);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  wOffset);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  buffer,  wOffset);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    wOffset);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
474	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  buffer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
475	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  0);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
476	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  assemBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  assemBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  assemBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
477	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
478	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  null);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  null);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
479	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  aLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  aLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  aLen);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
480	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  assemLen);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  assemLen);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
481	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  *  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
482	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  4);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
483	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
484	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
485	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
486	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
487	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
488	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1].length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1].length);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
489	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  true);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  true);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
490	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
491	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  null);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  null);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
492	[BUG]  [BUGGY]  RecordBuffer  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuffer  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  true);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuffer  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  true);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
493	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  0);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
494	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  buffer);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  buffer);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
495	[BUG]  [BUGGY]  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
496	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
497	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
498	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
499	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
500	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
501	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  else  {  buffer.writeRecord  [CE]  <identifier>  expected  [FE]                                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  else  {  buffer.writeRecord  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  else  {  buffer.writeRecord	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
502	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  -  2);	  recordBuf[i]    =    getEOFRecord(i    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
503	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  *  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  *  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  *  1);	  recordBuf[i]    =    getEOFRecord(i    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
504	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  -  1  +  1);	  recordBuf[i]    =    getEOFRecord(i    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
505	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(i  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(i  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(i  -  1);	  recordBuf[i]    =    getEOFRecord(i    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
506	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1  -  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
507	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
508	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1  +  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1  +  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
509	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  0,  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  0,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  0,  i);	  recordBuf[i]    =    getEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
510	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  i  +  1,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
511	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  LONGFILE_GNU);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  LONGFILE_GNU);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
512	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  LONGFILE_ERROR);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  LONGFILE_ERROR);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
513	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].getLength());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].getLength());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].getLength());	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
514	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  11);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  11);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length  -  11);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
515	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  /  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  /  recordBuf.length  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  /  recordBuf.length  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    recordBuf.length    -    i);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
516	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
517	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU,  i);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
518	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  LONGFILE_GNU  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
519	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  +  i);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
520	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
521	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
522	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEEFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEEFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEEFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
523	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
524	[BUG]  [BUGGY]  readEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  readEOFRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	readEOFRecord(recordBuf);	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
525	[BUG]  [BUGGY]  readEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  readEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	readEOFRecord(recordBuf,  0,  recordBuf.length);	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
526	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
527	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1  +  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1  +  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
528	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0];	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i++];    	non-compiled	[CE]  <identifier>  expected	82	None	replace
529	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  10);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  10);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  10);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    *    i);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
530	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4  +  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  4  +  i);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    4);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
531	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  recordBuf  =  i;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
532	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
533	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i.next;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i.next;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  recordBuf  =  i.next;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
534	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  recordBuf  =  i;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
535	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i.getLength();  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  recordBuf  =  i.getLength();  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  recordBuf  =  i.getLength();  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
536	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
537	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
538	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
539	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
540	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].readEOFRecord());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].readEOFRecord());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].readEOFRecord());  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
541	[BUG]  [BUGGY]  RecordBuf[i]  =  new  byte[LONGFILE_ERROR.length()];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuf[i]  =  new  byte[LONGFILE_ERROR.length()];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuf[i]  =  new  byte[LONGFILE_ERROR.length()];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    +    1];    	non-compiled	[CE]  <identifier>  expected	47	None	replace
542	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
543	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i!=  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i!=  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
544	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
545	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i!=  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i!=  recordBuf.length)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
546	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
547	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
548	[BUG]  [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
549	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
550	[BUG]  [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i  +  1);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
551	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  11);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  11);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  11);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    4);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
552	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  +  i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  +  i;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.DEFAULT  +  i;	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
553	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  ||  recordBuf[i]  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  ||  recordBuf[i]  =  0;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.DEFAULT  ||  recordBuf[i]  =  0;	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
554	[BUG]  [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBuffer.DEFAULT  -  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBuffer.DEFAULT  -  1;	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
555	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
556	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1  +  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1  +  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
557	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length,  i);	  recordBuf[i]    =    new    EOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
558	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  i);	  recordBuf[i]    =    new    EOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
559	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord().length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord().length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord().length;	  recordBuf[i]    =    getEOFRecord()    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
560	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord()  -  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  -  1;	  recordBuf[i]    =    getEOFRecord()    +    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
561	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length  *  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
562	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf.length,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf.length,  i);	  recordBuf[i]    =    getEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
563	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(buffer,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(buffer,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(buffer,  i);	  recordBuf[i]    =    getEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
564	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
565	[BUG]  [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
566	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(0));  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(0));  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(0));  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
567	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf,  assemBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf,  assemBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf,  assemBuf);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
568	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  LONGFILE_GNU);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  LONGFILE_GNU);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
569	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[recordBuf.length];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[recordBuf.length];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[recordBuf.length];	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
570	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
571	[BUG]  [BUGGY]  ((  TarBuffer)recordBuf).writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  ((  TarBuffer)recordBuf).writeEOFRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	((  TarBuffer)recordBuf).writeEOFRecord(i);	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
572	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
573	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
574	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
575	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);	  recordBuf[i]    =    System.arraycopy(ttarBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
576	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(ttarBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(ttarBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
577	[BUG]  [BUGGY]  recordBuf[i]  =  LONGFILE_ERROR;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  LONGFILE_ERROR;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  LONGFILE_ERROR;	  recordBuf[i]    =    EOFRecord.ERROR;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
578	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
579	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currSize);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currSize);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currSize);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
580	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]],  currName);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]],  currName);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]],  currName);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
581	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i], "EOFRecord ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i], "EOFRecord ");  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i], "EOFRecord ");  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
582	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  2  +  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  2  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  -  2  +  i);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
583	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf[i].length);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
584	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  +  1,  recordBuf.length  *  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
585	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    3);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
586	[BUG]  [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >=  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
587	[BUG]  [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >=  recordBuf.length)  {  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
588	[BUG]  [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  new  EOFRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  new  EOFRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  recordBuf[i]  =  new  EOFRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
589	[BUG]  [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  getEOFRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  getEOFRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  recordBuf[i]  =  getEOFRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
590	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  0);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
591	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedOutputStream(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedOutputStream(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedOutputStream(recordBuf[i]);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
592	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i].getChars(0,  i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i].getChars(0,  i));  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i].getChars(0,  i));	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
593	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  currName,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  currName,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(i,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
594	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  currName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  currName);	  recordBuf[i]    =    getEOFRecord(i,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
595	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
596	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
597	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
598	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  recordBuf.length  -  1;  i  >>  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
599	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0  +  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0  +  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    i);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
600	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  i  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  i  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    i);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
601	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  wOffset);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  wOffset);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  wOffset);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
602	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  wBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  wBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  wBuf);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
603	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  LONGFILE_GNU);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  LONGFILE_GNU);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
604	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  assemBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  assemBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  assemBuf);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
605	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  wOffset);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  wOffset);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  wOffset);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
606	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  assemBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  assemBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf[i],  assemBuf[i]);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
607	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf[i],  0);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
608	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  wOffset);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  wOffset);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i],  wOffset);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
609	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(buffer,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(buffer,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(buffer,  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
610	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  11);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  11);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length  +  11);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
611	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  -  1,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
612	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf[i].length);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
613	[BUG]  [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
614	[BUG]  [BUGGY]  recordBuf[i]  =  wBuf.toEOFRecord();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  wBuf.toEOFRecord();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  wBuf.toEOFRecord();	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
615	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(i  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.toEOFRecord(i  +  1);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
616	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.toEOFRecord(recordBuf[i]);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
617	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.toEOFRecord(recordBuf);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
618	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  11);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  11);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  11);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
619	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  4];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  4];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR.length()  +  4];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR.length()    ];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
620	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  11);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  11);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  11);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    11);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
621	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1  +  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  1  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  -  1  +  i);	  recordBuf[i]    =    getEOFRecord(i    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
622	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  -  4);	  recordBuf[i]    =    getEOFRecord(i    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
623	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  -  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  -  3);	  recordBuf[i]    =    getEOFRecord(i    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
624	[BUG]  [BUGGY]  recordBuf[i]  =  wBuf[i];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  wBuf[i];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  wBuf[i];	  recordBuf[i]    =    getEOFRecord(0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
625	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  currName);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
626	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  wOffset);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  wOffset);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  wOffset);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
627	[BUG]  [BUGGY]  recordBuf[i]  =  0  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  0  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  0  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
628	[BUG]  [BUGGY]  recordBuf[i]  =  recordBuf.deFAULT  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  recordBuf.deFAULT  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  recordBuf.deFAULT  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
629	[BUG]  [BUGGY]  recordBuf[i]  =  i  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  i  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  i  +  1;	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
630	[BUG]  [BUGGY]  recordBuf[i]  =  wBuf[i  +  1];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  wBuf[i  +  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  wBuf[i  +  1];	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
631	[BUG]  [BUGGY]  recordBuf[i]  =  readEOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  readEOFRecord(recordBuf,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  readEOFRecord(recordBuf,  i);	  recordBuf[i]    =    readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
632	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  *  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
633	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  buffer.length);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
634	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i  +  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i  +  1];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
635	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
636	[BUG]  [BUGGY]  int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
637	[BUG]  [BUGGY]  int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuflength);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuflength);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuflength);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
638	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
639	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf);  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
640	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.copyRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.copyRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.copyRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
641	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(REcordBuf,    0,    recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
642	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1  +  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1  +  i);	  recordBuf[i]    =    System.arraycopy(REcordBuf,    0,    recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
643	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf[i].length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
644	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
645	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
646	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i++];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i++];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf[i],  0,  recordBuf[i++];	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
647	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
648	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(wBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(wBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(wBuf,  0,  recordBuf.length);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
649	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  i  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
650	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf.length,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf.length,  0);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
651	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf,  buffer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf,  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    buffer);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
652	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].length);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
653	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].getHeaderSize());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].getHeaderSize());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i].getHeaderSize());	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
654	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord()  -  i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord()  -  i;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord()  -  i;	  recordBuf[i]    =    getEOFRecord()    +    i;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
655	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  +  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  +  i;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.DEFAULT  +  i;	  recordBuf[i]    =    RecordBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
656	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i  +  1);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
657	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
658	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(i,  recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(i,  recordBuf);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
659	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(recordBuf,  i);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
660	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(buffer,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(buffer,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(buffer,  i);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
661	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  i  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  i  +  1);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
662	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  recordBuf);	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
663	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  -  1]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  i  -  1]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1]);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
664	[BUG]  [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1]);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
665	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  wBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
666	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i],  buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i],  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i],  buffer);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
667	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i]  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i]  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
668	[BUG]  [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
669	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  1;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
670	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  i);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
671	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
672	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  &  0xFFFF);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  &  0xFFFF);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  &  0xFFFF);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
673	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  &  0xfff);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  &  0xfff);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  &  0xfff);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
674	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++]  -  1);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
675	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf,  buffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf,  buffer);	  recordBuf[i]    =    getEOFRecord(i,    buffer);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
676	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  assemBuf,  buffer);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  assemBuf,  buffer);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  assemBuf,  buffer);	  recordBuf[i]    =    getEOFRecord(i,    buffer);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
677	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf,  buffer.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i,  recordBuf,  buffer.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i,  recordBuf,  buffer.length);	  recordBuf[i]    =    getEOFRecord(i,    buffer);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
678	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4  +  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4  +  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  4  +  i);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    4);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
679	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf,  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf,  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf,  i);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
680	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf[i].length);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
681	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  *  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
682	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  i  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  i  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
683	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
684	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  recordBuf[i]);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
685	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i],  0);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
686	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
687	[BUG]  [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
688	[BUG]  [BUGGY]  while(recordBuf[i]!=  null)  {  buffer.writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null)  {  buffer.writeEOFRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null)  {  buffer.writeEOFRecord(recordBuf[i]);	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
689	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i],  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i],  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i],  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
690	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    getRecord();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
691	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  3);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
692	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(recordBuf);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
693	[BUG]  [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  computeEOFRecord(recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  computeEOFRecord(recordBuf.length);	  recordBuf[i]    =    computeEOFRecord(i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
694	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].getBytes();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].getBytes();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].getBytes();	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
695	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].toString();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].toString();	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
696	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].record();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].record();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].record();	  recordBuf[i]    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
697	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
698	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
699	[BUG]  [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
700	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  i  +  1);	  recordBuf[i]    =    new    EOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
701	[BUG]  [BUGGY]  if(i  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  buffer.writeRecord(recordBuf[i]);  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
702	[BUG]  [BUGGY]  while(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  >  0)  {  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
703	[BUG]  [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  getEOFRecord();  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  recordBuf[i]  =  getEOFRecord();  }  else  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  recordBuf[i]  =  getEOFRecord();  }  else  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    buffer.writeRecord(recordBuf[i]);    }    else    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
704	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i],  assemLen);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
705	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i].getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i].getName());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf[i].getName());	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
706	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf.length  -  2);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
707	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
708	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i],  currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i],  currName);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i],  currName);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
709	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i].getName());  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i].getName());  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
710	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[0]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
711	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  recordBuf[i++]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  recordBuf[i++]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i++],  recordBuf[i++]);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i++]);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
712	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  LONGFILE_GNU);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  LONGFILE_GNU);	  recordBuf[i]    =    getEOFRecord(currName,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	132	None	replace
713	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  0,  recordBuf.length);	  recordBuf[i]    =    1L;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
714	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  i  *  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  i  *  1);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
715	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i],  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf[i],  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
716	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
717	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  this.assemBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  this.assemBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  this.assemBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
718	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(recordBuf,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(recordBuf,  0);	  recordBuf[i]    =    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
719	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(2);	  recordBuf[i]    =    getEOFRecord(0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
720	[BUG]  [BUGGY]  recordBuf[i]  =  createEOFRecord(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  createEOFRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  createEOFRecord(i);	  recordBuf[i]    =    getEOFRecord(0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
721	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(currName,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(currName,  recordBuf[i]);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
722	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  LONGFILE_GNU);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  currName,  LONGFILE_GNU);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
723	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(buffer,  0,  recordBuf.length  +  1,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
724	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  3);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  3);	  recordBuf[i]    =    getEOFRecord(currName,    0);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
725	[BUG]  [BUGGY]  while(recordBuf[i]!=  null  &&  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null  &&  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null  &&  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
726	[BUG]  [BUGGY]  while(recordBuf[i]!=  null  &&  recordBuf[i].length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(recordBuf[i]!=  null  &&  recordBuf[i].length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(recordBuf[i]!=  null  &&  recordBuf[i].length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
727	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemBuf,  0);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
728	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  128);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  128);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  128);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    i);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
729	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  -  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.DEFAULT  -  1;	  recordBuf[i]    =    RecordBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
730	[BUG]  [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  +  recordBuf.length;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  RecordBuffer.DEFAULT  +  recordBuf.length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  RecordBuffer.DEFAULT  +  recordBuf.length;	  recordBuf[i]    =    RecordBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
731	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(ttarBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
732	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  *  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
733	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  4);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
734	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(currName,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(currName,  0,  recordBuf.length);	  recordBuf[i]    =    buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
735	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  assemBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(assemBuf,  0,  assemBuf[i],  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(assemBuf,  0,  assemBuf[i],  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(assemBuf,    0,    recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
736	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  +  1;	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length;    	non-compiled	[CE]  <identifier>  expected	101	None	replace
737	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i],  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i],  recordBuf[i]);	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
738	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i].toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf[i].toString());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf[i].toString());	  recordBuf[i]    =    new    EOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
739	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.toEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.toEOFRecord(recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
740	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  buffer.writeEOFRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  buffer.writeEOFRecord(recordBuf);	  recordBuf[i]    =    buffer.toEOFRecord();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
741	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  i);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    wOffset);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
742	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aOffset);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aOffset);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  aOffset);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    wOffset);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
743	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  i  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  i  +  1);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    wOffset);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
744	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  false,  recordBuf[i].length);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
745	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
746	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  11]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  11]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  11]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
747	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  i  +  1,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  i  +  1,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(currName,    i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
748	[BUG]  [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
749	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
750	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i  *  LONGFILE_GNU];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i  *  LONGFILE_GNU];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_ERROR  +  i  *  LONGFILE_GNU];	  recordBuf[i]    =    new    byte[LONGFILE_ERROR    +    i];    	non-compiled	[CE]  <identifier>  expected	80	None	replace
751	[BUG]  [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
752	[BUG]  [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuffer  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i].length);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
753	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  false,  recordBuf[i].length);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    false);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
754	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  recordBuf.length  -  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    *    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	121	None	replace
755	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf.length  -  2);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
756	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf,  0);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf,  0);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
757	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf,  assemLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf,  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf,  assemLen);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	131	None	replace
758	[BUG]  [BUGGY]  recordBuf[i]  =  recordBuf[i  +  1];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  recordBuf[i  +  1];  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  recordBuf[i  +  1];	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
759	[BUG]  [BUGGY]  recordBuf[i]  =  recordBuf.get(i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  recordBuf.get(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  recordBuf.get(i);	  recordBuf[i]    =    EOFRecord.DEFAULT    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
760	[BUG]  [BUGGY]  recordBuf[i]  =  readEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  readEOFRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  readEOFRecord(recordBuf);	  recordBuf[i]    =    readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	118	None	replace
761	[BUG]  [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
762	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(0);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(0);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(0);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
763	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord();  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord();  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
764	[BUG]  [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  BufferedInputStream(recordBuf[i],  currName);	  recordBuf[i]    =    new    BufferedInputStream(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	129	None	replace
765	[BUG]  [BUGGY]  recordBuf[i]  =  new  TarBuffer();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  TarBuffer();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  TarBuffer();	  recordBuf[i]    =    TarBuffer.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
766	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
767	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i].length);	  recordBuf[i]    =    new    EOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
768	[BUG]  [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(EOFRecord.get(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(EOFRecord.get(i);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
769	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  recordBuf.length;  i  <  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
770	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length;  i  <  2;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length;  i  <  2;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  recordBuf.length;  i  <  2;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    i    <    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
771	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getName());    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
772	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length;  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length;	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
773	[BUG]  [BUGGY]  RecordBuf  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  RecordBuf  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	RecordBuf  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
774	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(RecordBuf.EOF,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(RecordBuf.EOF,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(RecordBuf.EOF,  0,  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
775	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
776	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf!=  null)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
777	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
778	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  recordBuf.length  -  1;  i  >=  0;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    recordBuf.length    -    1;    i    >=    0;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
779	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  6);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  6);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf.length  *  6);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf.length    -    6);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
780	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i]  -  2);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i]    -    1);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
781	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
782	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
783	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(i  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
784	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  buffer.writeRecord(recordBuf);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	buffer.writeRecord(recordBuf);	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
785	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  4);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  -  4);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
786	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  <  <  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  <  <  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  +  1]  <  <  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
787	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2]  -  i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2]  -  i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf[i],  0,  recordBuf[i  *  2]  -  i);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    +    1]    -    i);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
788	[BUG]  [BUGGY]  recordBuf[i]  =  createEOFRecord();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  createEOFRecord();  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  createEOFRecord();	  recordBuf[i]    =    getEORFecord();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
789	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  recordSize);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].length,  recordSize);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i].length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
790	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  recordBuf.length);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
791	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  recordSize);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(i  +  1,  recordBuf.length,  recordSize);	  recordBuf[i]    =    getEOFRecord(i    +    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
792	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].toEOFRecord());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].toEOFRecord());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  0,  recordBuf[i].toEOFRecord());	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
793	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  1);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  1);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
794	[BUG]  [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  byte[LONGFILE_GNU].writeEOFRecord(recordBuf,  0,  recordBuf.length);	  recordBuf[i]    =    new    byte[LONGFILE_GNU].writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
795	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf[i],  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
796	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf[i],  currName);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
797	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf,  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf,  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
798	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(recordBuf[i],  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(recordBuf[i],  assemLen);	  recordBuf[i]    =    getEOFRecord(i,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
799	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getHeaderSize());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getHeaderSize());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  0,  recordBuf[i].getHeaderSize());	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    0,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
800	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEEFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEEFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEEFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
801	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
802	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
803	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  -  2);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  -  2);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
804	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  *  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  *  recordBuf.length);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(recordBuf,  0,  recordBuf.length,  recordBuf.length  *  recordBuf.length);	  recordBuf[i]    =    new    EOFRecord(recordBuf,    0,    recordBuf.length,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	134	None	replace
805	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemSize);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.writeEOFRecord(recordBuf[i],  assemSize);	  recordBuf[i]    =    TarBufferUtil.writeEOFRecord(recordBuf[i],    assemLen);    	non-compiled	[CE]  <identifier>  expected	116	None	replace
806	[BUG]  [BUGGY]  if(recordBuf[i]!=  null  ||  recordBuf[i].length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null  ||  recordBuf[i].length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null  ||  recordBuf[i].length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i]);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
807	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i],  currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i],  currName);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(recordBuf[i],  currName);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
808	[BUG]  [BUGGY]  if(recordBuf[i]!=  null  ||  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null  ||  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null  ||  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
809	[BUG]  [BUGGY]  writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  writeEOFRecord(i);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	writeEOFRecord(i);	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
810	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(REcordBuf,  0,  recordBuf[i],  0,  recordBuf[i  -  1]);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf[i],    0,    recordBuf[i    -    1]);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
811	[BUG]  [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  new  EOFRecord(currName,  recordBuf[i],  recordBuf[i]);	  recordBuf[i]    =    new    EOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
812	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  recordBuf[i]);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  recordBuf[i]);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
813	[BUG]  [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  assemLen);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  getEOFRecord(currName,  recordBuf[i],  assemLen);	  recordBuf[i]    =    getEOFRecord(currName,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
814	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	buffer.writeRecord(recordBuf[i],  currName);	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
815	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	if(recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i],  currName);  }  }	  if(recordBuf[i]!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i],    currName);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
816	[BUG]  [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  9);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  9);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  TarBufferUtil.readEOFRecord(recordBuf[i],  9);	  recordBuf[i]    =    TarBufferUtil.readEOFRecord(recordBuf[i],    3);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
817	[BUG]  [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  5);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  5);  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  5);	  recordBuf[i]    =    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length    -    4);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
818	[BUG]  [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i].recordValue());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {      [BUGGY]  recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i].recordValue());  [BUGGY]      }  buffer.writeRecord(recordBuf);  }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	recordBuf[i]  =  writeEOFRecord(currName,  recordBuf[i].recordValue());	  recordBuf[i]    =    writeEOFRecord(currName,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
