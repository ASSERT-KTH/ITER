bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(!closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
2	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(!closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
3	[BUG]  [BUGGY]  if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(!closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
4	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(!closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
5	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(!closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
6	[BUG]  [BUGGY]  if(buffer.length()  ==  0)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length()  ==  0)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length()  ==  0)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(!closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
7	[BUG]  [BUGGY]  this.buffer.close();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.close();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.close();	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
8	[BUG]  [BUGGY]  this.buffer.finishCurrentSize();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finishCurrentSize();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finishCurrentSize();	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
9	[BUG]  [BUGGY]  this.buffer.flush();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.flush();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.flush();	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
10	[BUG]  [BUGGY]  this.buffer.finishCurrentSegment();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finishCurrentSegment();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finishCurrentSegment();	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
11	[BUG]  [BUGGY]  this.buffer.finish(true);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finish(true);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finish(true);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
12	[BUG]  [BUGGY]  this.buffer.finishBytes();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finishBytes();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finishBytes();	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
13	[BUG]  [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  writeEOFRecord();  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
14	[BUG]  [BUGGY]  if(buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
15	[BUG]  [BUGGY]  if(buffer  ==  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer  ==  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer  ==  null)  {  writeEOFRecord();  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
16	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
17	[BUG]  [BUGGY]  os.write(':');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(':');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(':');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
18	[BUG]  [BUGGY]  os.write('0');  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('0');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('0');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
19	[BUG]  [BUGGY]  os.write('/');  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('/');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('/');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
20	[BUG]  [BUGGY]  os.write('%');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('%');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('%');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
21	[BUG]  [BUGGY]  os.write(',');  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(',');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(',');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
22	[BUG]  [BUGGY]  Os.write(assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(assemBuf,  0,  os.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(assemBuf,  0,  os.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
23	[BUG]  [BUGGY]  Os.write(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(buffer,  0,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(buffer,  0,  buffer.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
24	[BUG]  [BUGGY]  Os.write(buffer,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(buffer,  0,  os.length  +  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(buffer,  0,  os.length  +  1);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
25	[BUG]  [BUGGY]  Os.write(assemBuffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(assemBuffer,  0,  os.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(assemBuffer,  0,  os.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
26	[BUG]  [BUGGY]  Os.write(os,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(os,  0,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(os,  0,  buffer.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
27	[BUG]  [BUGGY]  Os.write(recordBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(recordBuf,  0,  os.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(recordBuf,  0,  os.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
28	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
29	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
30	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
31	[BUG]  [BUGGY]  this.buffer.append(assemBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(assemBuf,  0,  assemLen  +  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(assemBuf,  0,  assemLen  +  1);	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
32	[BUG]  [BUGGY]  this.buffer.append(assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(assemBuf,  0,  assemSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(assemBuf,  0,  assemSize);	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
33	[BUG]  [BUGGY]  if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  else  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  else  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  else  {  writeEOFRecord();  }	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
34	[BUG]  [BUGGY]  if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
35	[BUG]  [BUGGY]  if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(assemLen  >  0)  {  this.buffer.append(assemBuf,  0,  assemLen);  }	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
36	[BUG]  [BUGGY]  this.buffer.append(assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(assemBuf,  0,  recordSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(assemBuf,  0,  recordSize);	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
37	[BUG]  [BUGGY]  if(!closed)  {  readEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  readEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  readEOFRecord();  }	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  if(!closed)  {  readEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  readEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  readEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  if(!closed)  {  readEOFRecord();  }  else  {  System.err.println( "Current  error: "  +  currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  readEOFRecord();  }  else  {  System.err.println( "Current  error: "  +  currName);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  readEOFRecord();  }  else  {  System.err.println( "Current  error: "  +  currName);  }	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  if(!closed)  {  readEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  readEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  readEOFRecord();  }  else  {  buffer.close();  }	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  os.write(buffer,  0,  buf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buf.length  +  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buf.length  +  1);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
42	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(assemBuf,  0,  buf.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(assemBuf,  0,  buf.length);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
43	[BUG]  [BUGGY]  os.write(buffer,  0,  buf.length  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buf.length  -  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buf.length  -  1);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
44	[BUG]  [BUGGY]  os.write(buffer,  0,  buf.length,  buffer.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buf.length,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buf.length,  buffer.length);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
45	[BUG]  [BUGGY]  os.write(buffer,  0,  buf.length  +  4);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buf.length  +  4);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buf.length  +  4);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
46	[BUG]  [BUGGY]  if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
47	[BUG]  [BUGGY]  if(!closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
48	[BUG]  [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
49	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(true);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(true);	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
50	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getIOFRecord();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getIOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getIOFRecord();	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
51	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEORFecord();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEORFecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getEORFecord();	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(0);	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getIRecord();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getIRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getIRecord();	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
55	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
56	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
57	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
58	[BUG]  [BUGGY]  if(buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
59	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
60	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false);  }	  writeEOFRecord(false);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }	  writeEOFRecord(false);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  writeEOFRecord(false);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.close();  }	  writeEOFRecord(false);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }	  if(isEOF())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
65	[BUG]  [BUGGY]  if(isEOF()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }	  if(isEOF())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
66	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }	  if(isEOF())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
67	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  writeEOFRecord();  }	  if(isEOF())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
68	[BUG]  [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
69	[BUG]  [BUGGY]  if(this.closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
70	[BUG]  [BUGGY]  if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
71	[BUG]  [BUGGY]  if(closed  ||  buffer  >=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer  >=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer  >=  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
72	[BUG]  [BUGGY]  out.write('n');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write('n');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write('n');	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
73	[BUG]  [BUGGY]  out.write(buffer,  currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(buffer,  currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(buffer,  currName);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
74	[BUG]  [BUGGY]  out.write(assemBuf,  currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(assemBuf,  currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(assemBuf,  currName);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
75	[BUG]  [BUGGY]  out.write(assemBuf);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(assemBuf);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(assemBuf);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
76	[BUG]  [BUGGY]  out.write('  ');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write('  ');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write('  ');	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
77	[BUG]  [BUGGY]  out.defaultWriteStream();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.defaultWriteStream();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.defaultWriteStream();	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
78	[BUG]  [BUGGY]  writeEOFRecord(false,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(false,  false);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(false,  false);	  writeEOFRecord(false,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
79	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false,  true);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false,  true);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false,  true);  }	  writeEOFRecord(false,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
80	[BUG]  [BUGGY]  writeEOFRecord(true,  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(true,  LONGFILE_ERROR);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(true,  LONGFILE_ERROR);	  writeEOFRecord(false,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
81	[BUG]  [BUGGY]  if(!this.closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!this.closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!this.closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
82	[BUG]  [BUGGY]  if(this.closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed)  {  writeEOFRecord();  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
83	[BUG]  [BUGGY]  if(!this.closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!this.closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!this.closed)  {  writeEOFRecord();  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
84	[BUG]  [BUGGY]  if(this.closed)  {  getEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed)  {  getEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed)  {  getEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
85	[BUG]  [BUGGY]  if(buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
86	[BUG]  [BUGGY]  if(buffer.length()  ==  0  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length()  ==  0  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length()  ==  0  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
87	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer  ==  null  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
88	[BUG]  [BUGGY]  if(buffer.length()  ==  0  ||  closed.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length()  ==  0  ||  closed.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length()  ==  0  ||  closed.length()  ==  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
89	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!closed)  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
90	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  if(!closed)  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
91	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  if(!closed)  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
92	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  if(!closed)  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
93	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
94	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
95	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
96	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(true,  true);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(true,  true);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(true,  true);  }	  writeEOFRecord(true,    true);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
97	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(true,  true);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(true,  true);  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(true,  true);  }  else  {  buffer.close();  }	  writeEOFRecord(true,    true);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
98	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(true,  true);  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(true,  true);  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(true,  true);  }  else  {  buffer.flush();  }	  writeEOFRecord(true,    true);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
99	[BUG]  [BUGGY]  if(!closed  &&  buffer.finished())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer.finished())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer.finished())  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
100	[BUG]  [BUGGY]  if(buffer!=  null  ||!closed  &&  buffer.finished())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||!closed  &&  buffer.finished())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||!closed  &&  buffer.finished())  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
101	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.finished())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.finished())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.finished())  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
102	[BUG]  [BUGGY]  if(buffer.finished())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.finished())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.finished())  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
103	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed  ||  buffer.finished())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  if(!closed  ||  buffer.finished())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  if(!closed  ||  buffer.finished())  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
104	[BUG]  [BUGGY]  if(closed  ||  buffer.finished())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.finished())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.finished())  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
105	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
106	[BUG]  [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
107	[BUG]  [BUGGY]  if(closed)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
108	[BUG]  [BUGGY]  if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
109	[BUG]  [BUGGY]  if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  if(isEOF())  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
110	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isEnabled())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isEnabled())  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
111	[BUG]  [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
112	[BUG]  [BUGGY]  when(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  when(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	when(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
113	[BUG]  [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
114	[BUG]  [BUGGY]  while(!closed)  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed)  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed)  {  buffer.append(LONGFILE_GNU);  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
115	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
116	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
117	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
118	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
119	[BUG]  [BUGGY]  if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
120	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
121	[BUG]  [BUGGY]  if(closed)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
122	[BUG]  [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
123	[BUG]  [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.flush();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
124	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEORFecord();  }  else  {  buffer.flush();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
125	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEORFecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEORFecord();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
126	[BUG]  [BUGGY]  if(!closed)  {  writeEORFecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEORFecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEORFecord();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
127	[BUG]  [BUGGY]  readEORFecord();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  readEORFecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	readEORFecord();	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
128	[BUG]  [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(!closed)  {  writeEORFecord();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
129	[BUG]  [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.flush();  writeEOFRecord();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
130	[BUG]  [BUGGY]  if(!closed)  {  os.flush();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  os.flush();  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  os.flush();  writeEOFRecord();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
131	[BUG]  [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  buffer.close();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
132	[BUG]  [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed  &&  buffer.length  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
133	[BUG]  [BUGGY]  when(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  when(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	when(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
134	[BUG]  [BUGGY]  while(!closed)  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed)  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed)  {  buffer.append('n');  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
135	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.flush();  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
136	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord(false);  }  else  {  buffer.flush();  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
137	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord(true);  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord(true);  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord(true);  }  else  {  buffer.flush();  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
138	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord(false);  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
139	[BUG]  [BUGGY]  if(closed  &&  writeEOFRecord())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  &&  writeEOFRecord())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  &&  writeEOFRecord())  {  writeEOFRecord();  }	  if(closed    ||    writeEOFRecord())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
140	[BUG]  [BUGGY]  if(closed  ||  writeEORFecord())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  writeEORFecord())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  writeEORFecord())  {  writeEOFRecord();  }	  if(closed    ||    writeEOFRecord())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
141	[BUG]  [BUGGY]  if(closed  ||  writeEOF())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  writeEOF())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  writeEOF())  {  writeEOFRecord();  }	  if(closed    ||    writeEOFRecord())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
142	[BUG]  [BUGGY]  if(closed  ||  writeEOFRecord())  {  writeEORFecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  writeEOFRecord())  {  writeEORFecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  writeEOFRecord())  {  writeEORFecord();  }	  if(closed    ||    writeEOFRecord())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
143	[BUG]  [BUGGY]  if(this.closed)  {  writeEOFRecord();  }  else  {  buffer.finish();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed)  {  writeEOFRecord();  }  else  {  buffer.finish();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed)  {  writeEOFRecord();  }  else  {  buffer.finish();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.finish();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
144	[BUG]  [BUGGY]  OutputStream  out  =  getErrorStream();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getErrorStream();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getErrorStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
145	[BUG]  [BUGGY]  OutputStream  out  =  this.getOutputStream();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  this.getOutputStream();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  this.getOutputStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
146	[BUG]  [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  this.recordBuf.getOutputStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
147	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(true);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(true);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getOutputStream(true);	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
148	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(),  buffer.getCharset());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(),  buffer.getCharset());  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getOutputStream(),  buffer.getCharset());	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
149	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream()  +  1;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream()  +  1;  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getOutputStream()  +  1;	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
150	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord();  }  else  {  buffer.release();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord();  }  else  {  buffer.release();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord();  }  else  {  buffer.release();  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.release();    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
151	[BUG]  [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.release();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.release();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.release();  }	  if(!closed)    {    writeEOFRecord();    }    else    {    buffer.release();    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
152	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
153	[BUG]  [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
154	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
155	[BUG]  [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
156	[BUG]  [BUGGY]  os.writeEndObject();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeEndObject();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeEndObject();	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
157	[BUG]  [BUGGY]  os.writeObject(currName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeObject(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeObject(currName);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
158	[BUG]  [BUGGY]  os.writeFieldName(currName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeFieldName(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeFieldName(currName);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
159	[BUG]  [BUGGY]  os.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeRecord(recordBuf);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeRecord(recordBuf);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
160	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.length  <  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
161	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer  ==  null  ||  buffer.length  <  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
162	[BUG]  [BUGGY]  if(buffer.length  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length  <  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length  <  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
163	[BUG]  [BUGGY]  if(closed  ||  buffer.length  <  =  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  <  =  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  <  =  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
164	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.length  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length  >  0  ||  buffer.length  <  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length  >  0  ||  buffer.length  <  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
165	[BUG]  [BUGGY]  if(buffer.length  <  0  ||  closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length  <  0  ||  closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length  <  0  ||  closed)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
166	[BUG]  [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
167	[BUG]  [BUGGY]  os.write(currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(currName);	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
168	[BUG]  [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.close();  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
169	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.write(currName);  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.write(currName);  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  out.write(currName);  writeEOFRecord();  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
170	[BUG]  [BUGGY]  os.write(currName);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(currName);  writeEOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(currName);  writeEOFRecord();	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
171	[BUG]  [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
172	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.close();  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
173	[BUG]  [BUGGY]  os.defaultReader().close();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.defaultReader().close();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.defaultReader().close();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
174	[BUG]  [BUGGY]  os.defaultReader().write(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.defaultReader().write(buffer,  0,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.defaultReader().write(buffer,  0,  buffer.length);	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
175	[BUG]  [BUGGY]  os.defaultReader().finish();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.defaultReader().finish();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.defaultReader().finish();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
176	[BUG]  [BUGGY]  os.defaultReader().write(assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.defaultReader().write(assemBuf,  0,  assemLen);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.defaultReader().write(assemBuf,  0,  assemLen);	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
177	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEORFecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
178	[BUG]  [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.close();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
179	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
180	[BUG]  [BUGGY]  writeEOFRecord(false,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(false,  null);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(false,  null);	  writeEOFRecord(true,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
181	[BUG]  [BUGGY]  if(buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
182	[BUG]  [BUGGY]  if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
183	[BUG]  [BUGGY]  if(buffered!=  null)  {  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffered!=  null)  {  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffered!=  null)  {  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
184	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  if(closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
185	[BUG]  [BUGGY]  if(buffer.length()  ==  0  ||  closed.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length()  ==  0  ||  closed.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length()  ==  0  ||  closed.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
186	[BUG]  [BUGGY]  if(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }	  if(!closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
187	[BUG]  [BUGGY]  if(!closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  ||  buffer  ==  null)  {  writeEOFRecord();  }	  if(!closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
188	[BUG]  [BUGGY]  if(isEOF()  ||  buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  buffer!=  null)  {  writeEOFRecord();  }	  if(!closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
189	[BUG]  [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(closed)  {  writeEOFRecord();  }  else  {  buffer.flush();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
190	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.endsWith( "/.js "))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.endsWith( "/.js "))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.endsWith( "/.js "))  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.endsWith(   ".js   "))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
191	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.endsWith( ".js "))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.endsWith( ".js "))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.endsWith( ".js "))  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.endsWith(   ".js   "))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
192	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.endsWith( ". "))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.endsWith( ". "))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.endsWith( ". "))  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.endsWith(   ".js   "))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
193	[BUG]  [BUGGY]  os.write(assemBuf,  0,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(assemBuf,  0,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(assemBuf,  0,  0);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
194	[BUG]  [BUGGY]  os.write(buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  recordSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  recordSize);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
195	[BUG]  [BUGGY]  os.write(buffer,  0,  getLength());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  getLength());  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  getLength());	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
196	[BUG]  [BUGGY]  os.write(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  size);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  size);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
197	[BUG]  [BUGGY]  os.write(buffer,  0,  length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  length);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
198	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
199	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
200	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  throw  new  IllegalStateException( " ");  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
201	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.close();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
202	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
203	[BUG]  [BUGGY]  this.os.close();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.close();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.close();	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
204	[BUG]  [BUGGY]  this.os.write(buffer,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.write(buffer,  0,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.write(buffer,  0,  buffer.length);	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
205	[BUG]  [BUGGY]  this.os.write(buffer,  0,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.write(buffer,  0,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.write(buffer,  0,  0);	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
206	[BUG]  [BUGGY]  this.os.finish();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.finish();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.finish();	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
207	[BUG]  [BUGGY]  this.os.setLength(0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.setLength(0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.setLength(0);	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
208	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
209	[BUG]  [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.finish();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEORFecord();  }  else  {  buffer.finish();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEORFecord();  }  else  {  buffer.finish();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.finish();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
210	[BUG]  [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.finish();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.finish();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  if(!closed)  {  writeEORFecord();  }  else  {  buffer.finish();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.finish();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
211	[BUG]  [BUGGY]  os.skipChildren();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.skipChildren();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.skipChildren();	  os.close();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
212	[BUG]  [BUGGY]  os.writeRaw(assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeRaw(assemLen);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeRaw(assemLen);	  os.close();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
213	[BUG]  [BUGGY]  if(closed  &&  buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  &&  buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  &&  buffer!=  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
214	[BUG]  [BUGGY]  if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
215	[BUG]  [BUGGY]  if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer  ==  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
216	[BUG]  [BUGGY]  if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
217	[BUG]  [BUGGY]  if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
218	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
219	[BUG]  [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer  ==  null  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer  ==  null  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
220	[BUG]  [BUGGY]  if(buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
221	[BUG]  [BUGGY]  if(buffer.length  >=  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length  >=  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length  >=  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
222	[BUG]  [BUGGY]  if(buffer.length  >  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length  >  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length  >  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
223	[BUG]  [BUGGY]  if(buffer.length  <  LONGFILE_GNU  ||  closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length  <  LONGFILE_GNU  ||  closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length  <  LONGFILE_GNU  ||  closed)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
224	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord(false);  }  else  {  buffer.close();  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
225	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord(true);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord(true);  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord(true);  }  else  {  buffer.close();  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
226	[BUG]  [BUGGY]  if(currName  ==  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  &&  currName.length()  >  0)  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
227	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
228	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.length()  <  =  0)  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.length()    >    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
229	[BUG]  [BUGGY]  os.write('n',  buffer.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('n',  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('n',  buffer.length);	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
230	[BUG]  [BUGGY]  os.write('n',  10);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('n',  10);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('n',  10);	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
231	[BUG]  [BUGGY]  os.write('n',  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('n',  4);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('n',  4);	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
232	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord(false);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
233	[BUG]  [BUGGY]  if(closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  writeEOFRecord(true);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(!closed)    {    writeEOFRecord(true);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
234	[BUG]  [BUGGY]  if(!closed  &&  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
235	[BUG]  [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
236	[BUG]  [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
237	[BUG]  [BUGGY]  if(buffered!=  null)  {  if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffered!=  null)  {  if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffered!=  null)  {  if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
238	[BUG]  [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&!closed)  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
239	[BUG]  [BUGGY]  if(buffered!=  null  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffered!=  null  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffered!=  null  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
240	[BUG]  [BUGGY]  writeEOFRecord(false,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(false,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(false,  0);	  writeEOFRecord(true,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
241	[BUG]  [BUGGY]  writeEOFRecord(false,  0,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(false,  0,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(false,  0,  0);	  writeEOFRecord(true,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
242	[BUG]  [BUGGY]  writeEOFRecord(false,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(false,  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(false,  1);	  writeEOFRecord(true,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
243	[BUG]  [BUGGY]  writeEOFRecord(false,  0,  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(false,  0,  LONGFILE_ERROR);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(false,  0,  LONGFILE_ERROR);	  writeEOFRecord(true,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
244	[BUG]  [BUGGY]  writeEOFRecord(true,  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(true,  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(true,  1);	  writeEOFRecord(true,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
245	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
246	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
247	[BUG]  [BUGGY]  if(!closed  &&  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
248	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.EOF))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.EOF))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.EOF))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
249	[BUG]  [BUGGY]  if(buffered!=  null  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffered!=  null  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffered!=  null  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
250	[BUG]  [BUGGY]  if(buffered!=  null  &&  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffered!=  null  &&  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffered!=  null  &&  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
251	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.NON_OBJECT))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.NON_OBJECT))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.NON_OBJECT))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
252	[BUG]  [BUGGY]  out.write(assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(assemBuf,  0,  assemLen);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(assemBuf,  0,  assemLen);	  out.close();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
253	[BUG]  [BUGGY]  out.flush();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.flush();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.flush();	  out.close();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
254	[BUG]  [BUGGY]  out.write(assemBuf,  0,  currSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(assemBuf,  0,  currSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(assemBuf,  0,  currSize);	  out.close();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
255	[BUG]  [BUGGY]  out.defaultWriteObject();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.defaultWriteObject();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.defaultWriteObject();	  out.close();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
256	[BUG]  [BUGGY]  out.write(assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(assemBuf,  0,  assemSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(assemBuf,  0,  assemSize);	  out.close();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
257	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(null);  }	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
258	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(null);  }  else  {  buffer.close();  }	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
259	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(null);  }  else  {  throw  new  IllegalStateException( " ");  }	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
260	[BUG]  [BUGGY]  writeEOFRecord(null,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(null,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(null,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
261	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
262	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(null);  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(null);  }  else  {  buffer.flush();  }	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
263	[BUG]  [BUGGY]  os.write(currName,  0,  buffer.length());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(currName,  0,  buffer.length());  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(currName,  0,  buffer.length());	  os.write(buffer,    0,    currName.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
264	[BUG]  [BUGGY]  os.write(buffer,  0,  currName.length()  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  currName.length()  +  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  currName.length()  +  1);	  os.write(buffer,    0,    currName.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
265	[BUG]  [BUGGY]  os.write(buffer,  0,  currName.length()  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  currName.length()  -  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  currName.length()  -  1);	  os.write(buffer,    0,    currName.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
266	[BUG]  [BUGGY]  os.write(buffer,  0,  currName.length()  -  4);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  currName.length()  -  4);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  currName.length()  -  4);	  os.write(buffer,    0,    currName.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
267	[BUG]  [BUGGY]  os.write(buffer,  0,  currName.length()  -  2);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  currName.length()  -  2);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  currName.length()  -  2);	  os.write(buffer,    0,    currName.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
268	[BUG]  [BUGGY]  os.write(buffer,  0,  currName.length()  +  2);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  currName.length()  +  2);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  currName.length()  +  2);	  os.write(buffer,    0,    currName.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
269	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buffer.length  +  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buffer.length  +  1);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
270	[BUG]  [BUGGY]  os.write(assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(assemBuf,  0,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(assemBuf,  0,  buffer.length);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
271	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buffer.length  -  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buffer.length  -  1);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
272	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  +  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buffer.length  +  2);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buffer.length  +  2);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
273	[BUG]  [BUGGY]  os.write(buffer,  0,  buffer.length  +  4);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buffer.length  +  4);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buffer.length  +  4);	  os.write(buffer,    0,    buffer.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
274	[BUG]  [BUGGY]  readEOFRecord(false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  readEOFRecord(false);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	readEOFRecord(false);	  if(!closed)    {    writeEOFRecord(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
275	[BUG]  [BUGGY]  readEOFRecord(true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  readEOFRecord(true);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	readEOFRecord(true);	  if(!closed)    {    writeEOFRecord(true);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
276	[BUG]  [BUGGY]  if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
277	[BUG]  [BUGGY]  if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length!=  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
278	[BUG]  [BUGGY]  if(currName  ==  null  ||  buffer  ==  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  buffer  ==  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  buffer  ==  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
279	[BUG]  [BUGGY]  if(closed  ||  recordBuf  ==  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  recordBuf  ==  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  recordBuf  ==  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
280	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currName,  currSize,  currSize);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currName,  currSize,  currSize);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currName,  currSize,  currSize);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
281	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currSize,  currSize);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currSize,  currSize);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currSize,  currSize);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
282	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currName,  currSize);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currName,  currSize);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  System.arraycopy(assemBuf,  0,  buffer,  currName,  currSize);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
283	[BUG]  [BUGGY]  read();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  read();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	read();	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
284	[BUG]  [BUGGY]  Os.write(buffer,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(buffer,  0,  os.length  -  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(buffer,  0,  os.length  -  1);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
285	[BUG]  [BUGGY]  Os.write(buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(buffer,  0,  recordBuf.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(buffer,  0,  recordBuf.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
286	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEORFecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEORFecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer!=  null)  {  writeEORFecord();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.finish();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
287	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  if(!closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(!closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
288	[BUG]  [BUGGY]  EOFRecord  buffer  =  getEOFRecord();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  EOFRecord  buffer  =  getEOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	EOFRecord  buffer  =  getEOFRecord();	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
289	[BUG]  [BUGGY]  EOFRecord  buffer  =  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  EOFRecord  buffer  =  null;  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	EOFRecord  buffer  =  null;	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
290	[BUG]  [BUGGY]  EOFRecord  out  =  getEOFRecord();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  EOFRecord  out  =  getEOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	EOFRecord  out  =  getEOFRecord();	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
291	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
292	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  recordBuf.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  recordBuf.length);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
293	[BUG]  [BUGGY]  os.write(buffer,  0,  buf.length  -  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buf.length  -  4);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buf.length  -  4);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
294	[BUG]  [BUGGY]  os.write(buffer,  0,  buf.length  -  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  buf.length  -  2);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  buf.length  -  2);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
295	[BUG]  [BUGGY]  writeEOFRecord(0,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(0,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(0,  0);	  writeEOFRecord(true,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
296	[BUG]  [BUGGY]  writeEOFRecord(null,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(null,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(null,  0);	  writeEOFRecord(true,    0);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
297	[BUG]  [BUGGY]  this.buffer.append(assemBuf,  0,  assemLen  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(assemBuf,  0,  assemLen  -  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(assemBuf,  0,  assemLen  -  1);	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
298	[BUG]  [BUGGY]  this.buffer.append(assemBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(assemBuf,  0,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(assemBuf,  0,  buffer.length);	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
299	[BUG]  [BUGGY]  this.buffer.append(assemLen,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(assemLen,  0,  assemBuf.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(assemLen,  0,  assemBuf.length);	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
300	[BUG]  [BUGGY]  os.write('n',  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('n',  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('n',  1);	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
301	[BUG]  [BUGGY]  os.write('n',  8);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('n',  8);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('n',  8);	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
302	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
303	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
304	[BUG]  [BUGGY]  if(closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
305	[BUG]  [BUGGY]  if(buffer!=  null)  {  closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
306	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()  >  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
307	[BUG]  [BUGGY]  if(closed  ||  buffer.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()!=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
308	[BUG]  [BUGGY]  if(buffer  ==  null)  {  closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer  ==  null)  {  closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer  ==  null)  {  closed  ||  buffer.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
309	[BUG]  [BUGGY]  out.write(assemBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(assemBuf,  0,  buf.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(assemBuf,  0,  buf.length);	  out.close();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
310	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null)  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null)  {  buffer.append('n');  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
311	[BUG]  [BUGGY]  if(closed  &&  buffer.length  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  &&  buffer.length  <  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  &&  buffer.length  <  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
312	[BUG]  [BUGGY]  if(closed  ||  buffer.length  >=  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  >=  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  >=  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
313	[BUG]  [BUGGY]  WriteEOFRecord();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  WriteEOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	WriteEOFRecord();	  if(closed    ||    writeEOFRecord())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
314	[BUG]  [BUGGY]  os.finish();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.finish();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.finish();	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
315	[BUG]  [BUGGY]  writeEOFRecord(false,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(false,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(false,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  writeEOFRecord(false);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
316	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.flush();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
317	[BUG]  [BUGGY]  if(!closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  ||  buffer.length  ==  0)  {  writeEOFRecord();  }	  if(!closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
318	[BUG]  [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
319	[BUG]  [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
320	[BUG]  [BUGGY]  if(currName!=  null)  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(!closed)  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
321	[BUG]  [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(isEOF())  {  if(!closed)  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
322	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(null);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(null);	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
323	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord2();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord2();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord2();	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
324	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.flush();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
325	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream().getOutputStream();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream().getOutputStream();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getOutputStream().getOutputStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
326	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream()  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream()  -  1;  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getOutputStream()  -  1;	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
327	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.finish();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.finish();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.finish();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.finish();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
328	[BUG]  [BUGGY]  if(this.closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed  ||  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
329	[BUG]  [BUGGY]  if(this.closed)  {  buffer.append('n');  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed)  {  buffer.append('n');  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed)  {  buffer.append('n');  }  else  {  buffer.append('n');  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
330	[BUG]  [BUGGY]  if(this.closed  >  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed  >  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed  >  0)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
331	[BUG]  [BUGGY]  if(this.closed)  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed)  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed)  {  buffer.append('n');  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
332	[BUG]  [BUGGY]  if(closed  ||  recordBuf!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  recordBuf!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  recordBuf!=  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
333	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()  >  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
334	[BUG]  [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  out.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.flush();  writeEOFRecord();  }  else  {  out.close();  }	  os.flush();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
335	[BUG]  [BUGGY]  out.write(buffer,  0,  currSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(buffer,  0,  currSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(buffer,  0,  currSize);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
336	[BUG]  [BUGGY]  out.write('n');  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write('n');  writeEOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write('n');  writeEOFRecord();	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
337	[BUG]  [BUGGY]  out.write(buffer,  0,  currSize);  writeEOFRecord();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(buffer,  0,  currSize);  writeEOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(buffer,  0,  currSize);  writeEOFRecord();	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
338	[BUG]  [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
339	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)&&  currName!=  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
340	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)||  closed)  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
341	[BUG]  [BUGGY]  if(currName!=  null  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  buffer.isEnabled(Surrogate.ERROR))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
342	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(Surrogate.ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isEnabled(Surrogate.ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isEnabled(Surrogate.ERROR)&&  currName!=  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
343	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)&&  currName  ==  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)&&  currName  ==  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)&&  currName  ==  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
344	[BUG]  [BUGGY]  if(closed  ||  buffer.length  ==  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  ==  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  ==  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
345	[BUG]  [BUGGY]  if(closed  ||  buffer.length  >=  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  >=  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  >=  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
346	[BUG]  [BUGGY]  writeEOFRecord(null,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(null,  false);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(null,  false);	  writeEOFRecord(true,    true);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
347	[BUG]  [BUGGY]  writeEOFRecord(null,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(null,  true);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(null,  true);	  writeEOFRecord(true,    true);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
348	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  writeEOFRecord();  }	  if(isEOF())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
349	[BUG]  [BUGGY]  if(isEOF()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  writeEOFRecord();  }	  if(isEOF())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
350	[BUG]  [BUGGY]  this.os.println();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.println();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.println();	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
351	[BUG]  [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
352	[BUG]  [BUGGY]  while(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed)  {  writeEOFRecord();  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
353	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
354	[BUG]  [BUGGY]  if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&  currName!=  null)  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
355	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  &&  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
356	[BUG]  [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&  currName!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(TarBuffer.DELAYED_ERROR)&&  currName!=  null)  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
357	[BUG]  [BUGGY]  os.write(buffer,  0,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  1);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  1);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
358	[BUG]  [BUGGY]  os.write(buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  len);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  len);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
359	[BUG]  [BUGGY]  os.write(buffer,  0,  currName.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(buffer,  0,  currName.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(buffer,  0,  currName.length);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
360	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  if(!closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  if(!closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  if(!closed)  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
361	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".java "))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".java "))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.endsWith( ".java "))  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.endsWith(   ".js   "))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
362	[BUG]  [BUGGY]  if(currName  ==  null  &&  currName.endsWith( ".js "))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  &&  currName.endsWith( ".js "))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  &&  currName.endsWith( ".js "))  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.endsWith(   ".js   "))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
363	[BUG]  [BUGGY]  os.write(']');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(']');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(']');	  os.write('ufffd');    	non-compiled	[CE]  <identifier>  expected	18	None	replace
364	[BUG]  [BUGGY]  if(buffer!=  null  &&!closed  &&  buffer.finished())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&!closed  &&  buffer.finished())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  &&!closed  &&  buffer.finished())  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
365	[BUG]  [BUGGY]  os.writeRaw(assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeRaw(assemBuf,  0,  assemLen);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeRaw(assemBuf,  0,  assemLen);	  os.close();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
366	[BUG]  [BUGGY]  os.writeRaw(assemBuf,  0,  assemSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeRaw(assemBuf,  0,  assemSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeRaw(assemBuf,  0,  assemSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
367	[BUG]  [BUGGY]  if(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
368	[BUG]  [BUGGY]  if(closed)  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed)  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed)  {  buffer.append('n');  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
369	[BUG]  [BUGGY]  os.writeInt(assemLen);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeInt(assemLen);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeInt(assemLen);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
370	[BUG]  [BUGGY]  Os.writeObject(buffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.writeObject(buffer,  0,  os.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.writeObject(buffer,  0,  os.length);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
371	[BUG]  [BUGGY]  this.buffer.finish(assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finish(assemBuf,  0,  assemLen);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finish(assemBuf,  0,  assemLen);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
372	[BUG]  [BUGGY]  this.buffer.finish(assemBuf);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finish(assemBuf);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finish(assemBuf);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
373	[BUG]  [BUGGY]  this.buffer.finish(currName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finish(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finish(currName);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
374	[BUG]  [BUGGY]  this.buffer.finish(recordBuf);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.finish(recordBuf);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.finish(recordBuf);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
375	[BUG]  [BUGGY]  writeEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(recordBuf);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(recordBuf);	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
376	[BUG]  [BUGGY]  writeEOFRecord(null,  TarBuffer.DEFAULT_TEST_ERROR);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(null,  TarBuffer.DEFAULT_TEST_ERROR);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(null,  TarBuffer.DEFAULT_TEST_ERROR);	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
377	[BUG]  [BUGGY]  writeEOFRecord(currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(currName);	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
378	[BUG]  [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  if(isEOF())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  if(isEOF())  {  writeEOFRecord();  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
379	[BUG]  [BUGGY]  os.writeString(currName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeString(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeString(currName);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
380	[BUG]  [BUGGY]  os.writeBytes(currName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeBytes(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeBytes(currName);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
381	[BUG]  [BUGGY]  os.writeUTF(currName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeUTF(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeUTF(currName);	  os.defaultWriteObject();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
382	[BUG]  [BUGGY]  os.write(currName,  0,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(currName,  0,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(currName,  0,  0);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
383	[BUG]  [BUGGY]  os.write(currName,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(currName,  0,  buffer.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(currName,  0,  buffer.length);	  os.write(buffer,    0,    0);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
384	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.close();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
385	[BUG]  [BUGGY]  if(this.closed  ||  buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(this.closed  ||  buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(this.closed  ||  buffer!=  null)  {  writeEOFRecord();  }	  if(this.closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
386	[BUG]  [BUGGY]  if(closed  ||  finishEOFRecord())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  finishEOFRecord())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  finishEOFRecord())  {  writeEOFRecord();  }	  if(closed    ||    writeEOFRecord())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
387	[BUG]  [BUGGY]  os.write(currName,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write(currName,  0,  buf.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write(currName,  0,  buf.length);	  os.write(buffer,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
388	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  &&  buffer.length  >  0)  {  writeEOFRecord();  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
389	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  =  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  ||  buffer.length  <  =  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  ||  buffer.length  <  =  0)  {  writeEOFRecord();  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
390	[BUG]  [BUGGY]  os.write('n',  'n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.write('n',  'n');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.write('n',  'n');	  os.write('n');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
391	[BUG]  [BUGGY]  out.write(buffer,  0,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(buffer,  0,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(buffer,  0,  0);	  out.close();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
392	[BUG]  [BUGGY]  if(!closed)  {  os.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  os.close();  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  os.close();  writeEOFRecord();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
393	[BUG]  [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os!=  null)  {  os.close();  writeEOFRecord();  }  else  {  buffer.append('n');  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
394	[BUG]  [BUGGY]  if(os  ==  null)  {  os.close();  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(os  ==  null)  {  os.close();  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(os  ==  null)  {  os.close();  writeEOFRecord();  }	  os.close();    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
395	[BUG]  [BUGGY]  this.buffer.append(assemName,  0,  assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(assemName,  0,  assemLen);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(assemName,  0,  assemLen);	  this.buffer.append(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
396	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.AUTO_CLOSE_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isEnabled(Feature.AUTO_CLOSE_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isEnabled(Feature.AUTO_CLOSE_ERROR))  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
397	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR))  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
398	[BUG]  [BUGGY]  if(closed  ||  buffer.length  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  >  0)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
399	[BUG]  [BUGGY]  if(closed  ||  currName!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  currName!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  currName!=  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
400	[BUG]  [BUGGY]  out.write(buffer,  0,  currName.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(buffer,  0,  currName.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(buffer,  0,  currName.length);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
401	[BUG]  [BUGGY]  out.write(currName,  0,  currSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(currName,  0,  currSize);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(currName,  0,  currSize);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
402	[BUG]  [BUGGY]  out.write(currName,  0,  currBytes);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  out.write(currName,  0,  currBytes);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	out.write(currName,  0,  currBytes);	  out.write(currName);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
403	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer!=  null  &&  buffer.length()  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer!=  null  &&  buffer.length()  >  0)  {  writeEOFRecord();  }	  if(buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
404	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)&&  currName.endsWith( "/ "))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)&&  currName.endsWith( "/ "))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)&&  currName.endsWith( "/ "))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
405	[BUG]  [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.NULL))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.NULL))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.NULL))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
406	[BUG]  [BUGGY]  if(closed  ||  buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.BLOCK))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.BLOCK))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isEnabled(Surrogate.ERROR)||  buffer.isEnabled(Surrogate.BLOCK))  {  writeEOFRecord();  }	  if(closed    ||    buffer.isEnabled(Surrogate.ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
407	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(),  buffer.writeEOFRecord();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(),  buffer.writeEOFRecord();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getOutputStream(),  buffer.writeEOFRecord();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
408	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(),  buffer.getCharset();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  OutputStream  out  =  getOutputStream(),  buffer.getCharset();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	OutputStream  out  =  getOutputStream(),  buffer.getCharset();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
409	[BUG]  [BUGGY]  if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR,  currName))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR,  currName))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed  ||  buffer.isEnabled(TarBuffer.DELAYED_ERROR,  currName))  {  writeEOFRecord();  }	  if(!closed    ||    buffer.isEnabled(TarBuffer.DELAYED_ERROR))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
410	[BUG]  [BUGGY]  if(closed  ||  buffer.finished()  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.finished()  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.finished()  >  0)  {  writeEOFRecord();  }	  if(!closed    ||    buffer.finished())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
411	[BUG]  [BUGGY]  Os.write(currName,  0,  os.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  Os.write(currName,  0,  os.length);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	Os.write(currName,  0,  os.length);	  Os.write(buffer,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
412	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
413	[BUG]  [BUGGY]  if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  if(closed    ||    buffer!=    null)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
414	[BUG]  [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	while(!closed  &&  buffer!=  null)  {  writeEOFRecord();  }	  while(!closed)    {    writeEOFRecord();    }    else    {    buffer.append(LONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
415	[BUG]  [BUGGY]  writeEOFRecord(buffer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(buffer);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(buffer);	  writeEOFRecord(null);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
416	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord(currName);	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
417	[BUG]  [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord0();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord0();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	final  EOFRecord  <  K,  V>  buffer  =  getEOFRecord0();	  final    EOFRecord    <    K,    V>    buffer    =    getEOFRecord();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
418	[BUG]  [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append('n');  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
419	[BUG]  [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append(LONGFILE_GNU);  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
420	[BUG]  [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append( "n ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append( "n ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.append( "n ");  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
421	[BUG]  [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.flush();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null)  {  out.write(currName);  writeEOFRecord();  }  else  {  buffer.flush();  }	  out.write(currName);    writeEOFRecord();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
422	[BUG]  [BUGGY]  if(closed  ||  buffer.length  <  2)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  <  2)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  <  2)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
423	[BUG]  [BUGGY]  if(closed  ||  buffer.length  <  2  ||  buffer.length  >  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  <  2  ||  buffer.length  >  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  <  2  ||  buffer.length  >  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
424	[BUG]  [BUGGY]  EOFRecord  buffer  =  super.finish();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  EOFRecord  buffer  =  super.finish();  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	EOFRecord  buffer  =  super.finish();	  readEOFRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
425	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()  <  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()  <  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
426	[BUG]  [BUGGY]  os.defaultReader().append(buffer,  0,  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.defaultReader().append(buffer,  0,  0);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.defaultReader().append(buffer,  0,  0);	  os.defaultReader().flush();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
427	[BUG]  [BUGGY]  if(closed  ||  buffer.length  <  =  LONGFILE_GNU)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  <  =  LONGFILE_GNU)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  <  =  LONGFILE_GNU)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length    <    LONGFILE_GNU)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
428	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.endsWith( "- "))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  &&  currName.endsWith( "- "))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  &&  currName.endsWith( "- "))  {  writeEOFRecord();  }	  if(currName!=    null    &&    currName.endsWith(   ".js   "))    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
429	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()!=  0)  {  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()!=    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
430	[BUG]  [BUGGY]  if(isEOF()  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  writeEOFRecord();  }	  if(isEOF())    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
431	[BUG]  [BUGGY]  if(isEOF()  ||  closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF()  ||  closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF()  ||  closed)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
432	[BUG]  [BUGGY]  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
433	[BUG]  [BUGGY]  if(isEOF())  {  out.close();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(isEOF())  {  out.close();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(isEOF())  {  out.close();  }  else  {  buffer.append('n');  }	  if(isEOF())    {    if(!closed)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
434	[BUG]  [BUGGY]  this.buffer.append(currName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append(currName);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append(currName);	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
435	[BUG]  [BUGGY]  this.buffer.append('n');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.buffer.append('n');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.buffer.append('n');	  this.buffer.finish();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
436	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.append('n');  }	  writeEOFRecord(false);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
437	[BUG]  [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.append( "n ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.append( "n ");  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(!closed)  {  writeEOFRecord(false);  }  else  {  buffer.append( "n ");  }	  writeEOFRecord(false);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
438	[BUG]  [BUGGY]  this.os.println(String.valueOf(currName));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.println(String.valueOf(currName));  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.println(String.valueOf(currName));	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
439	[BUG]  [BUGGY]  this.os.println(String.valueOf(this.currName));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  this.os.println(String.valueOf(this.currName));  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	this.os.println(String.valueOf(this.currName));	  this.os.flush();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
440	[BUG]  [BUGGY]  os.writeRaw('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  os.writeRaw('n');  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	os.writeRaw('n');	  os.close();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
441	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.endsWith( ".js "))  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName  ==  null  ||  currName.endsWith( ".js "))  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName  ==  null  ||  currName.endsWith( ".js "))  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(currName    ==    null)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
442	[BUG]  [BUGGY]  if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEORFecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEORFecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length  <  LONGFILE_GNU)  {  writeEORFecord();  }	  if(!closed)    {    writeEORFecord();    }    else    {    buffer.flush();    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
443	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  <  =  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()  <  =  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()  <  =  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
444	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()  >=  0)  {  writeEOFRecord();  }  else  {  buffer.append('n');  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    else    {    buffer.append('n');    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
445	[BUG]  [BUGGY]  if(closed  ||  buffer.isRecorded())  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.isRecorded())  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.isRecorded())  {  writeEOFRecord();  }	  if(closed)    {    writeEOFRecord();    }    else    {    buffer.finish();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
446	[BUG]  [BUGGY]  writeEOFRecord(null,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  writeEOFRecord(null,  null);  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	writeEOFRecord(null,  null);	  writeEOFRecord(true,    true);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
447	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  writeEOFRecord();  }	  if(currName    ==    null    ||    currName.length()    <    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
448	[BUG]  [BUGGY]  if(closed  ||  currName  ==  null)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  currName  ==  null)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  currName  ==  null)  {  writeEOFRecord();  }	  if(closed    ||    buffer    ==    null)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
449	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  <  =  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  ||  buffer.length()  <  =  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  ||  buffer.length()  <  =  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
450	[BUG]  [BUGGY]  if(buffer.length()  ==  0  ||  closed)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(buffer.length()  ==  0  ||  closed)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(buffer.length()  ==  0  ||  closed)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
451	[BUG]  [BUGGY]  if(closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(closed  &&  buffer.length()  ==  0)  {  writeEOFRecord();  }	  if(closed    ||    buffer.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
452	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  finish()  throws  IOException  {      [BUGGY]  if(currName!=  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  }  [BUGGY]      writeEOFRecord();  }  [CLASS]  TarArchiveOutputStream  [METHOD]  finish  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	if(currName!=  null  ||  currName.length()  <  =  0)  {  writeEOFRecord();  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    writeEOFRecord();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
