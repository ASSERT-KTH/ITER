bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue();  [BUGGY]  if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue();	TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
2	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.clone();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.clone();  [BUGGY]  if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.clone();	TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
3	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry;  [BUGGY]  if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry;	TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  [BUGGY]    [BUGGY]  if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	  	TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;  	non-compiled	[CE]  <identifier>  expected	29	None	replace
