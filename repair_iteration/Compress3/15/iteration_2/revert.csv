projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAttributeValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAstRoot();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)object.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.get(entry.getName())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.getName();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getName();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getData();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.get(archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.clone());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)dataset.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154finalArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.clone();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()!=TarConstants.NAMELEN){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)this.archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getKey();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_ERROR,TarConstants.NAMELEN);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_ERROR,TarConstants.NONE);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_ERROR,TarConstants.UNKNOWN);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154Entry<K,V>entry=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_ERROR,TarConstants.ALLOW_GNUTYPE_LONGNAME);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)getValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()!=TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()==LONGFILE_GNU){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()!=LONGFILE_GNU){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_GNU){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()!=LONGFILE_GNU){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGN
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.GNU_LONGLINK,TarConstants.GNUTYPE_LONGNAME);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUT
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTY
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.getAstRoot();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAstRoot()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAncestor();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archives.values()){buffer.put(entry.getName().getBytes()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().getBytes()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154finalArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.clone();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()!=TarConstants.NAMELEN){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)this.archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getKey();if(entry.getName().length()==TarConstants.NAMELEN){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.get(entry.getName())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(entry.getName())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.get(entry.getKey())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.get(entry.getName())){thrownewIllegalArgumentException("".);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(entry.getName())){thrownewIllegalArgumentException("".);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getValue());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getValue().put(archiveEntry.getName(),archiveEntry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getSize());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getCharset());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getLowerCase());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getVersion());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.getAttributeValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAttributeValue(0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAttribute();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAttributeKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),file);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),cache);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),this);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),longLinkEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archives.keySet()){buffer.put(entry.getName().toString()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)object.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.object.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)getObject();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.entrySet()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+".");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+".js");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getParent());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.toString());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.data.get(archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.get(archiveEntry.getValue());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.get(entry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.files.get(archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.get(archiveEntry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.get(archiveEntry.getKey());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.entrySet()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+",entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+",entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,Tar
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()!=LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,Tar
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()!=LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()!=LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGF
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNC
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry.getName().length()==TarConstants.LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=this.archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getValue()-1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.putBytes(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.putBytes(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString()+".");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString()+".js");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)this.archiveEntry.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.cloneTar();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)this.archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()!=TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()!=LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName().length()!=LONGFILE_GNU){if(longFileMode==LONGFILE_ERROR){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_GNU){if(longFileMode==LONGFILE_ERROR){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.dataset.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)dataset.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.data.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.getValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)file.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.getData();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getSize();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.archiveEntry.getValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154finalArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)this.archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAMELEN){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.clone();if(entry.getName().length()==TarConstants.NAMELEN){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()!=TarConstants.NAMELEN){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154finalArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()!=TarConstants.NAMELEN){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.putBytes(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.putBytes(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGF
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154||entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getKey()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getValue()/1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getName()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archives.keySet()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.remove(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAME){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)super.put(archiveEntry.clone());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getDataEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(entry.getName().length()==TarConstants.NAME){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(entry.getName().length()==TarConstants.NAME){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(entry.getName().length()==LONGFILE_ERROR){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(Tar
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154finalArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getLowerBound());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.clone();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154putArchiveEntry(TarConstants.LONGFILE_ERROR);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUN
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){putArchiveEntry(TarConstants.LONGFILE_TRUNC
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getLocalName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getName()+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archives.values()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.remove(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.get(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archives.get(entry.getName())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(archiveEntry.getName())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(entries.getName())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().toString()+File.separatorChar+entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()!=TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAME){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()==null){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getObject();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.getData();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archives.values()){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.remove(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.get(this.archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)data.get(archiveEntry.cloneTar());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntry:archiveEntries.values()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(open){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)dataset.get(archiveEntry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.L
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.L
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){entry=newTarArchiveEntry(TarConstants.LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNU_LONGLINK);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGNAME
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName()!=null){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGAME);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAME){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry!=null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()!=null){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){continue
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry==null){if(entry.getName().length()==TarConstants.NAME){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(archiveEntry.getName()==null){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.getValue();if(entry.getName().length()==TarConstants.NAME){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getImplicitReturn();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getName();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAttributeName();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getAttributeValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getImplicitProtocol();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=archiveEntry.getAncestor();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archives.values()){buffer.put(entry.getName().getBytes()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.keySet()){buffer.put(entry.getName().getBytes()+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_GNU){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(length==LONGFILE_GNU){if(longFileMode==LONGFILE_GNU){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_GNU){if(longFileMode==LONGFILE_TRUNCATE){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)this.info.get(archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154putArchiveEntry(TarConstants.GNU_LONGLINK,TarConstants.LF_GNUTYPE_LONGNAME);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154putArchiveEntry(TarConstants.LONGFILE_GNU,TarConstants.NAMELEN);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154putArchiveEntry(TarConstants.LONGFILE_GNU);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154putArchiveEntry(TarConstants.LONGFILE_ERROR,TarConstants.NAMELEN);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.NUMBER){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.GNU_LONGLINK){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.GNU_LONGLINK){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGN
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.GNU_LONGLINK){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.GNU_LONGLINK){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.GNUTYPE_LONGNAME
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)getAstRoot(archiveEntry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)getAstRoot();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.entrySet()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archives.keySet()){buffer.put(entry.getName().toString(),entry.toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154finalArrayList<TarArchiveEntry>buffer=newArrayList<TarArchiveEntry>(archiveEntries.keySet());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONG
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()!=TarConstants.NAME){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,Tar
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()!=TarConstants.NUMBER){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,Tar
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGF
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()!=TarConstants.NAME){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.clone());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)super.put(archiveEntry.getName(),archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)super.put(archiveEntry.getKey(),archiveEntry.getValue());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)archiveEntry.getSize()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()!=TarConstants.NUMBER){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==TarConstants.NAME){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,TarConstants
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()!=TarConstants.NAME){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(entry.getSize())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(entry.getName())){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(entry.getKey())){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.get(entry.getName()+1)){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.clone();if(entry.getName().length()!=TarConstants.NAMELEN){thrownewIllegalStateException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getKey());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154TarArchiveEntryentry=(TarArchiveEntry)super.put(archiveEntry.getName(),archiveEntry.getRemoteName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:newArrayList<TarArchiveEntry>()){buffer.put(entry.getName().getBytes());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:newArrayList<TarArchiveEntry>()){buffer.put(entry.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entries.getName().getBytes(),entry.getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.entrySet()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.NUMBER){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.NUMBER){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_GNU);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.NUMBER){if(longFileMode==LONGFILE_GNU){entry=newTarArchiveEntry(TarConstants.LONGFILE
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154entry=newTarArchiveEntry(TarConstants.LONGFILE_ERROR);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()>=TarConstants.NUMBER){if(longFileMode==LONGFILE_GLNU){entry=newTarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154ArchiveEntryentry=(ArchiveEntry)archiveEntry.clone();if(entry.getName().length()!=TarConstants.NAMELEN){thrownewIllegalArgumentException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(closed){for(ArchiveEntryentry:archiveEntries.values()){buffer.put(entry.getName().toString();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().endsWith("Archive")){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(length==LONGFILE_GNU){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()!=TarConstants.NUMBER){if(longFileMode==LONGFILE_GNU){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(!closed){if(entry.getName().length()==TarConstants.NAMELEN){continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java154if(entry.getName().length()==LONGFILE_GNU){if(longFileMode==LONGFILE_TRUNCATE){continue;}
