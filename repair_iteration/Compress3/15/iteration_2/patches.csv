bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NAMELEN);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NAMELEN);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NAMELEN);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
7	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NONE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NONE);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NONE);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
8	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.UNKNOWN);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.UNKNOWN);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.UNKNOWN);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
9	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
10	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	Entry  <  K,  V>  entry  =  entry.getValue();	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
11	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.ALLOW_GNUTYPE_LONGNAME);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.ALLOW_GNUTYPE_LONGNAME);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.ALLOW_GNUTYPE_LONGNAME);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
12	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getValue()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getValue()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)getValue()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)getValue();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
13	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getKey();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getKey();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)getKey();	  TarArchiveEntry    entry    =(TarArchiveEntry)getValue();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
14	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
15	[BUG]  [BUGGY]  ||  entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
16	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
17	[BUG]  [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
18	[BUG]  [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
19	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
20	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
21	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
22	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
23	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGN  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGN  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGN	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
24	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
25	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.GNUTYPE_LONGNAME);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.GNUTYPE_LONGNAME);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.GNUTYPE_LONGNAME);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
26	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUT  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUT  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUT	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
27	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTY  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTY  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTY	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
28	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getAstRoot();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getAstRoot();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getAstRoot();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAstRoot()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAstRoot()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAstRoot()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAncestor();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAncestor();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAncestor();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
32	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
33	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
34	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
35	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
36	[BUG]  [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
39	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
43	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ".);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ".);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getValue());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getValue());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getValue());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
47	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue().put(archiveEntry.getName(),  archiveEntry.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue().put(archiveEntry.getName(),  archiveEntry.getName());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue().put(archiveEntry.getName(),  archiveEntry.getName());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
48	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getSize());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getSize());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getSize());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
49	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getCharset());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getCharset());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getCharset());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
50	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLowerCase());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLowerCase());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLowerCase());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
51	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getVersion());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getVersion());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getVersion());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
52	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getAttributeValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getAttributeValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getAttributeValue();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAttributeValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeValue(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeValue(0);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeValue(0);	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAttributeValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttribute();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttribute();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttribute();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAttributeValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeKey();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeKey();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeKey();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAttributeValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  file);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  file);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  file);	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
57	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  cache);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  cache);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  cache);	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
58	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  this);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  this);	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
59	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  buffer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  buffer);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  buffer);	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
60	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  longLinkEntry);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  longLinkEntry);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  longLinkEntry);	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
61	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
62	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
63	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
64	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
65	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  +  1);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
66	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)object.getValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)object.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)object.getValue();	  TarArchiveEntry    entry    =(TarArchiveEntry)object.clone();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
67	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.object.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.object.clone();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.object.clone();	  TarArchiveEntry    entry    =(TarArchiveEntry)object.clone();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
68	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getObject();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getObject();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)getObject();	  TarArchiveEntry    entry    =(TarArchiveEntry)object.clone();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
69	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
70	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ". ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ". ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ". ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ".js ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ".js ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ".js ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
73	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString();  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString();  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
74	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getParent());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getParent());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getParent());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.clone());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
75	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.toString());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.toString());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.clone());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
76	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.data.get(archiveEntry);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.data.get(archiveEntry);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.data.get(archiveEntry);	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
77	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getValue());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getValue());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getValue());	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
78	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(entry);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(entry);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.get(entry);	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
79	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.files.get(archiveEntry);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.files.get(archiveEntry);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.files.get(archiveEntry);	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
80	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getName());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getName());	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
81	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getKey());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getKey());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.getKey());	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
82	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
83	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
84	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
85	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
86	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ",  entry.toString());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ",  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ",  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
87	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ",  entry.toString());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ",  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  + ",  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
88	[BUG]  [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
89	[BUG]  [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
90	[BUG]  [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
91	[BUG]  [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
92	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
93	[BUG]  [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
94	[BUG]  [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
95	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
96	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
97	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
98	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGF  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGF  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGF	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
99	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
100	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNC  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNC  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNC	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
101	[BUG]  [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
102	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getKey();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getKey();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getKey();	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
103	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getValue()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getValue()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getValue()  +  1;	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
104	[BUG]  [BUGGY]  ArchiveEntry  entry  =  this.archiveEntry.getValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  this.archiveEntry.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  this.archiveEntry.getValue();	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
105	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getValue()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getValue()  -  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getValue()  -  1;	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
106	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
107	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
108	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
109	[BUG]  [BUGGY]  if(!closed)  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
110	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
111	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
112	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
113	[BUG]  [BUGGY]  if(!closed)  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
114	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  + ". ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  + ". ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  + ". ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
115	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  + ".js ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  + ".js ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString()  + ".js ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
116	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.clone();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.clone();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.clone();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
117	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.cloneTar();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.cloneTar();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.cloneTar();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
118	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
119	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getKey();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
120	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue()  +  1;	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
121	[BUG]  [BUGGY]  ||  entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
122	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
123	[BUG]  [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()!=  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
124	[BUG]  [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
125	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
126	[BUG]  [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName().length()!=  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
127	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
128	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.dataset.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.dataset.clone();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.dataset.clone();	  TarArchiveEntry    entry    =(TarArchiveEntry)dataset.clone();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
129	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)dataset.getValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)dataset.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)dataset.getValue();	  TarArchiveEntry    entry    =(TarArchiveEntry)dataset.clone();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
130	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.data.getValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.data.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.data.getValue();	  TarArchiveEntry    entry    =(TarArchiveEntry)data.getValue();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
131	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.getValue()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.getValue()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.getValue()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)data.getValue();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
132	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)file.getValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)file.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)file.getValue();	  TarArchiveEntry    entry    =(TarArchiveEntry)data.getValue();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
133	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getData();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getData();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getData();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getData();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
134	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getSize();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getSize();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getSize();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getData();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
135	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getValue()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getValue()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.archiveEntry.getValue()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)this.archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
136	[BUG]  [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
137	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)this.archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
138	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
139	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  return;  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
140	[BUG]  [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  return;  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
141	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
142	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
143	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
144	[BUG]  [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
145	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.putBytes(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
146	[BUG]  [BUGGY]  if(!closed)  {  buffer.put(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  buffer.put(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  buffer.put(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
147	[BUG]  [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
148	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
149	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
150	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
151	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONG  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
152	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGF  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGF  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGF	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
153	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
154	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getKey()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getKey()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getKey()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
155	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue()  /  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue()  /  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getValue()  /  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
156	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getName()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getName()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getName()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
157	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
158	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.remove(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.remove(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.remove(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
159	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString();  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString();  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
160	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  return;  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
161	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.clone());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.clone());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.clone());	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
162	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getDataEntry();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getDataEntry();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getDataEntry();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
163	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
164	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
165	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
166	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
167	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
168	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
169	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(Tar  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(Tar  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(Tar	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
170	[BUG]  [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	final  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
171	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)entry.getValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)entry.getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)entry.getValue();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
172	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)getValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)getValue();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)getValue();	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
173	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLowerBound());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLowerBound());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLowerBound());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.clone());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
174	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.clone();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.clone();	  TarArchiveEntry    entry    =(TarArchiveEntry)object.clone();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
175	[BUG]  [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_ERROR);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	putArchiveEntry(TarConstants.LONGFILE_ERROR);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
176	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
177	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUN  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUN  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUN	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
178	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
179	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
180	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
181	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNC  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNC  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  putArchiveEntry(TarConstants.LONGFILE_TRUNC	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
182	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLocalName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLocalName());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getLocalName());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
183	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getName()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getName()  +  1);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getName()  +  1);	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
184	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
185	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.remove(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.remove(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.remove(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
186	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.get(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.get(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.get(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
187	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archives.get(entry.getName()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
188	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(archiveEntry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(archiveEntry.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(archiveEntry.getName()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
189	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entries.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entries.getName()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entries.getName()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
190	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
191	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  File.separatorChar  +  entry.toString());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  File.separatorChar  +  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().toString()  +  File.separatorChar  +  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
192	[BUG]  [BUGGY]  if(!closed)  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
193	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
194	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
195	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
196	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
197	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
198	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
199	[BUG]  [BUGGY]  if(archiveEntry.getName()  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
200	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes();  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes();  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
201	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getObject();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getObject();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getObject();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getData();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
202	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.getData();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.getData();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.getData();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getData();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
203	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
204	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.remove(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.remove(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.remove(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
205	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.getKey();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.getKey();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.getKey();	  TarArchiveEntry    entry    =(TarArchiveEntry)data.getValue();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
206	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(this.archiveEntry);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(this.archiveEntry);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.get(this.archiveEntry);	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
207	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.cloneTar());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.cloneTar());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)data.get(archiveEntry.cloneTar());	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
208	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
209	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
210	[BUG]  [BUGGY]  if(open)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(open)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(open)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
211	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)dataset.get(archiveEntry.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)dataset.get(archiveEntry.getName());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)dataset.get(archiveEntry.getName());	  TarArchiveEntry    entry    =(TarArchiveEntry)dataset.clone();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
212	[BUG]  [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
213	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
214	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
215	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
216	[BUG]  [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.L  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.L  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.L	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
217	[BUG]  [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
218	[BUG]  [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
219	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
220	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
221	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
222	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
223	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.L  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.L  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.L	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
224	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_GNU);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_GNU);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
225	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
226	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
227	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
228	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
229	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGAME);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGAME);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGAME);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
230	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  throw  new  IllegalArgumentException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
231	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
232	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
233	[BUG]  [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry!=  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
234	[BUG]  [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()!=  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
235	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
236	[BUG]  [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry  ==  null)  {  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
237	[BUG]  [BUGGY]  if(archiveEntry.getName()  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(archiveEntry.getName()  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(archiveEntry.getName()  ==  null)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
238	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.getValue();  if(entry.getName().length()  ==  TarConstants.NAME)  {  throw  new  IllegalStateException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
239	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getImplicitReturn();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getImplicitReturn();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getImplicitReturn();	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
240	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getName();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getName();	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
241	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getEntry();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getEntry();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getEntry();	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
242	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeName();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeName();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAttributeValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
243	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeValue()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeValue()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getAttributeValue()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAttributeValue();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
244	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getImplicitProtocol();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getImplicitProtocol();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getImplicitProtocol();	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
245	[BUG]  [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getAncestor();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =  archiveEntry.getAncestor();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =  archiveEntry.getAncestor();	  ArchiveEntry    entry    =    archiveEntry.getValue();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
246	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archives.values())  {  buffer.put(entry.getName().getBytes()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
247	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes()  +  1);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.keySet())  {  buffer.put(entry.getName().getBytes()  +  1);  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes()    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
248	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
249	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
250	[BUG]  [BUGGY]  if(length  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(length  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(length  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
251	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_TRUNCATE)  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_TRUNCATE)  {  return;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_TRUNCATE)  {  return;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
252	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.info.get(archiveEntry);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)this.info.get(archiveEntry);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)this.info.get(archiveEntry);	  TarArchiveEntry    entry    =(TarArchiveEntry)data.get(archiveEntry);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
253	[BUG]  [BUGGY]  putArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  putArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	putArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
254	[BUG]  [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_GNU,  TarConstants.NAMELEN);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_GNU,  TarConstants.NAMELEN);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	putArchiveEntry(TarConstants.LONGFILE_GNU,  TarConstants.NAMELEN);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
255	[BUG]  [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_GNU);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	putArchiveEntry(TarConstants.LONGFILE_GNU);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
256	[BUG]  [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NAMELEN);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  putArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NAMELEN);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	putArchiveEntry(TarConstants.LONGFILE_ERROR,  TarConstants.NAMELEN);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    putArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
257	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
258	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
259	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGN  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGN  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGN	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
260	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
261	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.GNUTYPE_LONGNAME);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
262	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getAstRoot(archiveEntry.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getAstRoot(archiveEntry.getName());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)getAstRoot(archiveEntry.getName());	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
263	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getAstRoot();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)getAstRoot();  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)getAstRoot();	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
264	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
265	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archives.keySet())  {  buffer.put(entry.getName().toString(),  entry.toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
266	[BUG]  [BUGGY]  final  ArrayList  <  TarArchiveEntry>  buffer  =  new  ArrayList  <  TarArchiveEntry>(archiveEntries.keySet());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  final  ArrayList  <  TarArchiveEntry>  buffer  =  new  ArrayList  <  TarArchiveEntry>(archiveEntries.keySet());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	final  ArrayList  <  TarArchiveEntry>  buffer  =  new  ArrayList  <  TarArchiveEntry>(archiveEntries.keySet());	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString(),    entry.toString());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
267	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONG	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
268	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
269	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  Tar	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
270	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
271	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGF  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGF  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGF	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
272	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
273	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants.    	non-compiled	[CE]  <identifier>  expected	34	None	replace
274	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.clone());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.clone());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.clone());	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
275	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry);	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
276	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getName());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getName());	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
277	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getKey(),  archiveEntry.getValue());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getKey(),  archiveEntry.getValue());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)super.put(archiveEntry.getKey(),  archiveEntry.getValue());	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
278	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getSize()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getSize()  +  1;  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)archiveEntry.getSize()  +  1;	  TarArchiveEntry    entry    =(TarArchiveEntry)archiveEntry.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
279	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
280	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  TarConstants	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
281	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()!=  TarConstants.NAME)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE,    TarConstants    	non-compiled	[CE]  <identifier>  expected	33	None	replace
282	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getSize()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getSize()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getSize()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
283	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()))  {  throw  new  IllegalStateException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
284	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getKey()))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
285	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()  +  1))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.get(entry.getName()  +  1))  {  throw  new  IllegalArgumentException( " ");  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.get(entry.getName()))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
286	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalStateException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
287	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getKey());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getKey());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getKey());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
288	[BUG]  [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getRemoteName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getRemoteName());  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	TarArchiveEntry  entry  =(TarArchiveEntry)super.put(archiveEntry.getName(),  archiveEntry.getRemoteName());	  TarArchiveEntry    entry    =(TarArchiveEntry)super.put(archiveEntry.getName(),    archiveEntry.getName());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
289	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  new  ArrayList  <  TarArchiveEntry>())  {  buffer.put(entry.getName().getBytes());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  new  ArrayList  <  TarArchiveEntry>())  {  buffer.put(entry.getName().getBytes());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  new  ArrayList  <  TarArchiveEntry>())  {  buffer.put(entry.getName().getBytes());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes());    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
290	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  new  ArrayList  <  TarArchiveEntry>())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  new  ArrayList  <  TarArchiveEntry>())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  new  ArrayList  <  TarArchiveEntry>())  {  buffer.put(entry.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
291	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entries.getName().getBytes(),  entry.getName());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entries.getName().getBytes(),  entry.getName());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entries.getName().getBytes(),  entry.getName());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().getBytes(),    entry.getName());    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
292	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.entrySet())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
293	[BUG]  [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString());  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString());  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.keySet())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
294	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
295	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
296	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_GNU);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_GNU);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
297	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
298	[BUG]  [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR);  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_ERROR);	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
299	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GLNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GLNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GLNU)  {  entry  =  new  TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    entry    =    new    TarArchiveEntry(TarConstants.LONGFILE_TRUNCATE);    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
300	[BUG]  [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	ArchiveEntry  entry  =(ArchiveEntry)archiveEntry.clone();  if(entry.getName().length()!=  TarConstants.NAMELEN)  {  throw  new  IllegalArgumentException( " ");  }	  ArchiveEntry    entry    =(ArchiveEntry)archiveEntry.getValue();    if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
301	[BUG]  [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString();  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(closed)  {  for(ArchiveEntry  entry  :  archiveEntries.values())  {  buffer.put(entry.getName().toString();  }	  if(!closed)    {    for(ArchiveEntry    entry    :    archiveEntries.values())    {    buffer.put(entry.getName().toString());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
302	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().endsWith( "Archive "))  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
303	[BUG]  [BUGGY]  if(length  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(length  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(length  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
304	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER)  {  if(longFileMode  ==  LONGFILE_GNU)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
305	[BUG]  [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(!closed)  {  if(entry.getName().length()  ==  TarConstants.NAMELEN)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
306	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_TRUNCATE)  {  continue;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_TRUNCATE)  {  continue;  }  [BUGGY]      if  (entry.getName().length()  >=  TarConstants.NAMELEN)  {  if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU)  {  if(longFileMode  ==  LONGFILE_TRUNCATE)  {  continue;  }	  if(entry.getName().length()    ==    TarConstants.NAMELEN)    {    if(longFileMode    ==    LONGFILE_GNU)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
