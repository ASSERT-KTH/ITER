bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  -  2);	  buffer.writeRecord(recordBuf,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
2	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  3);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  -  3);	  buffer.writeRecord(recordBuf,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
3	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i  -  1]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf[i  -  1]);	  buffer.writeRecord(recordBuf,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
4	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  -  4);	  buffer.writeRecord(recordBuf,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
5	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
6	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
7	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
8	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
9	[BUG]  [BUGGY]  if(!closed)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(!closed)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(!closed)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
10	[BUG]  [BUGGY]  if(!closed)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(!closed)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(!closed)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
11	[BUG]  [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
12	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
13	[BUG]  [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
14	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
15	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }	  if(i    <    recordBuf.length)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
16	[BUG]  [BUGGY]  if(i  ==  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(i    <    recordBuf.length)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
17	[BUG]  [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >=  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(i    <    recordBuf.length)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
18	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(i    <    recordBuf.length)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
19	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  <  recordBuf.length)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(i    <    recordBuf.length)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
20	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  recordBuf[i]);	  buffer.writeEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  recordBuf.length  +  1);	  buffer.writeEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
22	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  recordBuf.length  -  1);	  buffer.writeEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  recordBuf[i].length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  recordBuf[i].length);	  buffer.writeEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  buffer.writeEOFRecord(0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(0,  recordBuf.length);	  buffer.writeEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  ||  recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
26	[BUG]  [BUGGY]  ||  recordBuf.length!=  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf.length!=  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf.length!=  0)  {  buffer.writeRecord(recordBuf);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
27	[BUG]  [BUGGY]  &&  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  &&  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	&&  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
28	[BUG]  [BUGGY]  |  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  |  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	|  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
29	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(REcordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(REcordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf!=  null)  {  buffer.writeRecord(REcordBuf);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
30	[BUG]  [BUGGY]  ||  recordBuf  >=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf  >=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf  >=  null)  {  buffer.writeRecord(recordBuf);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
31	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i!=  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i!=  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(i!=    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i!=  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i!=  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i!=  0)  {  buffer.writeRecord(recordBuf);  }	  if(i!=    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);	  if(i!=    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  0,  recordBuf.length);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
35	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  1);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
36	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  2);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
37	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  0,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  0,  recordBuf[i]);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
38	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
39	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
40	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  ==  0)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  ==  0)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length  ==  0)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
41	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  1);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
42	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  3);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  3);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
43	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  1);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
44	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length  +  1);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  writeEOFRecord(i,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(i,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(i,  0,  recordBuf.length);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length,  i);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length  -  2);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length,  0);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length,  0);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
51	[BUG]  [BUGGY]  if(buffer!=  null)buffer.writeBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)buffer.writeBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)buffer.writeBytes(recordBuf);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
52	[BUG]  [BUGGY]  if(buffer!=  null)recordBuf.writeBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)recordBuf.writeBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)recordBuf.writeBytes(recordBuf);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
53	[BUG]  [BUGGY]  if(recordBuf  ==  null)buffer.writeBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)buffer.writeBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)buffer.writeBytes(recordBuf);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
54	[BUG]  [BUGGY]  if(recordBuf!=  null)buffer.writeBytes(currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)buffer.writeBytes(currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)buffer.writeBytes(currName);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
55	[BUG]  [BUGGY]  if(recordBuf!=  null)buffer.writeBytes(i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)buffer.writeBytes(i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)buffer.writeBytes(i);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
56	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  recordBuf[i]);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
57	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  0);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
58	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  0,  recordBuf.length);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
59	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  assemLen);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
60	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  false);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  false);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
61	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  assemBuf);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  assemBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  assemBuf);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
62	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  null);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  null);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
63	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
64	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
65	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
66	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
67	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  recordBuf.writeRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  recordBuf.writeRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  recordBuf.writeRecord(recordBuf,  0,  recordBuf.length);	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
69	[BUG]  [BUGGY]  if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
70	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
72	[BUG]  [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
73	[BUG]  [BUGGY]  if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
74	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
75	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  }  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
76	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  0);	  buffer.writeEOFRecord(recordBuf,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
77	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  1);	  buffer.writeEOFRecord(recordBuf,    0);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
78	[BUG]  [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(recordBuf,  0,  recordBuf.length  -  1);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
79	[BUG]  [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  1);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
80	[BUG]  [BUGGY]  buffer.writeRaw(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(assemBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(assemBuf,  0,  recordBuf.length);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
81	[BUG]  [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(recordBuf,  0,  recordBuf.length  -  2);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
82	[BUG]  [BUGGY]  buffer.writeRaw(i,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(i,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(i,  0,  recordBuf.length);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
83	[BUG]  [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  2);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
84	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  0,  recordBuf.length  -  1);	  buffer.writeEOFRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
85	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  0,  recordBuf.length  +  1);	  buffer.writeEOFRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
86	[BUG]  [BUGGY]  buffer.writeEOFRecord(0,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(0,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(0,  0,  recordBuf.length);	  buffer.writeEOFRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
87	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  0,  recordBuf.length  -  2);	  buffer.writeEOFRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
88	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  +  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  0,  recordBuf.length  +  2);	  buffer.writeEOFRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
89	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  i  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  i  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  i  +  1);	  writeEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
90	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  1,  recordBuf.length);	  writeEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
91	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0);	  writeEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
92	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  recordBuf.length);	  writeEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
93	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  recordBuf[i]);	  writeEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
94	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
96	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
97	[BUG]  [BUGGY]  if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
98	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
99	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
100	[BUG]  [BUGGY]  buffer.writeEOFRecord(currName,  recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(currName,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(currName,  recordBuf);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
101	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  currName);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
102	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  currName,  0);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
103	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  currName,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
104	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  currName,  0,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
105	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  currName,  recordBuf[i]);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
106	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  2);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
107	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  3);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  3);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    -    2);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  1);	  System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);	  System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);	  System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i].length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i].length);	  System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  2,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  2,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  2,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
114	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  currName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  currName);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
115	[BUG]  [BUGGY]  writeEOFRecord(currName,  recordBuf,  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(currName,  recordBuf,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(currName,  recordBuf,  0);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
116	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  writeEOFRecord(currName,  recordBuf);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  writeEOFRecord(currName,  recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  writeEOFRecord(currName,  recordBuf);  }	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
117	[BUG]  [BUGGY]  writeEOFRecord(i,  recordBuf);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(i,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(i,  recordBuf);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
118	[BUG]  [BUGGY]  writeEOFRecord(buffer,  currName,  recordBuf);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(buffer,  currName,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(buffer,  currName,  recordBuf);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
119	[BUG]  [BUGGY]  writeEOFRecord(currName,  recordBuf,  assemLen);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(currName,  recordBuf,  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(currName,  recordBuf,  assemLen);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
120	[BUG]  [BUGGY]  writeEOFRecord(currName,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(currName,  recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(currName,  recordBuf,  0,  recordBuf.length);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
121	[BUG]  [BUGGY]  buffer.writeBytes(currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(currName);	  buffer.writeBytes(i);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
122	[BUG]  [BUGGY]  buffer.write(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(assemBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(assemBuf,  0,  recordBuf.length);	  buffer.writeBytes(i);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
123	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
124	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
125	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
126	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(buffer!=  null)  {  buffer.writeRecord(recordBuf);	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
127	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  2);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
128	[BUG]  [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf,  0,  recordBuf.length  -  1);	  buffer.write(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
129	[BUG]  [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf,  0,  recordBuf.length  +  1);	  buffer.write(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
130	[BUG]  [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf,  0,  recordBuf.length  -  2);	  buffer.write(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
131	[BUG]  [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  +  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf,  0,  recordBuf.length  +  2);	  buffer.write(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
132	[BUG]  [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf,  0,  recordBuf.length  +  i);	  buffer.write(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
133	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  3);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  3);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    -    4);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
134	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  4);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    -    4);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
135	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  +  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  +  2);	  buffer.writeRecord(recordBuf,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
136	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  /  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  /  1);	  buffer.writeRecord(recordBuf,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
137	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  +  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  +  3);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  +  3);	  buffer.writeRecord(recordBuf,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
138	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  +  i);	  buffer.writeRecord(recordBuf,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
139	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  3);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  3);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
140	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  i  +  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  i  +  1,  recordBuf.length);	  buffer.writeRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
141	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  1,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  1,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  1,  recordBuf.length  +  1);	  buffer.writeRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
142	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i  +  1]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf[i  +  1]);	  buffer.writeRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
143	[BUG]  [BUGGY]  buffer.writeRecord(0,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(0,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(0,  0,  recordBuf.length);	  buffer.writeRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
144	[BUG]  [BUGGY]  buffer.writeRecord(i,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(i,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(i,  0,  recordBuf.length  -  1);	  buffer.writeRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
145	[BUG]  [BUGGY]  buffer.writeRecord(i,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(i,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(i,  0,  recordBuf.length  +  1);	  buffer.writeRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
146	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf,  0,  recordBuf.length);	  buffer.writeRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
147	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  recordBuf.length  +  1);	  buffer.writeEOFRecord(recordBuf,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
148	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  recordBuf.length  -  1);	  buffer.writeEOFRecord(recordBuf,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
149	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  recordBuf[i]);	  buffer.writeEOFRecord(recordBuf,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
150	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]  +  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i]  +  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i]  +  0);	  buffer.writeRecord(recordBuf[i]    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
151	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i]  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i]  -  1);	  buffer.writeRecord(recordBuf[i]    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
152	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]  +  2);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i]  +  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i]  +  2);	  buffer.writeRecord(recordBuf[i]    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
153	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]  *  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i]  *  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i]  *  1);	  buffer.writeRecord(recordBuf[i]    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
154	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]  +  '0');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i]  +  '0');  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i]  +  '0');	  buffer.writeRecord(recordBuf[i]    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
155	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  1);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
156	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i]  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i]  +  1);	  buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
157	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemBuf);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  assemBuf);	  buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
158	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i  +  1]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i  +  1]);	  buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
159	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  assemBuf[i]);	  buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
160	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i]  &  0xFFFF);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i]  &  0xFFFF);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i]  &  0xFFFF);	  buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
161	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
162	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
163	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
164	[BUG]  [BUGGY]  arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  1);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  2);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  assemBuf,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  -  4);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
171	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
172	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
173	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
174	[BUG]  [BUGGY]  while(i!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(i!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(i!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
175	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
176	[BUG]  [BUGGY]  if(i!=  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i!=  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i!=  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
177	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  1,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
178	[BUG]  [BUGGY]  buffer.writeEOFRecord(0,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(0,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(0,  1,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
179	[BUG]  [BUGGY]  buffer.writeEOFRecord(assemBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(assemBuf,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(assemBuf,  1,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
180	[BUG]  [BUGGY]  buffer.writeFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeFRecord(recordBuf,  0,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
181	[BUG]  [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
182	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
183	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  i  +  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  i  +  1,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
184	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  recordBuf  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  recordBuf  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  recordBuf  +  1);	  buffer.writeEOFRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
185	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  1,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  1,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  1,  recordBuf.length  +  1);	  buffer.writeEOFRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
186	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
187	[BUG]  [BUGGY]  arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
188	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  1);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
189	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
190	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  out.write(buffer,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  out.write(buffer,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  out.write(buffer,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
191	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
192	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
193	[BUG]  [BUGGY]  if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  ==  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
194	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
195	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
196	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
197	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf[i]);	  buffer.writeRecord(recordBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
198	[BUG]  [BUGGY]  buffer.writeRecord(REcordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(REcordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(REcordBuf,  0,  recordBuf.length);	  buffer.writeRecord(recordBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
199	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf[i].length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf[i].length);	  buffer.writeRecord(recordBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
200	[BUG]  [BUGGY]  buffer.write(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf[i]);	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
201	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
202	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  buffer,  recordBuf.length,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  buffer,  recordBuf.length,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  buffer,  recordBuf.length,  recordBuf.length);  }	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
203	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  >  0)  {  buffer.write(recordBuf);  }	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
204	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
205	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
207	[BUG]  [BUGGY]  if(buffer.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
208	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
209	[BUG]  [BUGGY]  while(buffer.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(buffer.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(buffer.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
210	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)  {  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
211	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  >=  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  >=  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length  >=  0)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    ==    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
212	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);	  if(recordBuf!=    null    ||    recordBuf.length    ==    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
213	[BUG]  [BUGGY]  if(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    ==    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
214	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  4);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    -    4);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
215	[BUG]  [BUGGY]  if(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    <    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
216	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  =  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  =  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length  <  =  0)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    <    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
217	[BUG]  [BUGGY]  os.write(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(recordBuf[i]);	  os.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
218	[BUG]  [BUGGY]  os.write(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(recordBuf,  0,  recordBuf.length);	  os.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
219	[BUG]  [BUGGY]  os.write(buffer,  recordBuf);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(buffer,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(buffer,  recordBuf);	  os.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
220	[BUG]  [BUGGY]  os.write(currName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(currName);	  os.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
221	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(assemBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(assemBuf,  0,  recordBuf.length);	  os.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
222	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeEOFRecord(recordBuf);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
223	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeRecord(recordBuf,  0,  recordBuf.length);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
224	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeRecord(recordBuf,  i);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
225	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeRecord(recordBuf,  recordBuf.length);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
226	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeRecord(recordBuf[i]);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
227	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeRecord(recordBuf,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeRecord(recordBuf,  0);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
228	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
229	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
230	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(REcordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(REcordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(REcordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
231	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(RecordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(RecordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(RecordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
232	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf[i]);  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
233	[BUG]  [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
234	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
235	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
236	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  wBuf,  0,  recordBuf.length);	  buffer.writeRecord(recordBuf[i],    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
237	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf[i],  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf[i],  0,  recordBuf.length);	  buffer.writeRecord(recordBuf[i],    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
238	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf[i],  assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf[i],  assemBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf[i],  assemBuf,  0,  recordBuf.length);	  buffer.writeRecord(recordBuf[i],    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
239	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length  +  1);	  buffer.writeRecord(recordBuf[i],    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
240	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemBuf,  0,  recordBuf.length  -  1);	  buffer.writeRecord(recordBuf[i],    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
241	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf[i],  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf[i],  recordBuf[i]);	  buffer.writeRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
242	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf[i]  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemBuf[i]  +  1);	  buffer.writeRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
243	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  recordBuf[i]);	  buffer.writeRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
244	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf[i  +  1]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemBuf[i  +  1]);	  buffer.writeRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
245	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf[i].getName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf[i].getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemBuf[i].getName());	  buffer.writeRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
246	[BUG]  [BUGGY]  buffer.writeEOFRecord(currName,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(currName,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(currName,  recordBuf.length);	  buffer.writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
247	[BUG]  [BUGGY]  buffer.writeEOFRecord(lONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(lONGFILE_ERROR);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(lONGFILE_ERROR);	  buffer.writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
248	[BUG]  [BUGGY]  buffer.writeEOFRecord(LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(LONGFILE_ERROR);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(LONGFILE_ERROR);	  buffer.writeEOFRecord(currName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
249	[BUG]  [BUGGY]  buffer.writeBytes(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(assemBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(assemBuf,  0,  recordBuf.length);	  buffer.writeBytes(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
250	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  1);	  buffer.writeBytes(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
251	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  0,  recordBuf.length  +  1);	  buffer.writeBytes(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
252	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  2);	  buffer.writeBytes(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
253	[BUG]  [BUGGY]  buffer.writeBytes(i,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(i,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(i,  0,  recordBuf.length);	  buffer.writeBytes(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
254	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  0,  recordBuf.length  -  4);	  buffer.writeBytes(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
255	[BUG]  [BUGGY]  buffer.writeRecord(0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(0,  recordBuf.length);	  buffer.writeRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
256	[BUG]  [BUGGY]  buffer.writeRecord(i,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(i,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(i,  recordBuf.length  +  1);	  buffer.writeRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
257	[BUG]  [BUGGY]  buffer.writeRecord(i,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(i,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(i,  recordBuf[i]);	  buffer.writeRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
258	[BUG]  [BUGGY]  buffer.writeRecord(i,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(i,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(i,  recordBuf.length  -  1);	  buffer.writeRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
259	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  assemBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  assemBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  assemBuf);	  buffer.writeEOFRecord(i,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
260	[BUG]  [BUGGY]  buffer.writeEOFRecord(0,  recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(0,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(0,  recordBuf);	  buffer.writeEOFRecord(i,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
261	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  recordBuf[0]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  recordBuf[0]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  recordBuf[0]);	  buffer.writeEOFRecord(i,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
262	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  assemBuf,  recordBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  assemBuf,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  assemBuf,  recordBuf);	  buffer.writeEOFRecord(i,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
263	[BUG]  [BUGGY]  buffer.writeEOFRecord(i  +  1,  recordBuf);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i  +  1,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i  +  1,  recordBuf);	  buffer.writeEOFRecord(i,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
264	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  wOffset);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  wOffset);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemBuf,  wOffset);	  buffer.writeRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
265	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf[i],  recordBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf[i],  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf[i],  recordBuf);	  buffer.writeRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
266	[BUG]  [BUGGY]  buffer.writeRecord(0,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(0,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(0,  1,  recordBuf.length);	  buffer.writeRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
267	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  1,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  1,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  1,  recordBuf.length  -  1);	  buffer.writeRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
268	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf,  1,  recordBuf.length);	  buffer.writeRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
269	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i],  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i],  currName);	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
270	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i]  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i]  +  1);	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
271	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i  +  1]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i  +  1]);	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
272	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i],  assemBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i],  assemBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i],  assemBuf);	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
273	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i]  +  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i]  +  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i]  +  currName);	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
274	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  i);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
275	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  /  i);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
276	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  i);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
277	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  4);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  4);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
278	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  i);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
279	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  /  i);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
280	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  i);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
281	[BUG]  [BUGGY]  buffer.writeBytes(assemBuf,  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(assemBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(assemBuf,  i);	  buffer.writeBytes(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
282	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  0);	  buffer.writeBytes(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
283	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  recordBuf[i]);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
284	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  0);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
285	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  assemLen);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
286	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  0,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
287	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  false);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  false);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
288	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  null);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  null);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
289	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  fileMode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  fileMode);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  fileMode);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
290	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  null,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  null,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  null,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    null);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
291	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  null);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  null);	  buffer.writeEOFRecord(recordBuf,    null);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
292	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  null,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  null,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  null,  0);	  buffer.writeEOFRecord(recordBuf,    null);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
293	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
294	[BUG]  [BUGGY]  if(i!=  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i!=  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i!=  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
295	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
296	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
297	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
298	[BUG]  [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  null;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  null;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
299	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  1;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  1;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  1;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
300	[BUG]  [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  1;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  1;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  1;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
301	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  RecordBuffer  recordBuf[i]  =  new  RecordBuffer();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  RecordBuffer  recordBuf[i]  =  new  RecordBuffer();  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  RecordBuffer  recordBuf[i]  =  new  RecordBuffer();  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
302	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf[i]);	  buffer.writeREcord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
303	[BUG]  [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  <  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
304	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
305	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(buffer,  0,  recordBuf.length  +  1);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
306	[BUG]  [BUGGY]  os.write(recordBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(recordBuf,  0,  buffer.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(recordBuf,  0,  buffer.length);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
307	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(buffer,  0,  recordBuf.length  -  1);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
308	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(buffer,  0,  recordBuf.length  +  2);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
309	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  ==  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  ==  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  ==  0)  {  buffer.writeRecord(recordBuf);  }	  if(i    ==    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
310	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  ==  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  ==  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  ==  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }	  if(i    ==    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
311	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
312	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
313	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
314	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
315	[BUG]  [BUGGY]  if(i!=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i!=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i!=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
316	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
317	[BUG]  [BUGGY]  while(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
318	[BUG]  [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  null;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length!=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  null;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
319	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  1;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  1;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  1;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
320	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  1);	  buffer.writeRecord(recordBuf,    0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
321	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length,  recordBuf[i]);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
322	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length,  0,  recordBuf.length);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
323	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length,  i  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length,  i  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length,  i  +  1);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
324	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length,  0);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
325	[BUG]  [BUGGY]  writeEOFRecord(i,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(i,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(i,  recordBuf.length);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
326	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
327	[BUG]  [BUGGY]  while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
328	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
329	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
330	[BUG]  [BUGGY]  while(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
331	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf,  recordBuf.length);	  buffer.writeRecord(recordBuf,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
332	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  assemBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  assemBuf.length);	  buffer.writeRecord(recordBuf,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
333	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf,  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf,  i);	  buffer.writeRecord(recordBuf,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
334	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf,  0,  assemBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf,  0,  assemBuf.length);	  buffer.writeRecord(recordBuf,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
335	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  assemBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  assemBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  assemBuf.length  +  1);	  buffer.writeRecord(recordBuf,    assemBuf.length);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
336	[BUG]  [BUGGY]  writeEOFRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf[i]);	  writeEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
337	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length);	  writeEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
338	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
339	[BUG]  [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  ==  0)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
340	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  <  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  <  recordBuf.length)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
341	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i  -  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i  -  1]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i  -  1]);	  buffer.writeRecord(recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
342	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i  +  1],  currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i  +  1],  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i  +  1],  currName);	  buffer.writeRecord(recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
343	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i  +  2]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i  +  2]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i  +  2]);	  buffer.writeRecord(recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
344	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i  *  1]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i  *  1]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i  *  1]);	  buffer.writeRecord(recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
345	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  1);	  buffer.writeREcord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
346	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  1);	  buffer.writeREcord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
347	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  2);	  buffer.writeREcord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
348	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  2);	  buffer.writeREcord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
349	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf,  0,  recordBuf.length  -  4);	  buffer.writeREcord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
350	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
351	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  assemBuf[i]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  assemBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  assemBuf[i]);	  buffer.writeRecord(recordBuf,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
352	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i]  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i]  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf[i]  +  1);	  buffer.writeRecord(recordBuf,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
353	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i],  currName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i],  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf[i],  currName);	  buffer.writeRecord(recordBuf,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
354	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[0]);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[0]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf[0]);	  buffer.writeRecord(recordBuf,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
355	[BUG]  [BUGGY]  if(recordBuf[i]!=  null)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf[i]!=  null)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf[i]!=  null)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
356	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
357	[BUG]  [BUGGY]  if(recordBuf[i]  ==  null)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf[i]  ==  null)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf[i]  ==  null)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
358	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
359	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  +  1);  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
360	[BUG]  [BUGGY]  (recordBuf!=  null  &&  recordBuf.length  ==  0))  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  (recordBuf!=  null  &&  recordBuf.length  ==  0))  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	(recordBuf!=  null  &&  recordBuf.length  ==  0))  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    ==    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
361	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
362	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
363	[BUG]  [BUGGY]  if(buffer!=  null)recordBuf.writeBytes(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)recordBuf.writeBytes(i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)recordBuf.writeBytes(i);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
364	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeEOFRecord(i);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
365	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length  +  i);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
366	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf[i].length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf[i].length);	  System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
367	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
368	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
369	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i  +  1);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
370	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  2);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
371	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
372	[BUG]  [BUGGY]  writeString(buffer[i]);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeString(buffer[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeString(buffer[i]);	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
373	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i].getName());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i].getName());  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i].getName());  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
374	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]  + ", ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]  + ", ");  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i]  + ", ");  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
375	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  wBuf);	  buffer.writeRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
376	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf,  assemBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf,  assemBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  wBuf,  assemBuf);	  buffer.writeRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
377	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  0,  recordBuf.length  -  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  0,  recordBuf.length  -  4);	  buffer.writeEOFRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
378	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
379	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf[i].length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf[i].length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  recordBuf[i].length);	  buffer.writeEOFRecord(recordBuf,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
380	[BUG]  [BUGGY]  buffer.writeUTF(recordBuf,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeUTF(recordBuf,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeUTF(recordBuf,  recordBuf.length);	  buffer.writeEOFRecord(recordBuf,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
381	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  recordBuf,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  recordBuf,  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  recordBuf,  assemLen);	  buffer.writeEOFRecord(i,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
382	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
383	[BUG]  [BUGGY]  int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	int  recordBufLength  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
384	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i  +  1);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
385	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i],  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i],  assemLen);	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
386	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  assemBuf,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  assemBuf,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  assemBuf,  recordBuf.length);	  buffer.writeEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
387	[BUG]  [BUGGY]  buffer.writeEOFRecord(i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i  +  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i  +  1,  recordBuf.length);	  buffer.writeEOFRecord(i,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
388	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
389	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  getEOFRecord();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  getEOFRecord();  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  getEOFRecord();  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
390	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  new  EOFRecord();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  new  EOFRecord();  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  new  EOFRecord();  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
391	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0L;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0L;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0L;  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
392	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i],  assemBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i],  assemBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf[i],  assemBuf);	  buffer.writeRecord(recordBuf,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
393	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemBuf,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemBuf,  currName);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
394	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  wOffset);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  wOffset);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  wOffset);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
395	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemBuf,  currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemBuf,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  assemBuf,  currName);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
396	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  assemBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  assemBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  assemBuf);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
397	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  assemLen);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
398	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  wOffset);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  wOffset);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  wOffset);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
399	[BUG]  [BUGGY]  buffer.write(i,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(i,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(i,  0,  recordBuf.length);	  buffer.write(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
400	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
401	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord();  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord();  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
402	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  System.arraycopy(assemBuf,  0,  buffer,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  System.arraycopy(assemBuf,  0,  buffer,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  System.arraycopy(assemBuf,  0,  buffer,  0,  recordBuf.length);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
403	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i!=  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i!=  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i!=  recordBuf.length)  {  buffer.writeRecord(recordBuf);  }	  if(i!=    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
404	[BUG]  [BUGGY]  buffer.write(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf,  i);	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
405	[BUG]  [BUGGY]  buffer.write(assemBuf,  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(assemBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(assemBuf,  i);	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
406	[BUG]  [BUGGY]  buffer.write(i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(i);	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
407	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  currName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  currName);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
408	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  currName,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  currName,  i);	  buffer.writeEOFRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
409	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  i  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  i  +  1);	  buffer.writeBytes(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
410	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  1,  recordBuf.length);	  buffer.writeBytes(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
411	[BUG]  [BUGGY]  buffer.writeBytes(i,  recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(i,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(i,  recordBuf);	  buffer.writeBytes(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
412	[BUG]  [BUGGY]  writeEOFRecord(currName,  recordBuf,  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(currName,  recordBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(currName,  recordBuf,  i);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
413	[BUG]  [BUGGY]  writeEOFRecord(buffer,  recordBuf);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(buffer,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(buffer,  recordBuf);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
414	[BUG]  [BUGGY]  writeEOFRecord(buffer,  i);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(buffer,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(buffer,  i);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
415	[BUG]  [BUGGY]  buffer.writeEOFRecord(i,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(i,  null);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(i,  null);	  buffer.writeEOFRecord(recordBuf,    null);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
416	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  null,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  null,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  null,  i);	  buffer.writeEOFRecord(recordBuf,    null);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
417	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  0);	  buffer.writeEOFRecord(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
418	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
419	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
420	[BUG]  [BUGGY]  os.write(buffer,  i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(buffer,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(buffer,  i);	  os.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
421	[BUG]  [BUGGY]  writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(i);	  writeEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
422	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  writeEOFRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  writeEOFRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  writeEOFRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  writeEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
423	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  writeEOFRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  writeEOFRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  writeEOFRecord(recordBuf);  }	  writeEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
424	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf,  0,  recordBuf.length  +  i);	  buffer.writeBytes(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
425	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
426	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  -  1);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
427	[BUG]  [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(recordBuf,  0,  recordBuf.length  +  i);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
428	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
429	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
430	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length  -  1  +  i);	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
431	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf[i],  wBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf[i],  wBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf[i],  wBuf,  0,  recordBuf.length);	  buffer.writeRecord(recordBuf[i],    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
432	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf,  recordBuf[i],  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(assemBuf,  recordBuf[i],  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(assemBuf,  recordBuf[i],  0,  recordBuf.length);	  buffer.writeRecord(recordBuf[i],    assemBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
433	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
434	[BUG]  [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
435	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
436	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
437	[BUG]  [BUGGY]  buffer.writeRecord(i,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(i,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(i,  1,  recordBuf.length);	  buffer.writeRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
438	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
439	[BUG]  [BUGGY]  if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
440	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
441	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  *  recordBuf.length  +  1);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
442	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
443	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
444	[BUG]  [BUGGY]  buffer.writeRecord(i,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(i,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(i,  0);	  buffer.writeRecord(recordBuf,    0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
445	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  1,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  1,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  1,  0);	  buffer.writeRecord(recordBuf,    0);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
446	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(buffer,  0,  recordBuf.length,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(buffer,  0,  recordBuf.length,  i);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
447	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(buffer,  0,  recordBuf.length  -  2);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
448	[BUG]  [BUGGY]  (recordBuf!=  null))  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  (recordBuf!=  null))  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	(recordBuf!=  null))  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
449	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf,  0,  recordBuf.length  +  i);	  buffer.writeREcord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
450	[BUG]  [BUGGY]  buffer.writeREcord(i,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(i,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(i,  0,  recordBuf.length);	  buffer.writeREcord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
451	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
452	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  recordBuf.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  recordBuf.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  recordBuf.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
453	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  while(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
454	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length  +  i);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
455	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
456	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  0,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  0,  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  0,  0);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
457	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  4);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
458	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  0L);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  0L);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  0L);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
459	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length,  recordBuf.length);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
460	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length  +  4);	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    -    4);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
461	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[0]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf[0]);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
462	[BUG]  [BUGGY]  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	recordBuf[i]  =  buffer.writeRecord(recordBuf[i]);	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
463	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  return;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  return;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  return;  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
464	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length;  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
465	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  recordBuf[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
466	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  i  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  i  +  1);	  buffer.writeRecord(recordBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
467	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
468	[BUG]  [BUGGY]  Buffer  buffer  =  new  Buffer(recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  Buffer  buffer  =  new  Buffer(recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	Buffer  buffer  =  new  Buffer(recordBuf.length);	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
469	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf[i]);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
470	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  fileBuf[i]  =  0;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  fileBuf[i]  =  0;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  fileBuf[i]  =  0;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
471	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0L;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0L;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  0L;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
472	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
473	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(RecordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(RecordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(RecordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
474	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(REcordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
475	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
476	[BUG]  [BUGGY]  if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >=  0)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
477	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
478	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  1);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  1);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length  +  1);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
479	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(i);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf!=  null)  {  buffer.writeRecord(i);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
480	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  i);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
481	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    <    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
482	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf[i]);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  wBuf[i]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  wBuf[i]);	  buffer.writeRecord(recordBuf[i],    assemBuf[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
483	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  1  +  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf.length  -  1  +  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf.length  -  1  +  i);	  buffer.writeRecord(recordBuf,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
484	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  i  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  i  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  i  -  1);	  buffer.writeRecord(recordBuf,    recordBuf.length    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
485	[BUG]  [BUGGY]  buffer.writeREcord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeREcord(recordBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeREcord(recordBuf,  i);	  buffer.writeREcord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
486	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  i  +  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  i  +  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  i  +  1,  recordBuf.length);	  writeEOFRecord(recordBuf,    i);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
487	[BUG]  [BUGGY]  writeEOFRecord(currName,  recordBuf,  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(currName,  recordBuf,  null);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(currName,  recordBuf,  null);	  writeEOFRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
488	[BUG]  [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >=  recordBuf.length)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >=  recordBuf.length)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(i    <    recordBuf.length)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
489	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  new  TarBuffer();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  new  TarBuffer();  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  new  TarBuffer();  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
490	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
491	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
492	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
493	[BUG]  [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf  ==  null)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf  ==  null)  {  if(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
494	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length;	  buffer.writeRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
495	[BUG]  [BUGGY]  if(i  >=  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >=  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >=  0)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(i!=    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
496	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i  +  3]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i  +  3]);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i  +  3]);	  buffer.writeRecord(recordBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
497	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length,  recordBuf.length  -  1);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
498	[BUG]  [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf.length,  recordBuf.length  +  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf.length,  recordBuf.length  +  1);	  writeEOFRecord(recordBuf.length,    i);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
499	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
500	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf[i]);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
501	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  aLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  currName,  aLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  currName,  aLen);	  buffer.writeRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
502	[BUG]  [BUGGY]  buffer.write(buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(buffer,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(buffer,  0,  recordBuf.length);	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
503	[BUG]  [BUGGY]  buffer.write(recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf.length);	  buffer.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
504	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  assemLen);	  buffer.writeRecord(recordBuf[i],    assemBuf);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
505	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  aLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  aLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  aLen);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
506	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf[i],  currName,  LONGFILE_GNU);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf[i],  currName,  LONGFILE_GNU);	  buffer.writeEOFRecord(recordBuf[i],    currName);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
507	[BUG]  [BUGGY]  if(buffer!=  null  &&  recordBuf!=  null)buffer.writeBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null  &&  recordBuf!=  null)buffer.writeBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null  &&  recordBuf!=  null)buffer.writeBytes(recordBuf);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
508	[BUG]  [BUGGY]  if(buffer.writeBytes(recordBuf))  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer.writeBytes(recordBuf))  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer.writeBytes(recordBuf))  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
509	[BUG]  [BUGGY]  if(buffer!=  null  &&  recordBuf.length  >  0)buffer.writeBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer!=  null  &&  recordBuf.length  >  0)buffer.writeBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer!=  null  &&  recordBuf.length  >  0)buffer.writeBytes(recordBuf);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
510	[BUG]  [BUGGY]  if(buffer  ==  null)buffer.writeBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(buffer  ==  null)buffer.writeBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(buffer  ==  null)buffer.writeBytes(recordBuf);	  if(recordBuf!=    null)buffer.writeBytes(recordBuf);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
511	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  recordBuf);	  buffer.writeEOFRecord(i,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
512	[BUG]  [BUGGY]  Arrays.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  Arrays.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	Arrays.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
513	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  null;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  null;  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  null;  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    recordBuf[i]    =    0;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
514	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  i  +  1,  currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  i  +  1,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  i  +  1,  currName);	  buffer.writeEOFRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
515	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  1,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  1,  recordBuf.length  -  1);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  1,  recordBuf.length  -  1);	  buffer.writeEOFRecord(recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
516	[BUG]  [BUGGY]  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(i  >  0)  {  buffer.writeRecord(recordBuf);  }	  if(i    >    0)    {    if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
517	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i],  currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i],  currName);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeString(buffer[i],  currName);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeString(buffer[i]);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
518	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
519	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf;  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf;  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf;  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    buffer.writeRecord(recordBuf,    0,    recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
520	[BUG]  [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null  ||  recordBuf.length  <  0)  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
521	[BUG]  [BUGGY]  Arrays.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  Arrays.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	Arrays.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);	  if(recordBuf!=    null)    {    System.arraycopy(recordBuf,    0,    recordBuf,    0,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
522	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i],  assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  recordBuf[i],  assemLen);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  recordBuf[i],  assemLen);	  buffer.writeRecord(recordBuf,    recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
523	[BUG]  [BUGGY]  buffer.writeRaw(currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRaw(currName,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRaw(currName,  0,  recordBuf.length);	  buffer.writeRaw(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
524	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  if(recordBuf  ==  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf    ==    null)    {    buffer.writeRecord(recordBuf);    }    else    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
525	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length  -  4);	  writeEOFRecord(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
526	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    <    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
527	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  <  0)  {  buffer.writeRecord(recordBuf);	  if(recordBuf!=    null    ||    recordBuf.length    <    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
528	[BUG]  [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(i  <  recordBuf.length)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
529	[BUG]  [BUGGY]  if(recordBuf.length  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf.length  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf.length  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  writeEOFRecord(i);  }	  if(recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    writeEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
530	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  createEOFRecord(i);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  createEOFRecord(i);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  createEOFRecord(i);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
531	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(1);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer[i]  =  getEOFRecord(1);  }	  if(recordBuf.length!=    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer[i]    =    getEOFRecord(i);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
532	[BUG]  [BUGGY]  os.write(currName,  recordBuf);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(currName,  recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(currName,  recordBuf);	  os.write(recordBuf);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
533	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length;  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length;	  buffer.writeEOFRecord(recordBuf,    0,    recordBuf.length    +    2);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
534	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  i  +  1,  currName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf,  i  +  1,  currName);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf,  i  +  1,  currName);	  buffer.writeRecord(recordBuf,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
535	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  2);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  1,  recordBuf.length  -  2);	  System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
536	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  1,  recordBuf,  1,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  1,  recordBuf,  1,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  System.arraycopy(recordBuf,  1,  recordBuf,  1,  recordBuf.length);  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    System.arraycopy(recordBuf,    0,    recordBuf,    1,    recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
537	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]  +  '/');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i]  +  '/');  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i]  +  '/');	  buffer.writeRecord(recordBuf[i]    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
538	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  }	  ||    recordBuf!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
539	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i],  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeRecord(recordBuf[i],  false);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeRecord(recordBuf[i],  false);	  buffer.writeRecord(recordBuf[i],    0);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
540	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(recordBuf,  i);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeEOFRecord(recordBuf,  i);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
541	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeEOFRecord(recordBuf,  0,  recordBuf.length);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
542	[BUG]  [BUGGY]  this.recordBuf  =  buffer.writeREcord(recordBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  this.recordBuf  =  buffer.writeREcord(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	this.recordBuf  =  buffer.writeREcord(recordBuf);	  this.recordBuf    =    buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
543	[BUG]  [BUGGY]  buffer.writeEOFRecord(currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeEOFRecord(currName,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeEOFRecord(currName,  0,  recordBuf.length);	  buffer.writeEOFRecord(i,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
544	[BUG]  [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null  &&  recordBuf.length  ==  0)  {  buffer.writeRecord(recordBuf);  }	  if(recordBuf!=    null    ||    recordBuf.length    ==    0)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
545	[BUG]  [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.write(recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.write(recordBuf,  0,  recordBuf.length  -  4);	  buffer.write(recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
546	[BUG]  [BUGGY]  os.write(currName,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  os.write(currName,  0,  recordBuf.length);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	os.write(currName,  0,  recordBuf.length);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
547	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  writeEOFRecord(recordBuf,  null);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	writeEOFRecord(recordBuf,  null);	  writeEOFRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
548	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i].getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i].getName());  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i].getName());	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
549	[BUG]  [BUGGY]  buffer.writeBytes(recordBuf[i],  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  buffer.writeBytes(recordBuf[i],  0);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	buffer.writeBytes(recordBuf[i],  0);	  buffer.writeBytes(recordBuf[i]);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
550	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
551	[BUG]  [BUGGY]  while(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }      [BUGGY]  while(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);  [BUGGY]      }  [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	while(recordBuf!=  null)  {  buffer.writeBytes(recordBuf);	  if(recordBuf!=    null)    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
