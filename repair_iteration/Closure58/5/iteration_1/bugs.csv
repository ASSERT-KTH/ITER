bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,  gen);	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
2	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,  gen);	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
4	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
6	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
8	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
10	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
12	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
13	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
14	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
15	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
16	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
17	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
18	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
19	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	  	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
20	[BUG]  [BUGGY]    [FE]  IllegalStateException  [FE]                      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	  	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
21	[BUG]  [BUGGY]    Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  rhs  =  lhs.getNext();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  rhs  =  lhs.getNext();		non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	10	None	add
22	[BUG]  [BUGGY]    Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  lhs  =  n.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  lhs  =  n.getFirstChild();		non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	10	None	add
23	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  lhs.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    Node  c  =  lhs.getFirstChild();		compilable	  [FE]  IllegalStateException  	10	1	add
24	[BUG]  [BUGGY]    Node  c  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  lhs.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  c  =  lhs.getFirstChild();		compilable	  [FE]  IllegalStateException  	10	1	add
25	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  lhs.getNext();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    Node  c  =  lhs.getNext();		compilable	  [FE]  IllegalStateException  	10	1	add
26	[BUG]  [BUGGY]    Node  c  =  lhs.getNext();  [FE]  IllegalStateException  [FE]          IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  lhs.getNext();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  c  =  lhs.getNext();		compilable	  [FE]  IllegalStateException  	10	1	add
27	[BUG]  [BUGGY]    Node  rhs  =  n.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  rhs  =  n.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  rhs  =  n.getFirstChild();		non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	10	None	add
28	[BUG]  [BUGGY]    Node  lhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  lhs  =  lhs.getNext();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  lhs  =  lhs.getNext();		non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	10	None	add
29	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);		compilable	  [FE]  IllegalStateException  	10	2	add
30	[BUG]  [BUGGY]    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);		compilable	  [FE]  IllegalStateException  	10	2	add
31	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  lhs.getLastChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    Node  c  =  lhs.getLastChild();		compilable	  [FE]  IllegalStateException  	10	1	add
32	[BUG]  [BUGGY]    Node  c  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]                  IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  lhs.getLastChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  c  =  lhs.getLastChild();		compilable	  [FE]  IllegalStateException  	10	1	add
33	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    lhs  =  lhs.getNext();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    lhs  =  lhs.getNext();		compilable	  [FE]  NullPointerException  	10	2	add
34	[BUG]  [BUGGY]    lhs  =  lhs.getNext();  [FE]  NullPointerException  [FE]                    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    lhs  =  lhs.getNext();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    lhs  =  lhs.getNext();		compilable	  [FE]  NullPointerException  	10	2	add
35	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    Preconditions.checkState(lhs.getType()  ==  Token.NAME);		compilable	  [FE]  IllegalStateException  	10	1	add
36	[BUG]  [BUGGY]    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Preconditions.checkState(lhs.getType()  ==  Token.NAME);		compilable	  [FE]  IllegalStateException  	10	1	add
37	[BUG]  [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  liveSet  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	non-compiled	[CE]  cannot  find  symbol  liveSet	9	None	replace
38	[BUG]  [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  liveSet  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }	addToSetIfLocal(lhs,  kill);  	non-compiled	[CE]  cannot  find  symbol  liveSet	9	None	replace
39	[BUG]  [BUGGY]    Node  rhs  =  lhs.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  rhs  =  lhs.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  rhs  =  lhs.getFirstChild();		non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	10	None	add
40	[BUG]  [BUGGY]    Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  lhs  =  lhs.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  lhs  =  lhs.getFirstChild();		non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	10	None	add
41	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
42	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
43	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
44	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
45	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
46	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	addToSetIfLocal(lhs,  kill);  	compilable	  [FE]  IllegalStateException  	9	1	replace
47	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    lhs  =  lhs.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    lhs  =  lhs.getFirstChild();		compilable	  [FE]  NullPointerException  	10	1	add
48	[BUG]  [BUGGY]    lhs  =  lhs.getFirstChild();  [FE]  NullPointerException  [FE]    IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    lhs  =  lhs.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    lhs  =  lhs.getFirstChild();		compilable	  [FE]  NullPointerException  	10	1	add
49	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  n.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	    Node  c  =  n.getFirstChild();		compilable	  [FE]  IllegalStateException  	10	1	add
50	[BUG]  [BUGGY]    Node  c  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }  [BUGGY]    Node  c  =  n.getFirstChild();  [BUGGY]  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	    Node  c  =  n.getFirstChild();		compilable	  [FE]  IllegalStateException  	10	1	add
