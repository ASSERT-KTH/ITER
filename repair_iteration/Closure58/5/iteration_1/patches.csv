bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	33	2	add
2	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	33	2	add
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getNext();    lhs  =  lhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	33	2	add
4	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getLastChild();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	33	2	add
5	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getNext();    lhs  =  lhs.getFirstChild();	  	compilable	  [FE]  NullPointerException  	33	2	add
6	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getFirstChild();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getFirstChild();	  	compilable	  [FE]  NullPointerException  	33	2	add
7	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getPrevious();  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getPrevious();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getPrevious();	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
8	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getNext();    lhs  =  lhs.getParent();	  	compilable	  [FE]  IllegalStateException  	33	2	add
9	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getParent();  [FE]  IllegalStateException  [FE]            NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getParent();	  	compilable	  [FE]  IllegalStateException  	33	2	add
10	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  Node  lhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  Node  lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    Node  lhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	33	None	add
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  rhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getNext();    lhs  =  rhs.getNext();	  	compilable	  [FE]  IllegalStateException  	33	2	add
12	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  rhs.getNext();  [FE]  IllegalStateException  [FE]                NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  rhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  rhs.getNext();	  	compilable	  [FE]  IllegalStateException  	33	2	add
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getNext();    rhs  =  lhs.getNext();	  	compilable	  [FE]  NullPointerException  	33	2	add
14	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  rhs  =  lhs.getNext();  [FE]  NullPointerException  [FE]                  NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    rhs  =  lhs.getNext();	  	compilable	  [FE]  NullPointerException  	33	2	add
15	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  Lhs  =  lhs.getNext();  [CE]  cannot  find  symbol  Lhs  [FE]                    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  Lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    Lhs  =  lhs.getNext();	  	non-compiled	[CE]  cannot  find  symbol  Lhs	33	None	add
16	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
17	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
18	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
19	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
20	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
21	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
22	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
23	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
24	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
25	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
26	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	3	None	add
27	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
28	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
29	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
30	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
31	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
32	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
33	[BUG]  [BUGGY]  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
35	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
36	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
37	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
38	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
39	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
40	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
41	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
42	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
43	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	29	2	add
44	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	29	2	add
45	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	29	2	add
46	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	29	2	add
47	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  IllegalStateException  	29	2	add
48	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  IllegalStateException  	29	2	add
49	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  IllegalStateException  	29	2	add
50	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  IllegalStateException  	29	2	add
51	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	29	2	add
52	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	29	2	add
53	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
54	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.BUCKET);  [CE]  cannot  find  symbol  BUCKET  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.BUCKET);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.BUCKET);	  	non-compiled	[CE]  cannot  find  symbol  BUCKET	29	None	add
55	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  cannot  find  symbol	29	None	add
56	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  IllegalStateException  	29	2	add
57	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  IllegalStateException  	29	2	add
58	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	35	1	add
59	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	35	1	add
60	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	35	2	add
61	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	35	2	add
62	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  IllegalStateException  	35	2	add
63	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  IllegalStateException  	35	2	add
64	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  IllegalStateException  	35	2	add
65	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  IllegalStateException  	35	2	add
66	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	35	2	add
67	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	35	2	add
68	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  IllegalStateException  	35	2	add
69	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  IllegalStateException  	35	2	add
70	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    NodeUtil.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
71	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  IllegalStateException  	35	2	add
72	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  IllegalStateException  	35	2	add
73	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  lhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node  lhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	35	None	add
74	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.MOVED);  [CE]  cannot  find  symbol  MOVED  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.MOVED);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.MOVED);	  	non-compiled	[CE]  cannot  find  symbol  MOVED	35	None	add
75	[BUG]  [BUGGY]  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  not  a  statement	44	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	44	None	replace
77	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	2	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	2	replace
79	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
80	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
81	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
82	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
83	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  c  =  n.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	49	None	add
84	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  n  =  n.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	49	None	add
85	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  lhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  lhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	49	None	add
86	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  c  =  lhs.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  c  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  c  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	49	None	add
87	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  c  =  n.getLastChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  c  =  n.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  c  =  n.getLastChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	49	None	add
88	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  rhs  =  n.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  rhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  rhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	49	None	add
89	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  g  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    n.getFirstChild();    Node  g  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
90	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  g  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  g  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  g  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
91	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  b  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    n.getFirstChild();    Node  b  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
92	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  b  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  b  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  b  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
93	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  p  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    n.getFirstChild();    Node  p  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
94	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  p  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  p  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  p  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
95	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  h  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    n.getFirstChild();    Node  h  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
96	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  h  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  h  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  h  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
97	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	1	1	add
98	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	1	1	add
99	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Node  lhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	1	None	add
100	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    lhs  =  lhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	1	2	add
101	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  lhs  =  lhs.getLastChild();  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    lhs  =  lhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	1	2	add
102	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  n.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Node  lhs  =  n.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	1	None	add
103	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Node  lhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	1	None	add
104	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	1	None	add
105	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    lhs  =  lhs.getNext();	  	compilable	  [FE]  NullPointerException  	1	2	add
106	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  lhs  =  lhs.getNext();  [FE]  NullPointerException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    lhs  =  lhs.getNext();	  	compilable	  [FE]  NullPointerException  	1	2	add
107	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	1	2	add
108	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	1	2	add
109	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	1	2	add
110	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	1	2	add
111	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	1	1	add
112	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	1	1	add
113	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
114	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
115	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
116	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
117	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
118	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
119	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
120	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
121	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
122	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
123	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
124	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
125	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
126	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
127	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
128	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
129	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
130	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
131	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  rhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  rhs.getFirstChild();	      Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	24	1	replace
132	[BUG]  [BUGGY]  Node  c  =  rhs.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  rhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  rhs.getFirstChild();	      Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	24	1	replace
133	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  rhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  rhs.getLastChild();	      Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	24	1	replace
134	[BUG]  [BUGGY]  Node  c  =  rhs.getLastChild();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  rhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  rhs.getLastChild();	      Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	24	1	replace
135	[BUG]  [BUGGY]  Node  c  =  lhs.getCurrentNode();  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getCurrentNode();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getCurrentNode();	      Node    c    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
136	[BUG]  [BUGGY]  Node  c  =  lhs.getOwnScope();  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getOwnScope();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getOwnScope();	      Node    c    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
137	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  lhs.getParent();	      Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	24	1	replace
138	[BUG]  [BUGGY]  Node  c  =  lhs.getParent();  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getParent();	      Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	24	1	replace
139	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
140	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
141	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	41	None	add
142	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  ';'  expected	41	None	add
143	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
144	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
145	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
146	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
147	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isLhs(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isLhs(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isLhs(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
148	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isConditionExpression(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isConditionExpression(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isConditionExpression(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
149	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  cannot  find  symbol  GEN  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  GEN	41	None	add
150	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
151	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
152	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  lhs.getLastChild();	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  NullPointerException  	42	2	replace
153	[BUG]  [BUGGY]  lhs  =  lhs.getLastChild();  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  lhs.getLastChild();	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  NullPointerException  	42	2	replace
154	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isGet(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isGet(lhs));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	42	2	replace
155	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGet(lhs));  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isGet(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isGet(lhs));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	42	2	replace
156	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.THIS);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.THIS);	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	42	2	replace
157	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.THIS);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.THIS);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.THIS);	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	42	2	replace
158	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getLastChild();	      Node    c    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	50	1	replace
159	[BUG]  [BUGGY]  Node  c  =  n.getLastChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getLastChild();	      Node    c    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	50	1	replace
160	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getNext();	      Node    c    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	50	1	replace
161	[BUG]  [BUGGY]  Node  c  =  n.getNext();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getNext();	      Node    c    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	50	1	replace
162	[BUG]  [BUGGY]  if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  bad  operand  type  BitSet  for  unary  operator  '!'  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!kill)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  bad  operand  type  BitSet  for  unary  operator  '!'	38	None	replace
163	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	38	1	replace
164	[BUG]  [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	38	1	replace
165	[BUG]  [BUGGY]  if(!test)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  test  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!test)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!test)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  test	38	None	replace
166	[BUG]  [BUGGY]  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'	38	None	replace
167	[BUG]  [BUGGY]  if(!bin)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  bin  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!bin)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!bin)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  bin	38	None	replace
168	[BUG]  [BUGGY]  if(!tear)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  tear  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!tear)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!tear)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  tear	38	None	replace
169	[BUG]  [BUGGY]  if(!live)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  live  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!live)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!live)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  live	38	None	replace
170	[BUG]  [BUGGY]  if(!remote)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  remote  [FE]                        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!remote)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!remote)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  remote	38	None	replace
171	[BUG]  [BUGGY]  if(!detectVars)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  detectVars  [FE]                          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!detectVars)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!detectVars)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  detectVars	38	None	replace
172	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  c  =  lhs.getLastChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  c  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  c  =  lhs.getLastChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	31	None	add
173	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  lhs  =  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	31	None	add
174	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  rhs  =  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  rhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  rhs  =  lhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	31	None	add
175	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  b  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getLastChild();    Node  b  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
176	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  b  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  b  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  b  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
177	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  h  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getLastChild();    Node  h  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
178	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  h  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  h  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  h  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
179	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  g  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getLastChild();    Node  g  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
180	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  g  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  g  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  g  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
181	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  n  =  lhs.getLastChild();  [CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  n  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  n  =  lhs.getLastChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	31	None	add
182	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  x  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getLastChild();    Node  x  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
183	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  x  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  x  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  x  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
184	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  p  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getLastChild();    Node  p  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
185	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  p  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  p  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  p  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
186	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  c  =  lhs.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  c  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  c  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	31	None	add
187	[BUG]  [BUGGY]  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
188	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	2	replace
189	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	2	replace
190	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
191	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
192	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
193	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
194	[BUG]  [BUGGY]  Node  c  =  lhs.next();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.next();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.next();	      Node    c    =    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
195	[BUG]  [BUGGY]  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
196	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	2	replace
197	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	2	replace
198	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	16	None	replace
199	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	1	replace
200	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	1	replace
201	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	1	replace
202	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	1	replace
203	[BUG]  [BUGGY]  Node  rhs  =  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  lhs.getLastChild();	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	16	None	replace
204	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
205	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
206	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
207	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
208	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
209	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
210	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
211	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
212	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
213	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
214	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
215	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
216	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  CAR  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  CAR	11	None	add
217	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
218	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
219	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	11	None	add
220	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
221	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
222	[BUG]  [BUGGY]  if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  bad  operand  type  BitSet  for  unary  operator  '!'  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  bad  operand  type  BitSet  for  unary  operator  '!'	37	None	replace
223	[BUG]  [BUGGY]  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'	37	None	replace
224	[BUG]  [BUGGY]  NullPointer  lhs  =  lhs.getLastChild();  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  NullPointer  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	NullPointer  lhs  =  lhs.getLastChild();	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
225	[BUG]  [BUGGY]  if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  bad  operand  type  BitSet  for  unary  operator  '!'  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!kill)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  bad  operand  type  BitSet  for  unary  operator  '!'	37	None	replace
226	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
227	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
228	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
229	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
230	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
231	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
232	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
233	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
234	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
235	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
236	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
237	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
238	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(n,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(n,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  StackOverflowError  	2	2	replace
239	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(n,  gen,  kill,  conditional);  }  [FE]  StackOverflowError  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(n,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(n,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  StackOverflowError  	2	2	replace
240	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
241	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
242	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	45	None	add
243	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  ';'  expected	45	None	add
244	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
245	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
246	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
247	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
248	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  calculateGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  calculateGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  calculateGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
249	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  cannot  find  symbol  GEN  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  GEN	45	None	add
250	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  g,  kill,  conditional);  }  [CE]  cannot  find  symbol  g  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  g,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  g,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  g	45	None	add
251	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen  [CE]  ')'  expected  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen	  	non-compiled	[CE]  ')'  expected	45	None	add
252	[BUG]  [BUGGY]  Node  lhs  =  n.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  n.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  n.getLastChild();	      Node    lhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	22	None	replace
253	[BUG]  [BUGGY]  Node  lhs  =  rhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  rhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  rhs.getFirstChild();	      Node    lhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	22	None	replace
254	[BUG]  [BUGGY]  Node  lhs  =  n.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  n.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  n.getNext();	      Node    lhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	22	None	replace
255	[BUG]  [BUGGY]  Node  lhs  =  c.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  c.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  c.getFirstChild();	      Node    lhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	22	None	replace
256	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  c  =  lhs.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  c  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  c  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	23	None	add
257	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  lhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	23	None	add
258	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  c  =  lhs.getLastChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  c  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  c  =  lhs.getLastChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	23	None	add
259	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  lhs  =  lhs.getLastChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	23	None	add
260	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  rhs  =  lhs.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  rhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  rhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	23	None	add
261	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  b  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getFirstChild();    Node  b  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
262	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  b  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  b  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  b  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
263	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  h  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getFirstChild();    Node  h  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
264	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  h  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  h  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  h  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
265	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  g  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getFirstChild();    Node  g  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
266	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  g  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  g  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  g  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
267	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  n  =  lhs.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  n  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  n  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	23	None	add
268	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  p  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getFirstChild();    Node  p  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
269	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  p  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  p  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  p  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
270	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	46	1	replace
271	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	46	1	replace
272	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
273	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  lhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  lhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  lhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
274	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
275	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  b  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  b  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
276	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  b  =  lhs.getNext();  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  b  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  b  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
277	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  h  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  h  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
278	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  h  =  lhs.getNext();  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  h  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  h  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
279	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  hs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  hs  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
280	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  hs  =  lhs.getNext();  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  hs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  hs  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
281	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  n  =  lhs.getNext();  [CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  n  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  n  =  lhs.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
282	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  g  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  g  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
283	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  g  =  lhs.getNext();  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  g  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  g  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
284	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  p  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  p  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
285	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  p  =  lhs.getNext();  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  p  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  p  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
286	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  x  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  x  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
287	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  x  =  lhs.getNext();  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  x  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  x  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
288	[BUG]  [BUGGY]  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  lhs.getLastChild();	      Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	39	None	replace
289	[BUG]  [BUGGY]  Node  rhs  =  lhs.getParent();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  lhs.getParent();	      Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	39	None	replace
290	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  lhs.getParent();	      lhs    =    lhs.getNext();    	compilable	  [FE]  IllegalStateException  	34	2	replace
291	[BUG]  [BUGGY]  lhs  =  lhs.getParent();  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  lhs.getParent();	      lhs    =    lhs.getNext();    	compilable	  [FE]  IllegalStateException  	34	2	replace
292	[BUG]  [BUGGY]  lhs  =  lhs.getPrevious();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.getPrevious();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  lhs.getPrevious();	      lhs    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
293	[BUG]  [BUGGY]  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
294	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
295	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
296	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
297	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
298	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
299	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
300	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
301	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
302	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  rhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  rhs.getNext();	      Node    c    =    lhs.getNext();    	compilable	  [FE]  IllegalStateException  	26	1	replace
303	[BUG]  [BUGGY]  Node  c  =  rhs.getNext();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  rhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  rhs.getNext();	      Node    c    =    lhs.getNext();    	compilable	  [FE]  IllegalStateException  	26	1	replace
304	[BUG]  [BUGGY]  Node  c  =  lhs.getNext()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getNext()  +  1;  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getNext()  +  1;	      Node    c    =    lhs.getNext();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	26	None	replace
305	[BUG]  [BUGGY]  Node  c  =  lhs.getChildCount();  [CE]  incompatible  types  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getChildCount();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getChildCount();	      Node    c    =    lhs.getNext();    	non-compiled	[CE]  incompatible  types	26	None	replace
306	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
307	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
308	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
309	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
310	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
311	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
312	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
313	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
314	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  CAR  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  cannot  find  symbol  CAR	17	None	add
315	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
316	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
317	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
318	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
319	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.LAR)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  LAR  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.LAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.LAR)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  cannot  find  symbol  LAR	17	None	add
320	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BAR)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  BAR  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.BAR)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  cannot  find  symbol  BAR	17	None	add
321	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
322	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
323	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
324	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
325	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
326	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
327	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
328	[BUG]  [BUGGY]  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
329	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
330	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
331	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
332	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
333	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
334	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
335	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
336	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
337	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
338	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
339	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
340	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
341	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
342	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
343	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
344	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
345	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
346	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
347	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.LONG)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  LONG  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.LONG)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.LONG)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  LONG	43	None	add
348	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
349	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
350	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	43	None	add
351	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
352	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
353	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
354	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
355	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	15	None	add
356	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
357	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
358	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
359	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
360	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  ';'  expected	15	None	add
361	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
362	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
363	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
364	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
365	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
366	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
367	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
368	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
369	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();	  	compilable	  [FE]  NullPointerException  	47	2	add
370	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();	  	compilable	  [FE]  NullPointerException  	47	2	add
371	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	47	2	add
372	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	47	2	add
373	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
374	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  gen,  kill,  conditional);  }  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
375	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
376	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [CE]  'else'  without  'if'  [FE]              NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
377	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  gen);  [CE]  'else'  without  'if'  [FE]                NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  addToSetIfLocal(rhs,  gen);	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
378	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  c  =  lhs.getLastChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);  [CE]  'else'  without  'if'  [FE]                  NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  c  =  lhs.getLastChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  c  =  lhs.getLastChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
379	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.GETPROP);  [CE]  'else'  without  'if'  [FE]                    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
380	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [CE]  'else'  without  'if'  [FE]                      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  if(NodeUtil.isVar(lhs))  {  Node  rhs  =  lhs.getLastChild();  Preconditions.checkState(rhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
381	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
382	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
383	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
384	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
385	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
386	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
387	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
388	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
389	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
390	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
391	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
392	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
393	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
394	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
395	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	13	None	add
396	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
397	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
398	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	13	None	add
399	[BUG]  [BUGGY]  Node  lhs  =  node.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  node.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  node.getFirstChild();	      Node    lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	40	None	replace
400	[BUG]  [BUGGY]  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  not  a  statement	6	None	replace
401	[BUG]  [BUGGY]  lhs.setType(Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.setType(Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.setType(Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
402	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
403	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
404	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
405	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
406	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
407	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
408	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
409	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
410	[BUG]  [BUGGY]  Node  rhs  =  n.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  n.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  n.getLastChild();	      Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	27	None	replace
411	[BUG]  [BUGGY]  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  n.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  n.getNext();	      Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	27	None	replace
412	[BUG]  [BUGGY]  Node  rhs  =  c.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  c.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  c.getFirstChild();	      Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	27	None	replace
413	[BUG]  [BUGGY]  Node  rhs  =  n.getChildCount();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  n.getChildCount();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  n.getChildCount();	      Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	27	None	replace
414	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
415	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
416	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
417	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
418	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
419	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
420	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
421	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
422	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
423	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
424	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
425	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
426	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  If(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  If(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    If(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  ';'  expected	9	None	add
427	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
428	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
429	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.LAME)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  LAME  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.LAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.LAME)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  cannot  find  symbol  LAME	9	None	add
430	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
431	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
432	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
433	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
434	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
435	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
436	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
437	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
438	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
439	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
440	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
441	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
442	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  If(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  If(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    If(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
443	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  kill);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	5	None	add
444	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
445	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
446	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  n.getFirstChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	48	2	replace
447	[BUG]  [BUGGY]  lhs  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  n.getFirstChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	48	2	replace
448	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  rhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  rhs.getFirstChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  NullPointerException  	48	2	replace
449	[BUG]  [BUGGY]  lhs  =  rhs.getFirstChild();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  rhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  rhs.getFirstChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  NullPointerException  	48	2	replace
450	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  rhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  rhs.getLastChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  NullPointerException  	48	2	replace
451	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  rhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  rhs.getLastChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  NullPointerException  	48	2	replace
452	[BUG]  [BUGGY]  lhs  =  lhs.getPreviousChild();  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.getPreviousChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  lhs.getPreviousChild();	      lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
453	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  gen);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
454	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  gen);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  gen);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
455	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getString());  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getString());	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
456	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getString());  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getString());  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getString());	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
457	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()!=  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	2	replace
458	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()!=  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	2	replace
459	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
460	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
461	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
462	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
463	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
464	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
465	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
466	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
467	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getFirstChild());  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getFirstChild());	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
468	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getFirstChild());  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getFirstChild());  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs.getFirstChild());	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
469	[BUG]  [BUGGY]  Node  lhs  =  rhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  rhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  rhs.getNext();	      Node    lhs    =    lhs.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	28	None	replace
470	[BUG]  [BUGGY]  Node  lhs  =  c.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  c.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  c.getNext();	      Node    lhs    =    lhs.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	28	None	replace
471	[BUG]  [BUGGY]  Node  lhs  =  lhs.getParent();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  lhs.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  lhs.getParent();	      Node    lhs    =    lhs.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	28	None	replace
472	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
473	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
474	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
475	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
476	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
477	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
478	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
479	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  gen);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
480	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  gen);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  gen);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
481	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunction(lhs));  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunction(lhs));	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
482	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunction(lhs));  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunction(lhs));  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunction(lhs));	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
483	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
484	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
485	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isExpressionNode(lhs));  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isExpressionNode(lhs));	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
486	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isExpressionNode(lhs));  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isExpressionNode(lhs));  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!NodeUtil.isExpressionNode(lhs));	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
487	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
488	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	1	replace
489	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Node  lhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	1	None	add
490	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  rhs  =  lhs.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  rhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Node  rhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	1	None	add
491	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  rhs  =  n.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Node  rhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Node  rhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	1	None	add
492	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkNotNull(lhs);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    Preconditions.checkNotNull(lhs);	  	compilable	  [FE]  IllegalStateException  	1	1	add
493	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkNotNull(lhs);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkNotNull(lhs);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Preconditions.checkNotNull(lhs);	  	compilable	  [FE]  IllegalStateException  	1	1	add
494	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  kill);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  kill);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	9	None	add
495	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs);  }  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs);  }	  	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	9	None	add
496	[BUG]  [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  liveSet  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	non-compiled	[CE]  cannot  find  symbol  liveSet	2	None	replace
497	[BUG]  [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  kill,  conditional);  }  [CE]  cannot  find  symbol  liveSet  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	non-compiled	[CE]  cannot  find  symbol  liveSet	2	None	replace
498	[BUG]  [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  [CE]  cannot  find  symbol  liveSet  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }	  addToSetIfLocal(lhs,    gen);    	non-compiled	[CE]  cannot  find  symbol  liveSet	2	None	replace
499	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  [CE]  'else'  without  'if'  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
500	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  createGenKill(rhs,  gen,  kill,  conditional);  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  createGenKill(rhs,  gen,  kill,  conditional);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  createGenKill(rhs,  gen,  kill,  conditional);	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
501	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  [CE]  'else'  without  'if'  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
502	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  gen);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  [CE]  'else'  without  'if'  [FE]          NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  gen);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  gen);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
503	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  'else'  without  'if'  [FE]            NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
504	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  [CE]  'else'  without  'if'  [FE]              NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
505	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  renderKill(rhs,  gen,  kill,  conditional);  [CE]  'else'  without  'if'  [FE]                NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  renderKill(rhs,  gen,  kill,  conditional);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  renderKill(rhs,  gen,  kill,  conditional);	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
506	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  g,  kill,  conditional);  [CE]  'else'  without  'if'  [FE]                  NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  g,  kill,  conditional);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  g,  kill,  conditional);	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
507	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional  [CE]  'else'  without  'if'  [FE]                    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
508	[BUG]  [BUGGY]  if(!remove)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  remove  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!remove)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!remove)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  remove	38	None	replace
509	[BUG]  [BUGGY]  if(!build)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  build  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!build)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!build)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  build	38	None	replace
510	[BUG]  [BUGGY]  if(!removed)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  removed  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!removed)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!removed)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  removed	38	None	replace
511	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  kill);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  kill);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	17	None	add
512	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  ARGUMENT  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  cannot  find  symbol  ARGUMENT	17	None	add
513	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()!=  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()!=  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
514	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()!=  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()!=  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()!=  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
515	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	11	None	add
516	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	11	None	add
517	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	11	None	add
518	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
519	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
520	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
521	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
522	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	8	None	replace
523	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	7	None	add
524	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	7	None	add
525	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	7	None	add
526	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  n.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    Node  rhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	7	None	add
527	[BUG]  [BUGGY]  Node  lhs  =  n.getFirstChild().getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  n.getFirstChild().getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  n.getFirstChild().getNext();	      Node    lhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	22	None	replace
528	[BUG]  [BUGGY]  lhs.setType(Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.setType(Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.setType(Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
529	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
530	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
531	[BUG]  [BUGGY]  Node  lhs  =  lhs.getPrevious();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  lhs.getPrevious();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  lhs.getPrevious();	      Node    lhs    =    lhs.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	28	None	replace
532	[BUG]  [BUGGY]  Node  lhs  =  liveSet.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  liveSet.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  liveSet.getNext();	      Node    lhs    =    lhs.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	28	None	replace
533	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
534	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
535	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
536	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
537	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	41	None	add
538	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	41	None	add
539	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	41	None	add
540	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	41	None	add
541	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
542	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
543	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  preconditions  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	29	None	add
544	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);	  	compilable	  [FE]  IllegalStateException  	29	2	add
545	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);	  	compilable	  [FE]  IllegalStateException  	29	2	add
546	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  preconditions  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	29	None	add
547	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	29	None	add
548	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
549	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
550	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isGetProp(lhs));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	42	2	replace
551	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(lhs));  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isGetProp(lhs));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	42	2	replace
552	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isVar(lhs)));  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isVar(lhs)));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isVar(lhs)));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
553	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isGetProp(lhs)));  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isGetProp(lhs)));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isGetProp(lhs)));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
554	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isName(lhs)));  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isName(lhs)));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isName(lhs)));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
555	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.NAME));  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.NAME));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.NAME));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
556	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION));  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
557	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isAssignmentOp(lhs)));  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isAssignmentOp(lhs)));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isTrue(lhs.getType()  ==  Token.FUNCTION  ||  NodeUtil.isAssignmentOp(lhs)));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
558	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.STRING);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.STRING);	  	compilable	  [FE]  IllegalStateException  	35	2	add
559	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.STRING);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.STRING);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.STRING);	  	compilable	  [FE]  IllegalStateException  	35	2	add
560	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	35	None	add
561	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node  c  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	35	1	add
562	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node  c  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	35	1	add
563	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkNotNull(lhs);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkNotNull(lhs);	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	46	1	replace
564	[BUG]  [BUGGY]  Preconditions.checkNotNull(lhs);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkNotNull(lhs);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkNotNull(lhs);	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	46	1	replace
565	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
566	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
567	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
568	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  [CE]  ';'  expected  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
569	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
570	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
571	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
572	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
573	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
574	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.CALL);  Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
575	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  c  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	25	None	add
576	[BUG]  [BUGGY]  lhs.setType(Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.setType(Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.setType(Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
577	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	14	1	replace
578	[BUG]  [BUGGY]  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	14	1	replace
579	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
580	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
581	[BUG]  [BUGGY]  Node  c  =  lhs.getPrevious();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getPrevious();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getPrevious();	      Node    c    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
582	[BUG]  [BUGGY]  Node  lhs  =  liveSet.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  liveSet.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  liveSet.getFirstChild();	      Node    lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	40	None	replace
583	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	45	None	add
584	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	45	None	add
585	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  n.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    Node  rhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	45	None	add
586	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	45	None	add
587	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	45	None	add
588	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  lhs.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    Node  rhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	45	None	add
589	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	3	None	add
590	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	3	None	add
591	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	3	None	add
592	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
593	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.GETPROP);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
594	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  kill!=  null);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  kill!=  null);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
595	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  kill!=  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  kill!=  null);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  kill!=  null);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
596	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  hs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getFirstChild();    Node  hs  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
597	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  hs  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  hs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  hs  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
598	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
599	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
600	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
601	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
602	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	15	None	add
603	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	15	None	add
604	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  n.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  Node  rhs  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    Node  rhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	15	None	add
605	[BUG]  [BUGGY]  Preconditions.checkState(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
606	[BUG]  [BUGGY]  if(!live)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  live  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!live)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!live)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol  live	37	None	replace
607	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!liveSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
608	[BUG]  [BUGGY]  Preconditions.checkState(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(!liveSet)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	37	None	replace
609	[BUG]  [BUGGY]  Node  rhs  =  n.getFirstChild().getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  n.getFirstChild().getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  n.getFirstChild().getNext();	      Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	27	None	replace
610	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.EXPR_RESULT);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
611	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.EXPR_RESULT);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
612	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
613	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
614	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!n.hasChildren());  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!n.hasChildren());	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
615	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!n.hasChildren());  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!n.hasChildren());  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!n.hasChildren());	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
616	[BUG]  [BUGGY]  Node  c  =  lhs.getfirstChild();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getfirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getfirstChild();	      Node    c    =    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
617	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  hs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getLastChild();    Node  hs  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
618	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  hs  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  hs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  hs  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
619	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  lhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	31	None	add
620	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	43	None	add
621	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	43	None	add
622	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
623	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
624	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
625	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
626	[BUG]  [BUGGY]  Node  c  =  n.getCurrentNode();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getCurrentNode();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getCurrentNode();	      Node    c    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
627	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getParent();	      Node    c    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	50	1	replace
628	[BUG]  [BUGGY]  Node  c  =  n.getParent();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getParent();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getParent();	      Node    c    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	50	1	replace
629	[BUG]  [BUGGY]  Node  c  =  n.getChildCount();  [CE]  incompatible  types  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getChildCount();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getChildCount();	      Node    c    =    n.getFirstChild();    	non-compiled	[CE]  incompatible  types	50	None	replace
630	[BUG]  [BUGGY]  lhs.setType(Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.setType(Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.setType(Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	44	None	replace
631	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
632	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
633	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
634	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
635	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
636	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
637	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	44	None	replace
638	[BUG]  [BUGGY]  Node  rhs  =  lhs.getChildCount();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  lhs.getChildCount();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  lhs.getChildCount();	      Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	39	None	replace
639	[BUG]  [BUGGY]  lhs.setType(Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs.setType(Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.setType(Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
640	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
641	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
642	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  kill);	  	compilable	  [FE]  NullPointerException  	47	2	add
643	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  kill);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  kill);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  kill);	  	compilable	  [FE]  NullPointerException  	47	2	add
644	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  NullPointerException  	47	2	add
645	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  NullPointerException  	47	2	add
646	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  Node  lhs  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    Node  lhs  =  lhs.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	47	None	add
647	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  NullPointerException  	47	2	add
648	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  NullPointerException  	47	2	add
649	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  NullPointerException  	47	2	add
650	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  gen);  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  NullPointerException  	47	2	add
651	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  NullPointerException  	47	2	add
652	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  NullPointerException  	47	2	add
653	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  NullPointerException  	47	2	add
654	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  NullPointerException  [FE]                NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  NullPointerException  	47	2	add
655	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  NullPointerException  	47	2	add
656	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [FE]  NullPointerException  [FE]                  NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  NullPointerException  	47	2	add
657	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
658	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
659	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  r  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    n.getFirstChild();    Node  r  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
660	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  r  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  r  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  r  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
661	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.GETPROP  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	1	replace
662	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	16	1	replace
663	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	16	None	replace
664	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.SEMI)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.SEMI)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
665	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.SEMI)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.SEMI)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.SEMI)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	9	1	add
666	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  ARGUMENT  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  cannot  find  symbol  ARGUMENT	9	None	add
667	[BUG]  [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  lhs.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  lhs.removeFirstChild();	      Node    rhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	39	None	replace
668	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  lhs.removeFirstChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  NullPointerException  	48	2	replace
669	[BUG]  [BUGGY]  lhs  =  lhs.removeFirstChild();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  lhs  =  lhs.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  lhs.removeFirstChild();	      lhs    =    lhs.getFirstChild();    	compilable	  [FE]  NullPointerException  	48	2	replace
670	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  gen);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  gen);	  	compilable	  [FE]  NullPointerException  	19	2	add
671	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  gen);  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  gen);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  gen);	  	compilable	  [FE]  NullPointerException  	19	2	add
672	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c);  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c);	  	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	19	None	add
673	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  addToSetIfLocal(c,  gen);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node  c  =  lhs.getNext();  addToSetIfLocal(c,  gen);	  	compilable	  [FE]  NullPointerException  	19	2	add
674	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  addToSetIfLocal(c,  gen);  [FE]  NullPointerException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  addToSetIfLocal(c,  gen);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node  c  =  lhs.getNext();  addToSetIfLocal(c,  gen);	  	compilable	  [FE]  NullPointerException  	19	2	add
675	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
676	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	17	1	add
677	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  If(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  If(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    If(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	non-compiled	[CE]  ';'  expected	17	None	add
678	[BUG]  [BUGGY]  Node  lhs  =  n.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  n.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  n.removeFirstChild();	      Node    lhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	22	None	replace
679	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
680	[BUG]  [BUGGY]  if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
681	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
682	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
683	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
684	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
685	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
686	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	6	1	replace
687	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
688	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
689	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
690	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
691	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	13	None	add
692	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
693	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	13	1	add
694	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  gen  =  lhs.getLastChild();  [CE]  variable  gen  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  gen  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  gen  =  lhs.getLastChild();	  	non-compiled	[CE]  variable  gen  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	31	None	add
695	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  r  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getLastChild();    Node  r  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
696	[BUG]  [BUGGY]      Node  c  =  lhs.getLastChild();  Node  r  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getLastChild();  Node  r  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getLastChild();    Node  r  =  lhs.getLastChild();	  	compilable	  [FE]  IllegalStateException  	31	1	add
697	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkArgument(lhs.getType()  ==  Token.GETPROP);	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	16	2	replace
698	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.GETPROP);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.GETPROP);	  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	16	2	replace
699	[BUG]  [BUGGY]  Node  lhs  =  lhs.removeFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  lhs.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  lhs.removeFirstChild();	      Node    lhs    =    lhs.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	28	None	replace
700	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	37	1	replace
701	[BUG]  [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	37	1	replace
702	[BUG]  [BUGGY]  if(!test)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  test  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!test)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!test)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol  test	37	None	replace
703	[BUG]  [BUGGY]  if(!testSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  testSet  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!testSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!testSet)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol  testSet	37	None	replace
704	[BUG]  [BUGGY]  while(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  'else'  without  'if'  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  while(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	while(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
705	[BUG]  [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  cannot  find  symbol  GEN  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol  GEN	37	None	replace
706	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
707	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
708	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
709	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
710	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
711	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	43	1	add
712	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkArgument(NodeUtil.isName(lhs));	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	46	1	replace
713	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(lhs));  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(NodeUtil.isName(lhs));	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	46	1	replace
714	[BUG]  [BUGGY]  Node  lhs  =  jsScope.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  jsScope.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  jsScope.getFirstChild();	      Node    lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	40	None	replace
715	[BUG]  [BUGGY]  Node  lhs  =  t.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  lhs  =  t.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  t.getFirstChild();	      Node    lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	40	None	replace
716	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
717	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
718	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
719	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
720	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
721	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	3	1	add
722	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	3	None	add
723	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isImmutableValue(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isImmutableValue(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
724	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isImmutableValue(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isImmutableValue(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isImmutableValue(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
725	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
726	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
727	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
728	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isVar(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	41	1	add
729	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
730	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
731	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
732	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
733	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
734	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
735	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
736	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
737	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  Node  c  =  lhs.getFirstChild();  if(c!=  null)  {  addToSetIfLocal(c);  }  [CE]  orphaned  case  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  Node  c  =  lhs.getFirstChild();  if(c!=  null)  {  addToSetIfLocal(c);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isName(lhs))  {  Node  c  =  lhs.getFirstChild();  if(c!=  null)  {  addToSetIfLocal(c);  }	  	non-compiled	[CE]  orphaned  case	1	None	add
738	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
739	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
740	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
741	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	1	1	add
742	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  IllegalStateException  	1	2	add
743	[BUG]  [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  addToSetIfLocal(lhs,  gen);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	addToSetIfLocal(lhs,    gen);    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  IllegalStateException  	1	2	add
744	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.NAME);	  	compilable	  [FE]  NullPointerException  	35	2	add
745	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.NAME);  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.NAME);	  	compilable	  [FE]  NullPointerException  	35	2	add
746	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	35	1	add
747	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  addToSetIfLocal(lhs,  gen);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	35	1	add
748	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  preconditions  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	35	None	add
749	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	35	1	add
750	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	35	1	add
751	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  preconditions  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	35	None	add
752	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	35	1	add
753	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	35	1	add
754	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.ARGUMENT);  [CE]  cannot  find  symbol  ARGUMENT  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.ARGUMENT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  preconditions.checkState(lhs.getType()  ==  Token.ARGUMENT);	  	non-compiled	[CE]  cannot  find  symbol  ARGUMENT	35	None	add
755	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
756	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
757	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
758	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
759	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.SETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.SETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
760	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.SETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.SETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.SETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
761	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
762	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	15	1	add
763	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
764	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
765	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
766	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	5	1	add
767	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs);  }  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs);  }	  	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	5	None	add
768	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
769	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
770	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
771	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
772	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
773	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  ||  lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	12	1	replace
774	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkArgument(lhs.getType()  ==  Token.VAR);	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	12	2	replace
775	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.VAR);  [FE]  IllegalArgumentException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.VAR);	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	12	2	replace
776	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  t  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getFirstChild();    Node  t  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
777	[BUG]  [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  t  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getFirstChild();  Node  t  =  lhs.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getFirstChild();    Node  t  =  lhs.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	23	1	add
778	[BUG]  [BUGGY]  if(!isLiveSet)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  isLiveSet  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!isLiveSet)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!isLiveSet)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  isLiveSet	38	None	replace
779	[BUG]  [BUGGY]  if(!binary)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  binary  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!binary)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!binary)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  binary	38	None	replace
780	[BUG]  [BUGGY]  if(!left)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  left  [FE]              IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(!left)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!left)  {  addToSetIfLocal(lhs,  kill);  }	  if(!liveSet)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  left	38	None	replace
781	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  t  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    n.getFirstChild();    Node  t  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
782	[BUG]  [BUGGY]      Node  c  =  n.getFirstChild();  Node  t  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  n.getFirstChild();  Node  t  =  n.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    n.getFirstChild();    Node  t  =  n.getFirstChild();	  	compilable	  [FE]  IllegalStateException  	49	1	add
783	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
784	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
785	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
786	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
787	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()!=  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()!=  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
788	[BUG]  [BUGGY]  if(lhs.getType()!=  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()!=  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()!=  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
789	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
790	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR  &&  kill!=  null)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
791	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
792	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	18	1	replace
793	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
794	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
795	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
796	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	45	1	add
797	[BUG]  [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getNext();  lhs  =  lhs.getNext()  +  1;  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getNext();    lhs  =  lhs.getNext()  +  1;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	33	None	add
798	[BUG]  [BUGGY]  Node  c  =  lhs.getQualifiedName();  [CE]  incompatible  types  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getQualifiedName();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getQualifiedName();	      Node    c    =    lhs.getNext();    	non-compiled	[CE]  incompatible  types	26	None	replace
799	[BUG]  [BUGGY]  Node  c  =  lhs.getOwnerDocument();  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getOwnerDocument();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getOwnerDocument();	      Node    c    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
800	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()!=  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()!=  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
801	[BUG]  [BUGGY]  if(lhs.getType()!=  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()!=  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()!=  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
802	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "__ "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "__ "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
803	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "__ "))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "__ "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "__ "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
804	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
805	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
806	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "_ "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "_ "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
807	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "_ "))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "_ "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().endsWith( "_ "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
808	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
809	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	10	1	replace
810	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
811	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
812	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
813	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	11	1	add
814	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalArgumentException  	30	2	replace
815	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalArgumentException  	30	2	replace
816	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.EXPR_RESULT);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
817	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.EXPR_RESULT);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.EXPR_RESULT);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
818	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
819	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.VAR);	      Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	30	2	replace
820	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	14	1	replace
821	[BUG]  [BUGGY]  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(rhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	14	1	replace
822	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  r  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  r  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
823	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  r  =  lhs.getNext();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  r  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  r  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
824	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  t  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Node    c    =    lhs.getNext();    Node  t  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
825	[BUG]  [BUGGY]      Node  c  =  lhs.getNext();  Node  t  =  lhs.getNext();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Node  c  =  lhs.getNext();  Node  t  =  lhs.getNext();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Node    c    =    lhs.getNext();    Node  t  =  lhs.getNext();	  	compilable	  [FE]  IllegalStateException  	25	1	add
826	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
827	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalArgumentException  	36	1	replace
828	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.VAR);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
829	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.VAR);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.VAR);	      Preconditions.checkState(lhs.getType()    ==    Token.NAME);    	compilable	  [FE]  IllegalStateException  	36	1	replace
830	[BUG]  [BUGGY]  Node  c  =  n.getOwnerChild();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  n.getOwnerChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getOwnerChild();	      Node    c    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
831	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  NullPointerException  	47	2	add
832	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  NullPointerException  	47	2	add
833	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  lhs  =  lhs.getLastChild();  [CE]  'else'  without  'if'  [FE]      NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  lhs  =  lhs.getLastChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  }  else  {  lhs  =  lhs.getLastChild();	  	non-compiled	[CE]  'else'  without  'if'	47	None	add
834	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.THIS);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.THIS);	  	compilable	  [FE]  NullPointerException  	47	2	add
835	[BUG]  [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.THIS);  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.THIS);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        lhs    =    lhs.getFirstChild();    lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.THIS);	  	compilable	  [FE]  NullPointerException  	47	2	add
836	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
837	[BUG]  [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
838	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
839	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	compilable	  [FE]  IllegalStateException  	2	1	replace
840	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  kill,  conditional);  }  [CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  kill,  conditional);  }	  addToSetIfLocal(lhs,    gen);    	non-compiled	[CE]  method  computeGenKill  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	2	None	replace
841	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
842	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
843	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.SCRIPT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.SCRIPT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
844	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.SCRIPT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.SCRIPT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.SCRIPT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
845	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
846	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.CATCH)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	44	1	replace
847	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  lhs.removeFirstChild();	      Node    c    =    lhs.getLastChild();    	compilable	  [FE]  IllegalStateException  	32	1	replace
848	[BUG]  [BUGGY]  Node  c  =  lhs.removeFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.removeFirstChild();	      Node    c    =    lhs.getLastChild();    	compilable	  [FE]  IllegalStateException  	32	1	replace
849	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.cloneTree();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  lhs.cloneTree();	      Node    c    =    lhs.getLastChild();    	compilable	  [FE]  IllegalStateException  	32	1	replace
850	[BUG]  [BUGGY]  Node  c  =  lhs.cloneTree();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.cloneTree();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.cloneTree();	      Node    c    =    lhs.getLastChild();    	compilable	  [FE]  IllegalStateException  	32	1	replace
851	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
852	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
853	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
854	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
855	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
856	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	4	1	replace
857	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	29	None	add
858	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
859	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node  c  =  lhs.getFirstChild();  Preconditions.checkState(c.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
860	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
861	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkArgument(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	29	2	add
862	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  preconditions  [FE]          IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	29	None	add
863	[BUG]  [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]      Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node  lhs  =  lhs.getNext();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	29	None	add
864	[BUG]  [BUGGY]  Node  rhs  =  n.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  n.removeFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  n.removeFirstChild();	      Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	27	None	replace
865	[BUG]  [BUGGY]  Node  rhs  =  jsScope.getFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  rhs  =  jsScope.getFirstChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  jsScope.getFirstChild();	      Node    rhs    =    n.getFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	27	None	replace
866	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
867	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	8	1	replace
868	[BUG]  [BUGGY]  Node  c  =  lhs.getOwnerChild();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Node  c  =  lhs.getOwnerChild();  [BUGGY]    addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getOwnerChild();	      Node    c    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
869	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkArgument(NodeUtil.isGetProp(lhs));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	42	2	replace
870	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(lhs));  [FE]  IllegalArgumentException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(lhs));  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(NodeUtil.isGetProp(lhs));	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalArgumentException  	42	2	replace
871	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
872	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
873	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
874	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	7	1	add
875	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  ARGUMENT  [FE]        IllegalStateException    [CONTEXT]    computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }    [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]    addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.ARGUMENT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  ARGUMENT	7	None	add
