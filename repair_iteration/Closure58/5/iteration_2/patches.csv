bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
2	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
3	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
4	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
6	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
7	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
8	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
9	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
10	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
11	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
12	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
13	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
14	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
15	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
16	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
17	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
18	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
19	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
20	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	312	1	add
21	[BUG]  [BUGGY]  while(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  'else'  without  'if'  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  while(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	while(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  if(!conditional)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    GEN,    kill,    conditional);    }    	non-compiled	[CE]  'else'  without  'if'	705	None	replace
22	[BUG]  [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  cannot  find  symbol  GEN  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!conditional)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!conditional)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  if(!conditional)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    GEN,    kill,    conditional);    }    	non-compiled	[CE]  cannot  find  symbol  GEN	705	None	replace
23	[BUG]  [BUGGY]  while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  orphaned  case  [FE]                        IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  if(!conditional)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    GEN,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	705	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  &&!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  if(!conditional)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    GEN,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	705	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  if(!conditional)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    GEN,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	705	None	replace
26	[BUG]  [BUGGY]  while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]                              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }	  if(!conditional)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    GEN,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	705	None	replace
27	[BUG]  [BUGGY]  while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]                                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	while(lhs.getType()  ==  Token.FUNCTION)  {  if(!conditional)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!conditional)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    GEN,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	705	None	replace
28	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()    ==    Token.OBJECTLIT)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	344	None	replace
29	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()    ==    Token.OBJECTLIT)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	344	None	replace
30	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()    ==    Token.CALL)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	349	None	replace
31	[BUG]  [BUGGY]  NodeUtil.isVar(lhs)&&  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  not  a  statement  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  NodeUtil.isVar(lhs)&&  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	NodeUtil.isVar(lhs)&&  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  not  a  statement	223	None	replace
32	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	223	None	replace
33	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	223	None	replace
34	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  }  [CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'	223	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
36	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  }  [CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'  [FE]                        IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  if(!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  bad  operand  type  Set<Var>  for  unary  operator  '!'	223	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  &&  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  &&  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  &&  escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||!escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
39	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]                              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(escaped)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(!escaped)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	223	None	replace
40	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  orphaned  case	419	None	replace
41	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  orphaned  case	419	None	replace
42	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  orphaned  case	419	None	replace
43	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
44	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
45	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
46	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
47	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
48	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
49	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
50	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
51	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
52	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
53	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
54	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
55	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
56	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
57	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
58	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
59	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
60	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.FUNCTION)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	718	1	add
61	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  lhs.getFirstChild();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
62	[BUG]  [BUGGY]  Node  c  =  lhs.getFirstChild();  Node  t  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getFirstChild();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
63	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getLastChild();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getLastChild();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
64	[BUG]  [BUGGY]  Node  c  =  n.getLastChild();  Node  t  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getLastChild();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getLastChild();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
65	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  n.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getFirstChild();  Node  t  =  n.getLastChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
66	[BUG]  [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  n.getLastChild();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  n.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getFirstChild();  Node  t  =  n.getLastChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
67	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getFirstChild();  Node  t  =  lhs.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
68	[BUG]  [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getFirstChild();  Node  t  =  lhs.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
69	[BUG]  [BUGGY]  Node  c  =  n.getCurrentNode();  Node  t  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getCurrentNode();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getCurrentNode();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	782	None	replace
70	[BUG]  [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  n.getTree();  [CE]  cannot  find  symbol  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  Node  t  =  n.getTree();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getFirstChild();  Node  t  =  n.getTree();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	782	None	replace
71	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getParent();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getParent();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
72	[BUG]  [BUGGY]  Node  c  =  n.getParent();  Node  t  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getParent();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getParent();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
73	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  n.getNext();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
74	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  t  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  t  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getNext();  Node  t  =  n.getFirstChild();	          Node    c    =    n.getFirstChild();    Node    t    =    n.getFirstChild();    	compilable	  [FE]  IllegalStateException  	782	1	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  [CE]  ';'  expected  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	636	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	636	None	replace
77	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	636	1	replace
78	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	636	1	replace
79	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP);	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	636	2	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  ||  lhs.getType()  ==  Token.GETPROP);	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	636	2	replace
81	[BUG]  [BUGGY]  lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  not  a  statement  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  not  a  statement	636	None	replace
82	[BUG]  [BUGGY]  lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  [CE]  not  a  statement  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  not  a  statement	636	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	636	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.BLOCK  &&  lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.BLOCK    ||    lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	636	None	replace
85	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
86	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
87	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	51	2	add
88	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	51	2	add
89	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
90	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
91	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	51	2	add
92	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	51	2	add
93	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  preconditions  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	51	None	add
94	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	51	2	add
95	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	51	2	add
96	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [CE]  cannot  find  symbol  preconditions  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	51	None	add
97	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
98	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
99	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
100	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	51	2	add
101	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.RETURN);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.RETURN);	  	compilable	  [FE]  IllegalStateException  	51	2	add
102	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.RETURN);  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.RETURN);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.GETPROP);    Preconditions.checkState(lhs.getType()  ==  Token.RETURN);	  	compilable	  [FE]  IllegalStateException  	51	2	add
103	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	1	add
104	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	1	add
105	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	463	None	add
106	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
107	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
108	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    NodeUtil.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  cannot  find  symbol	463	None	add
109	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
110	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.VAR  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
111	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	463	1	add
112	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	463	1	add
113	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
114	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
115	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
116	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
117	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	463	1	add
118	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	463	1	add
119	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.CALL  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.CALL  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
120	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.CALL  ||  rhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  rhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.CALL  ||  rhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    rhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.CALL  ||  rhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	463	2	add
121	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs!=  null);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs!=  null);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	1	replace
122	[BUG]  [BUGGY]  Preconditions.checkState(lhs!=  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs!=  null);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs!=  null);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	1	replace
123	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkNotNull(rhs);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkNotNull(rhs);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	1	replace
124	[BUG]  [BUGGY]  Preconditions.checkNotNull(rhs);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkNotNull(rhs);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkNotNull(rhs);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	1	replace
125	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	2	replace
126	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	2	replace
127	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs  ==  null);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs  ==  null);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	2	replace
128	[BUG]  [BUGGY]  Preconditions.checkState(lhs  ==  null);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs  ==  null);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs  ==  null);	  Preconditions.checkNotNull(lhs);    	compilable	  [FE]  IllegalStateException  	564	2	replace
129	[BUG]  [BUGGY]  Node  c  =  n.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getFirstChild();  Node  lhs  =  lhs.getLastChild();	          Node    c    =    lhs.getFirstChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	259	None	replace
130	[BUG]  [BUGGY]  node  =  lhs.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [CE]  cannot  find  symbol  node  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  node  =  lhs.getFirstChild();  Node  lhs  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	node  =  lhs.getFirstChild();  Node  lhs  =  lhs.getLastChild();	          Node    c    =    lhs.getFirstChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	259	None	replace
131	[BUG]  [BUGGY]  Node  c  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getFirstChild();  Node  rhs  =  lhs.getLastChild();	          Node    c    =    lhs.getFirstChild();    Node    lhs    =    lhs.getLastChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	259	None	replace
132	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getLastChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	1	replace
133	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getLastChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	1	replace
134	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  n.getFirstChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	1	replace
135	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  n.getFirstChild();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  n.getFirstChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	1	replace
136	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	1	replace
137	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getNext();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	1	replace
138	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  c  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  c  =  lhs.getLastChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	2	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  c  =  lhs.getLastChild();  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  c  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()!=  Token.NAME);  Node  c  =  lhs.getLastChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	2	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getCurrentNode();  [CE]  cannot  find  symbol  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getCurrentNode();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getCurrentNode();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	562	None	replace
141	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	2	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  c  =  lhs.getFirstChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalStateException  	562	2	replace
143	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalArgumentException  	562	1	replace
144	[BUG]  [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  [FE]  IllegalArgumentException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkArgument(lhs.getType()  ==  Token.NAME);  Node  c  =  lhs.getFirstChild();	          Preconditions.checkState(lhs.getType()    ==    Token.NAME);    Node    c    =    lhs.getFirstChild();    	compilable	  [FE]  IllegalArgumentException  	562	1	replace
145	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
146	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
147	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
148	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
149	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
150	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
151	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
152	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
153	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
154	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
155	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
156	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
157	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
158	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
159	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
160	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
161	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.  [CE]  ')'  expected  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.	  	non-compiled	[CE]  ')'  expected	675	None	add
162	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
163	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.VAR)        {        addToSetIfLocal(lhs,        kill);        }        if(lhs.getType()    ==    Token.VOID)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  if(lhs.getType()  ==  Token.VOID)  {  addToSetIfLocal(lhs,  kill);  }	  	compilable	  [FE]  IllegalStateException  	675	1	add
164	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
165	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
166	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
167	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
168	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
169	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
170	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.BAR)  {  addToSetIfLocal(lhs,  gen);  }  [CE]  cannot  find  symbol  BAR  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.BAR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.BAR)  {  addToSetIfLocal(lhs,  gen);  }	  	non-compiled	[CE]  cannot  find  symbol  BAR	783	None	add
171	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
172	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
173	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  gen);  }  [CE]  cannot  find  symbol  CAR  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.CAR)  {  addToSetIfLocal(lhs,  gen);  }	  	non-compiled	[CE]  cannot  find  symbol  CAR	783	None	add
174	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
175	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.FOR)  {  addToSetIfLocal(lhs,  gen);  }	  	compilable	  [FE]  IllegalStateException  	783	1	add
176	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.LAR)  {  addToSetIfLocal(lhs,  gen);  }  [CE]  cannot  find  symbol  LAR  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.LAR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.LAR)  {  addToSetIfLocal(lhs,  gen);  }	  	non-compiled	[CE]  cannot  find  symbol  LAR	783	None	add
177	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.AR)  {  addToSetIfLocal(lhs,  gen);  }  [CE]  cannot  find  symbol  AR  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  if(lhs.getType()  ==  Token.AR)  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.VAR)    {    addToSetIfLocal(lhs,    gen);    }    if(lhs.getType()  ==  Token.AR)  {  addToSetIfLocal(lhs,  gen);  }	  	non-compiled	[CE]  cannot  find  symbol  AR	783	None	add
178	[BUG]  [BUGGY]  lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  not  a  statement	809	None	replace
179	[BUG]  [BUGGY]  ||  lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  illegal  start  of  expression  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  ||  lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	||  lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  illegal  start  of  expression	809	None	replace
180	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	809	1	replace
181	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	809	1	replace
182	[BUG]  [BUGGY]  lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  not  a  statement  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs.getType()  ==  Token.NAME  ||  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  not  a  statement	809	None	replace
183	[BUG]  [BUGGY]  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	rhs.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  	809	None	replace
184	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "prototype "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "prototype "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	809	1	replace
185	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "prototype "))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "prototype "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "prototype "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	809	1	replace
186	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "path "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "path "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	809	1	replace
187	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "path "))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "path "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  rhs.getString().equals( "path "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	compilable	  [FE]  IllegalStateException  	809	1	replace
188	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  kill.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME  &&  kill.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME  &&  kill.getString().equals( "name "))  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.NAME    &&    rhs.getString().equals(   "name   "))    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol	809	None	replace
189	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  c  =  n.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  c  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  c  =  n.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	160	None	add
190	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  n  =  n.getNext();  [CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  n  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  n  =  n.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	160	None	add
191	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  lhs  =  n.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  lhs  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  lhs  =  n.getNext();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	160	None	add
192	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  rhs  =  n.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  rhs  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  rhs  =  n.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	160	None	add
193	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  c  =  lhs.getNext();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  c  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  c  =  lhs.getNext();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	160	None	add
194	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  g  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node    c    =    n.getNext();    Node  g  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
195	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  g  =  n.getNext();  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  g  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  g  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
196	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  p  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node    c    =    n.getNext();    Node  p  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
197	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  p  =  n.getNext();  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  p  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  p  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
198	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  b  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node    c    =    n.getNext();    Node  b  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
199	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  b  =  n.getNext();  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  b  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  b  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
200	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  h  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node    c    =    n.getNext();    Node  h  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
201	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  h  =  n.getNext();  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  h  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  h  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
202	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  m  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node    c    =    n.getNext();    Node  m  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
203	[BUG]  [BUGGY]  Node  c  =  n.getNext();  Node  m  =  n.getNext();  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getNext();  Node  m  =  n.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node    c    =    n.getNext();    Node  m  =  n.getNext();	  	compilable	  [FE]  IllegalStateException  	160	1	add
204	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	2	replace
205	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	2	replace
206	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()!=  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()!=  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	1	replace
207	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()!=  Token.GETPROP);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()!=  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()!=  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	1	replace
208	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()!=  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	2	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()!=  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	2	replace
210	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()!=  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	2	replace
211	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()!=  Token.NAME  &&  lhs.getType()  ==  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	2	replace
212	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP,  gen);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	1	replace
213	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP,  gen);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETPROP,  gen);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	1	replace
214	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETELEM);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETELEM);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	1	replace
215	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETELEM);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETELEM);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getType()  ==  Token.GETELEM);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	compilable	  [FE]  IllegalStateException  	466	1	replace
216	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getString()  ==  Token.GETPROP);  [CE]  incomparable  types:  String  and  int  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getString()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME  ||  lhs.getString()  ==  Token.GETPROP);	  Preconditions.checkState(lhs.getType()    ==    Token.NAME    ||    lhs.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  incomparable  types:  String  and  int	466	None	replace
217	[BUG]  [BUGGY]  Node  c  =  n.getLastChild();  Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getLastChild();  Node  lhs  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getLastChild();  Node  lhs  =  lhs.getFirstChild();	          Node    c    =    lhs.getLastChild();    Node    lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	619	None	replace
218	[BUG]  [BUGGY]  Node  c  =  n.getFirstChild();  Node  lhs  =  lhs.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  Node  lhs  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getFirstChild();  Node  lhs  =  lhs.getFirstChild();	          Node    c    =    lhs.getLastChild();    Node    lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	619	None	replace
219	[BUG]  [BUGGY]  Node  c  =  lhs.getLastChild();  Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getLastChild();  Node  lhs  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getLastChild();  Node  lhs  =  n.getFirstChild();	          Node    c    =    lhs.getLastChild();    Node    lhs    =    lhs.getFirstChild();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	619	None	replace
220	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
221	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
222	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
223	[BUG]  [BUGGY]  if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
224	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  NullPointerException  	377	2	replace
225	[BUG]  [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  NullPointerException  	377	2	replace
226	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
227	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
228	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isExpressionNode(lhs)&&  NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isExpressionNode(lhs)&&  NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
229	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(lhs)&&  NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isExpressionNode(lhs)&&  NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isExpressionNode(lhs)&&  NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
230	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                              NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  NullPointerException  	377	2	replace
231	[BUG]  [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }  [FE]  NullPointerException  [FE]                              NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  NullPointerException  	377	2	replace
232	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                                NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
233	[BUG]  [BUGGY]  if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }  [FE]  IllegalStateException  [FE]                                NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isFunction(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  gen);  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  IllegalStateException  	377	1	replace
234	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  [CE]  ')'  expected  [FE]                                  NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isExpressionNode(lhs))  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(lhs,	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	non-compiled	[CE]  ')'  expected	377	None	replace
235	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                                    NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(rhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(rhs,  gen);  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  NullPointerException  	377	2	replace
236	[BUG]  [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(rhs,  gen);  }  [FE]  NullPointerException  [FE]                                    NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(rhs,  gen);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!conditional)  {  lhs  =  lhs.getFirstChild();  lhs  =  lhs.getFirstChild();  }  else  {  addToSetIfLocal(rhs,  gen);  }	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    gen);    	compilable	  [FE]  NullPointerException  	377	2	replace
237	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
238	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
239	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
240	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
241	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
242	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
243	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
244	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
245	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.LONG)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  LONG  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.LONG)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.LONG)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  LONG	341	None	add
246	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
247	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
248	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
249	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
250	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLACK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  BLACK  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLACK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLACK)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  BLACK	341	None	add
251	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
252	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.BLOCK)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.BLOCK)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.BLOCK)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	341	1	add
253	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  n.getFirstChild();  Node  l  =  n.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
254	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  l.getFirstChild();  Node  l  =  n.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  l.getFirstChild();  Node  l  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  l.getFirstChild();  Node  l  =  n.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
255	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  l.getFirstChild();  Node  l  =  l.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  l.getFirstChild();  Node  l  =  l.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  l.getFirstChild();  Node  l  =  l.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
256	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  Node  l  =  n.getLastChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  Node  l  =  n.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  n.getFirstChild();  Node  l  =  n.getLastChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
257	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [CE]  variable  l  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  l  =  n.getFirstChild();	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
258	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  Node  l  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  n  =  n.getFirstChild();  Node  l  =  n.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
259	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  lhs.getFirstChild();  Node  l  =  n.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  lhs.getFirstChild();  Node  l  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  lhs.getFirstChild();  Node  l  =  n.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
260	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getLastChild();  Node  l  =  n.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getLastChild();  Node  l  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  n.getLastChild();  Node  l  =  n.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
261	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  l.getFirstChild();  Node  n  =  l.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  l.getFirstChild();  Node  n  =  l.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  l.getFirstChild();  Node  n  =  l.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
262	[BUG]  [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  Node  r  =  n.getFirstChild();  [CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Node    c    =    n.getFirstChild();    Node  l  =  n.getFirstChild();  Node  c  =  n.getFirstChild();  Node  r  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Node        c        =        n.getFirstChild();        Node    l    =    n.getFirstChild();    Node  c  =  n.getFirstChild();  Node  r  =  n.getFirstChild();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	657	None	add
263	[BUG]  [BUGGY]  Integer  rhs  =  lhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Integer  rhs  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Integer  rhs  =  lhs.getLastChild();	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	717	None	replace
264	[BUG]  [BUGGY]  Node  c  =  lhs.getPreviousChild();  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getPreviousChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getPreviousChild();	  Node    c    =    rhs.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
265	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  orphaned  case	435	None	replace
266	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }	  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  orphaned  case	435	None	replace
267	[BUG]  [BUGGY]  Node  rhs  =  c.removeFirstChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  rhs  =  c.removeFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  c.removeFirstChild();	  Node    rhs    =    n.removeFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	864	None	replace
268	[BUG]  [BUGGY]  Node  rhs  =  n.removeLastChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  rhs  =  n.removeLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  rhs  =  n.removeLastChild();	  Node    rhs    =    n.removeFirstChild();    	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	864	None	replace
269	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()    ==    Token.NAME)    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	525	None	replace
270	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isName(lhs));	  	compilable	  [FE]  IllegalStateException  	270	1	add
271	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isName(lhs));	  	compilable	  [FE]  IllegalStateException  	270	1	add
272	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  NodeUtil.copyCurrentStructure(lhs);  Preconditions.checkState(NodeUtil.isName(lhs));  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  NodeUtil.copyCurrentStructure(lhs);  Preconditions.checkState(NodeUtil.isName(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    NodeUtil.copyCurrentStructure(lhs);  Preconditions.checkState(NodeUtil.isName(lhs));	  	non-compiled	[CE]  cannot  find  symbol	270	None	add
273	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isName(lhs));  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	270	1	add
274	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isName(lhs));  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	270	1	add
275	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Node  rhs  =  lhs.getNext();  Preconditions.checkState(NodeUtil.isName(rhs));  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Node  rhs  =  lhs.getNext();  Preconditions.checkState(NodeUtil.isName(rhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Node  rhs  =  lhs.getNext();  Preconditions.checkState(NodeUtil.isName(rhs));	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	270	None	add
276	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isVar(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isVar(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
277	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isVar(lhs));  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isVar(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isVar(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
278	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isFunction(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isFunction(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
279	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isFunction(lhs));  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isFunction(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isFunction(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
280	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  NodeUtil.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  NodeUtil.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    NodeUtil.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isName(lhs));	  	non-compiled	[CE]  cannot  find  symbol	270	None	add
281	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isGet(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isGet(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
282	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isGet(lhs));  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isGet(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isGet(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
283	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isImmutableValue(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isImmutableValue(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
284	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isImmutableValue(lhs));  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isImmutableValue(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isImmutableValue(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
285	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isAssignmentOp(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isAssignmentOp(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
286	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isAssignmentOp(lhs));  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(NodeUtil.isName(lhs));  Preconditions.checkState(NodeUtil.isAssignmentOp(lhs));  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(NodeUtil.isName(lhs));    Preconditions.checkState(NodeUtil.isAssignmentOp(lhs));	  	compilable	  [FE]  IllegalStateException  	270	2	add
287	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
288	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
289	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
290	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
291	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  ';'  expected	793	None	add
292	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
293	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
294	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
295	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
296	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	793	None	add
297	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  ';'  expected	793	None	add
298	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [CE]  cannot  find  symbol  GEN  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  GEN,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  GEN	793	None	add
299	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
300	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs))        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(NodeUtil.isName(lhs))    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	793	1	add
301	[BUG]  [BUGGY]  Node  kill  =  lhs.getFirstChild();  [CE]  variable  kill  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  kill  =  lhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  kill  =  lhs.getFirstChild();	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    	non-compiled	[CE]  variable  kill  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	375	None	replace
302	[BUG]  [BUGGY]  Node  kill  =  lhs.getLastChild();  [CE]  variable  kill  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                  NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  kill  =  lhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  kill  =  lhs.getLastChild();	          lhs    =    lhs.getFirstChild();    lhs    =    lhs.getFirstChild();    }    else    if(NodeUtil.isVar(lhs))    {    Node    rhs    =    lhs.getLastChild();    addToSetIfLocal(rhs,    	non-compiled	[CE]  variable  kill  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	375	None	replace
303	[BUG]  [BUGGY]  Node  c  =  lhs.getChildCount()  +  1;  [CE]  incompatible  types  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getChildCount()  +  1;  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getChildCount()  +  1;	  Node    c    =    lhs.getChildCount();    	non-compiled	[CE]  incompatible  types	305	None	replace
304	[BUG]  [BUGGY]  Node  c  =  lhs.getChildCount()  -  1;  [CE]  incompatible  types  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getChildCount()  -  1;  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getChildCount()  -  1;	  Node    c    =    lhs.getChildCount();    	non-compiled	[CE]  incompatible  types	305	None	replace
305	[BUG]  [BUGGY]  Node  c  =  lhs.getChildCount()  *  2;  [CE]  incompatible  types  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getChildCount()  *  2;  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getChildCount()  *  2;	  Node    c    =    lhs.getChildCount();    	non-compiled	[CE]  incompatible  types	305	None	replace
306	[BUG]  [BUGGY]  Node  c  =  lhs.getChildCount()  +  2;  [CE]  incompatible  types  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getChildCount()  +  2;  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getChildCount()  +  2;	  Node    c    =    lhs.getChildCount();    	non-compiled	[CE]  incompatible  types	305	None	replace
307	[BUG]  [BUGGY]  Node  c  =  lhs.getChildCount()  -  2;  [CE]  incompatible  types  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getChildCount()  -  2;  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getChildCount()  -  2;	  Node    c    =    lhs.getChildCount();    	non-compiled	[CE]  incompatible  types	305	None	replace
308	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
309	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
310	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
311	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
312	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	548	None	add
313	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    NodeUtil.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  cannot  find  symbol	548	None	add
314	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
315	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
316	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
317	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
318	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
319	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	548	2	add
320	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FU  [CE]  ')'  expected  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FU  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FU	  	non-compiled	[CE]  ')'  expected	548	None	add
321	[BUG]  [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  preconditions  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	                Preconditions.checkState(lhs.getType()        ==        Token.FUNCTION);        Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	548	None	add
322	[BUG]  [BUGGY]  if(!lhs.isLocal())  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!lhs.isLocal())  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!lhs.isLocal())  {  addToSetIfLocal(lhs,  kill);  }	  if(!binary)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol	779	None	replace
323	[BUG]  [BUGGY]  if(!needToSetIfLocal(lhs,  kill))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!needToSetIfLocal(lhs,  kill))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!needToSetIfLocal(lhs,  kill))  {  addToSetIfLocal(lhs,  kill);  }	  if(!binary)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol	779	None	replace
324	[BUG]  [BUGGY]  if(!dead)  {  addToSetIfLocal(lhs,  kill);  }  [CE]  cannot  find  symbol  dead  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(!dead)  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(!dead)  {  addToSetIfLocal(lhs,  kill);  }	  if(!binary)    {    addToSetIfLocal(lhs,    kill);    }    	non-compiled	[CE]  cannot  find  symbol  dead	779	None	replace
325	[BUG]  [BUGGY]  Node  lhs  =  n.getParent();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  lhs  =  n.getParent();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  n.getParent();	  Node    lhs    =    lhs.getParent();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	471	None	replace
326	[BUG]  [BUGGY]  Node  lhs  =  rhs.getParent();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  lhs  =  rhs.getParent();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  rhs.getParent();	  Node    lhs    =    lhs.getParent();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	471	None	replace
327	[BUG]  [BUGGY]  Node  lhs  =  c.getParent();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  lhs  =  c.getParent();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  c.getParent();	  Node    lhs    =    lhs.getParent();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	471	None	replace
328	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs)&&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
329	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs)&&  NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
330	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
331	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
332	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs)&&  NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
333	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs)&&  NodeUtil.isAssign(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
334	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isExpressionNode(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs)&&  NodeUtil.isExpressionNode(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
335	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isExpressionNode(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isExpressionNode(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs)&&  NodeUtil.isExpressionNode(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
336	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs)&&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
337	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs)&&  NodeUtil.isName(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
338	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
339	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs)&&  NodeUtil.isFunction(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
340	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(NodeUtil.isName(lhs)&&  NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
341	[BUG]  [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isName(lhs)&&  NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isName(lhs)&&  NodeUtil.isGetProp(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isName(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(NodeUtil.isName(lhs))    {    computeGenKill(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	242	1	replace
342	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
344	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	325	1	replace
345	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	325	1	replace
346	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()!=  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
347	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
348	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION  ||  rhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
349	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  ';'  expected  [FE]                        IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(rhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  ';'  expected	325	None	replace
350	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
351	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [FE]  IllegalStateException  [FE]                NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
352	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	2	replace
353	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [FE]  IllegalStateException  [FE]                  NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	2	replace
354	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
355	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                    NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
356	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
357	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [FE]  IllegalStateException  [FE]                      NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
358	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	2	replace
359	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                        NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	2	replace
360	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
361	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [FE]  IllegalStateException  [FE]                          NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  else  {  addToSetIfLocal(lhs,  kill);  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
362	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
363	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [FE]  IllegalStateException  [FE]                            NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION  ||  lhs.getType()  ==  Token.GETPROP)  {  lhs  =  lhs.getNext();  lhs  =  lhs.getNext();  }	          lhs    =    lhs.getNext();    lhs    =    lhs.getNext();    }    else    {    addToSetIfLocal(lhs,    kill);    addToSetIfLocal(lhs,    gen);    computeGenKill(rhs,    gen,    kill,    conditional);    }    	compilable	  [FE]  IllegalStateException  	503	1	replace
364	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
365	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
366	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
367	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()!=  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
368	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  n);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  incomparable  types:  int  and  Node  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  n);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  n);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  incomparable  types:  int  and  Node	42	None	replace
369	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
370	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
371	[BUG]  [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  lhs.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	42	None	replace
372	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
373	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	          Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    Preconditions.checkState(lhs.getType()    ==    Token.FUNCTION);    	compilable	  [FE]  IllegalStateException  	42	2	replace
374	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  kill);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  kill);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	compilable	  [FE]  NullPointerException  	672	2	replace
375	[BUG]  [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  kill);  [FE]  NullPointerException  [FE]          IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  kill);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  kill);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	compilable	  [FE]  NullPointerException  	672	2	replace
376	[BUG]  [BUGGY]  Node  c  =  n.getFirstChild();  addToSetIfLocal(c);  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  n.getFirstChild();  addToSetIfLocal(c);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  n.getFirstChild();  addToSetIfLocal(c);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	672	None	replace
377	[BUG]  [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  conditional);  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  conditional);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  conditional);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	672	None	replace
378	[BUG]  [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  escaped);  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  escaped);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  escaped);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	672	None	replace
379	[BUG]  [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  rhs);  [CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  rhs);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  rhs);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	non-compiled	[CE]  method  addToSetIfLocal  in  class  LiveVariablesAnalysis  cannot  be  applied  to  given  types;	672	None	replace
380	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getLastChild();  addToSetIfLocal(c,  kill);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Node  c  =  lhs.getLastChild();  addToSetIfLocal(c,  kill);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	compilable	  [FE]  NullPointerException  	672	2	replace
381	[BUG]  [BUGGY]  Node  c  =  lhs.getLastChild();  addToSetIfLocal(c,  kill);  [FE]  NullPointerException  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getLastChild();  addToSetIfLocal(c,  kill);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getLastChild();  addToSetIfLocal(c,  kill);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	compilable	  [FE]  NullPointerException  	672	2	replace
382	[BUG]  [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  killer);  [CE]  cannot  find  symbol  killer  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  killer);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  c  =  lhs.getFirstChild();  addToSetIfLocal(c,  killer);	          Node    c    =    lhs.getFirstChild();    addToSetIfLocal(c);    	non-compiled	[CE]  cannot  find  symbol  killer	672	None	replace
383	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
384	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
385	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
386	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
387	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
388	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
389	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
390	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
391	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
392	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
393	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
394	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
395	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
396	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
397	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
398	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.VAR)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
399	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
400	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
401	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
402	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    gen);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.STRING)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	234	1	add
403	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  IllegalStateException  	188	2	add
404	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.VAR);	  	compilable	  [FE]  IllegalStateException  	188	2	add
405	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	188	2	add
406	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  IllegalStateException  	188	2	add
407	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	188	2	add
408	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	188	2	add
409	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  lhs  =  n.getFirstChild();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  lhs  =  n.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Node  lhs  =  n.getFirstChild();	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	188	None	add
410	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  IllegalStateException  	188	2	add
411	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.CALL);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.CALL);	  	compilable	  [FE]  IllegalStateException  	188	2	add
412	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	188	2	add
413	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  IllegalStateException  	188	2	add
414	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  lhs.getNext();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Node  rhs  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Node  rhs  =  lhs.getNext();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	188	None	add
415	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.OBJECTLIT);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.OBJECTLIT);	  	compilable	  [FE]  IllegalStateException  	188	2	add
416	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.OBJECTLIT);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.OBJECTLIT);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.OBJECTLIT);	  	compilable	  [FE]  IllegalStateException  	188	2	add
417	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.BUCKET);  [CE]  cannot  find  symbol  BUCKET  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.BUCKET);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.BUCKET);	  	non-compiled	[CE]  cannot  find  symbol  BUCKET	188	None	add
418	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  IllegalStateException  	188	2	add
419	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.VAR);  Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.VAR);    Preconditions.checkState(lhs.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  IllegalStateException  	188	2	add
420	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs    =    rhs.getLastChild();    lhs  =  rhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	450	2	add
421	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLastChild();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    lhs  =  rhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	450	2	add
422	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs    =    rhs.getLastChild();    lhs  =  rhs.getFirstChild();	  	compilable	  [FE]  NullPointerException  	450	2	add
423	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getFirstChild();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    lhs  =  rhs.getFirstChild();	  	compilable	  [FE]  NullPointerException  	450	2	add
424	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  rhs  =  rhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs    =    rhs.getLastChild();    rhs  =  rhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	450	2	add
425	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  rhs  =  rhs.getLastChild();  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  rhs  =  rhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    rhs  =  rhs.getLastChild();	  	compilable	  [FE]  NullPointerException  	450	2	add
426	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  Lhs  =  rhs.getLastChild();  [CE]  cannot  find  symbol  Lhs  [FE]          NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  Lhs  =  rhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    Lhs  =  rhs.getLastChild();	  	non-compiled	[CE]  cannot  find  symbol  Lhs	450	None	add
427	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  Node  rhs  =  rhs.getLastChild();  [CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]            NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  Node  rhs  =  rhs.getLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    Node  rhs  =  rhs.getLastChild();	  	non-compiled	[CE]  variable  rhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	450	None	add
428	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLestChild();  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLestChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    lhs  =  rhs.getLestChild();	  	non-compiled	[CE]  cannot  find  symbol	450	None	add
429	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLocalFirstChild();  [CE]  cannot  find  symbol  [FE]                NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLocalFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    lhs  =  rhs.getLocalFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	450	None	add
430	[BUG]  [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLastChild()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.getLastChild();  lhs  =  rhs.getLastChild()  +  1;  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs    =    rhs.getLastChild();    lhs  =  rhs.getLastChild()  +  1;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	450	None	add
431	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);	  	compilable	  [FE]  IllegalStateException  	459	1	add
432	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);	  	compilable	  [FE]  IllegalStateException  	459	1	add
433	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Node  lhs  =  n.getFirstChild();  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);	  	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	459	None	add
434	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	459	1	add
435	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  addToSetIfLocal(lhs,  gen);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  addToSetIfLocal(lhs,  gen);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  addToSetIfLocal(lhs,  gen);	  	compilable	  [FE]  IllegalStateException  	459	1	add
436	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);	  	compilable	  [FE]  IllegalStateException  	459	2	add
437	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION,  kill);	  	compilable	  [FE]  IllegalStateException  	459	2	add
438	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	459	1	add
439	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME);	  	compilable	  [FE]  IllegalStateException  	459	1	add
440	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.VAR,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.VAR,  kill);	  	compilable	  [FE]  IllegalStateException  	459	2	add
441	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.VAR,  kill);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.VAR,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.VAR,  kill);	  	compilable	  [FE]  IllegalStateException  	459	2	add
442	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME,  kill);  [CE]  cannot  find  symbol  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    NodeUtil.checkState(lhs.getType()  ==  Token.NAME,  kill);	  	non-compiled	[CE]  cannot  find  symbol	459	None	add
443	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  escaped);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  escaped);	  	compilable	  [FE]  IllegalStateException  	459	1	add
444	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  escaped);  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  escaped);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  escaped);	  	compilable	  [FE]  IllegalStateException  	459	1	add
445	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  NodeUtil.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    NodeUtil.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);	  	non-compiled	[CE]  cannot  find  symbol	459	None	add
446	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs);	  	compilable	  [FE]  IllegalStateException  	459	1	add
447	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs);  [FE]  IllegalStateException  [FE]                      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  kill);  Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs);  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()    ==    Token.NAME,    kill);    Preconditions.checkState(lhs.getType()  ==  Token.NAME,  rhs);	  	compilable	  [FE]  IllegalStateException  	459	1	add
448	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
449	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
450	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
451	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
452	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
453	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
454	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
455	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.OBJECTLIT)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
456	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
457	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
458	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
459	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
460	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.LITERAL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  cannot  find  symbol  LITERAL  [FE]                IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.LITERAL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.LITERAL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	non-compiled	[CE]  cannot  find  symbol  LITERAL	358	None	add
461	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
462	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                  IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.CALL)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
463	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
464	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]                    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.GETPROP)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.GETPROP)  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.GETPROP)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(rhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.GETPROP)    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	358	1	add
465	[BUG]  [BUGGY]  Lhs  =  lhs.getNext();  [CE]  cannot  find  symbol  Lhs  [FE]                        NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Lhs  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Lhs  =  lhs.getNext();	          lhs    =    lhs.getNext();    Lhs    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol  Lhs	15	None	replace
466	[BUG]  [BUGGY]  Node  lhs  =  lhs.getNext();  Lhs  =  lhs.getNext();  [CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)  [FE]                          NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Node  lhs  =  lhs.getNext();  Lhs  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Node  lhs  =  lhs.getNext();  Lhs  =  lhs.getNext();	          lhs    =    lhs.getNext();    Lhs    =    lhs.getNext();    	non-compiled	[CE]  variable  lhs  is  already  defined  in  method  computeGenKill(Node,BitSet,BitSet,boolean)	15	None	replace
467	[BUG]  [BUGGY]  n  =  lhs.getNext();  Lhs  =  lhs.getNext();  [CE]  cannot  find  symbol  Lhs  [FE]                            NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  n  =  lhs.getNext();  Lhs  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	n  =  lhs.getNext();  Lhs  =  lhs.getNext();	          lhs    =    lhs.getNext();    Lhs    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol  Lhs	15	None	replace
468	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Lhs  =  lhs.getNext();  [CE]  cannot  find  symbol  Lhs  [FE]                              NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Lhs  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.NAME);  Lhs  =  lhs.getNext();	          lhs    =    lhs.getNext();    Lhs    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol  Lhs	15	None	replace
469	[BUG]  [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Lhs  =  lhs.getNext();  [CE]  cannot  find  symbol  Lhs  [FE]                                NullPointerException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Lhs  =  lhs.getNext();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	Preconditions.checkState(lhs.getType()  ==  Token.FUNCTION);  Lhs  =  lhs.getNext();	          lhs    =    lhs.getNext();    Lhs    =    lhs.getNext();    	non-compiled	[CE]  cannot  find  symbol  Lhs	15	None	replace
470	[BUG]  [BUGGY]  lhs  =  lhs.removeLastChild();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  lhs.removeLastChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  lhs.removeLastChild();	  lhs    =    lhs.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	669	None	replace
471	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.removeFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  rhs.removeFirstChild();	  lhs    =    lhs.removeFirstChild();    	compilable	  [FE]  NullPointerException  	669	2	replace
472	[BUG]  [BUGGY]  lhs  =  rhs.removeFirstChild();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  rhs.removeFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  rhs.removeFirstChild();	  lhs    =    lhs.removeFirstChild();    	compilable	  [FE]  NullPointerException  	669	2	replace
473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  n.removeFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	lhs  =  n.removeFirstChild();	  lhs    =    lhs.removeFirstChild();    	compilable	  [FE]  IllegalArgumentException  	669	2	replace
474	[BUG]  [BUGGY]  lhs  =  n.removeFirstChild();  [FE]  IllegalArgumentException  [FE]        NullPointerException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  lhs  =  n.removeFirstChild();  [BUGGY]      addToSetIfLocal(lhs,  kill);  addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	lhs  =  n.removeFirstChild();	  lhs    =    lhs.removeFirstChild();    	compilable	  [FE]  IllegalArgumentException  	669	2	replace
475	[BUG]  [BUGGY]  if(NodeUtil.isFunction(lhs))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]            IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isFunction(lhs))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isFunction(lhs))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	142	None	replace
476	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]              IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	142	None	replace
477	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]                IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	142	None	replace
478	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]                  IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.FUNCTION)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.FUNCTION)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	142	None	replace
479	[BUG]  [BUGGY]  if(NodeUtil.isFunction(lhs))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CE]  orphaned  case  [FE]                    IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isFunction(lhs))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isFunction(lhs))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	142	None	replace
480	[BUG]  [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]                      IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()  ==  Token.NAME)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()  ==  Token.NAME)  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	142	None	replace
481	[BUG]  [BUGGY]  if(NodeUtil.isFunction(n))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [CE]  orphaned  case  [FE]                        IllegalStateException      [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(NodeUtil.isFunction(n))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(NodeUtil.isFunction(n))  {  if(NodeUtil.isVar(lhs))  {  addToSetIfLocal(lhs,  kill);  }	  if(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    If(NodeUtil.isVar(lhs))    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(rhs,    gen,    kill,    conditional);    }    	non-compiled	[CE]  orphaned  case	142	None	replace
482	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(lhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	387	1	add
483	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(lhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	387	1	add
484	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(lhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	387	1	add
485	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(lhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	387	1	add
486	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	add	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(lhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	387	1	add
487	[BUG]  [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      computeGenKill(NodeUtil.getConditionExpression(n),  gen,  kill,  conditional);  }  else  {  Node  lhs  =  n.getFirstChild();  Node  rhs  =  lhs.getNext();  if  (NodeUtil.isVar(lhs))  {  lhs  =  lhs.getLastChild();  }      [BUGGY]  if(lhs.getType()    ==    Token.FUNCTION)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.NAME)  {  addToSetIfLocal(lhs,  kill);  }  else  {  computeGenKill(lhs,  gen,  kill,  conditional);  }  if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }  [BUGGY]      addToSetIfLocal(lhs,  gen);  computeGenKill(rhs,  gen,  kill,  conditional);  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  computeGenKill  [RETURN_TYPE]  void  Node  n  BitSet  gen  BitSet  kill  boolean  conditional  [VARIABLES]  BitSet  gen  kill  liveSet  Set  escaped  String  ARGUMENT_ARRAY_ALIAS  var  boolean  conditional  Scope  jsScope  Node  c  lhs  n  rhs  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.7071067811865475	206	206	1	replace	if(lhs.getType()        ==        Token.FUNCTION)        {        addToSetIfLocal(lhs,        kill);        }        else        {        computeGenKill(lhs,        gen,        kill,        conditional);        }        if(lhs.getType()    ==    Token.NAME)    {    addToSetIfLocal(lhs,    kill);    }    else    {    computeGenKill(lhs,    gen,    kill,    conditional);    }    if(lhs.getType()  ==  Token.FUNCTION)  {  addToSetIfLocal(lhs,  gen);  }  else  {  computeGenKill(rhs,  gen,  kill,  conditional);  }	  	compilable	  [FE]  IllegalStateException  	387	1	add
