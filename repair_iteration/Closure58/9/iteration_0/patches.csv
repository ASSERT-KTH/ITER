bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  escaped  =  Sets.newHashSet();  [CE]  variable  escaped  might  already  have  been  assigned  [FE]    IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  escaped  =  Sets.newHashSet();  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	escaped  =  Sets.newHashSet();	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  variable  escaped  might  already  have  been  assigned	17	None	replace
2	[BUG]  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  cfg);  [CE]  method  computeEscaped  in  class  DataFlowAnalysis<N,L>  cannot  be  applied  to  given  types;  [FE]      IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  cfg);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	computeEscaped(jsScope,  escaped,  compiler,  cfg);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  method  computeEscaped  in  class  DataFlowAnalysis<N,L>  cannot  be  applied  to  given  types;	17	None	replace
3	[BUG]  [BUGGY]  escaped.add(jsScope);  [CE]  no  suitable  method  found  for  add(Scope)  [FE]        IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  escaped.add(jsScope);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	escaped.add(jsScope);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  no  suitable  method  found  for  add(Scope)	17	None	replace
4	[BUG]  [BUGGY]  ensureEscaped(jsScope,  escaped,  compiler);  [CE]  cannot  find  symbol  [FE]          IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  ensureEscaped(jsScope,  escaped,  compiler);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	ensureEscaped(jsScope,  escaped,  compiler);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
5	[BUG]  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  this.liveSet);  [CE]  cannot  find  symbol  liveSet  [FE]            IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  this.liveSet);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	computeEscaped(jsScope,  escaped,  compiler,  this.liveSet);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  cannot  find  symbol  liveSet	17	None	replace
6	[BUG]  [BUGGY]  escaped  =  Sets.newHashSet(jsScope);  [CE]  incompatible  types  [FE]              IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  escaped  =  Sets.newHashSet(jsScope);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	escaped  =  Sets.newHashSet(jsScope);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  incompatible  types	17	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Preconditions.checkState(escaped!=  jsScope);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	add	Preconditions.checkState(escaped!=  jsScope);	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(escaped!=  jsScope);  [FE]  AssertionFailedError  [FE]                IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Preconditions.checkState(escaped!=  jsScope);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	Preconditions.checkState(escaped!=  jsScope);	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
9	[BUG]  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  this.cfg);  [CE]  cfg  has  private  access  in  DataFlowAnalysis  [FE]                  IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  this.cfg);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	computeEscaped(jsScope,  escaped,  compiler,  this.cfg);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  cfg  has  private  access  in  DataFlowAnalysis	17	None	replace
10	[BUG]  [BUGGY]  append(jsScope,  escaped,  compiler);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  append(jsScope,  escaped,  compiler);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	append(jsScope,  escaped,  compiler);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]    [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	add	  	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
12	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]                      IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]    [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	  	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
13	[BUG]  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  liveSet);  [CE]  cannot  find  symbol  liveSet  [FE]    IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  liveSet);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	computeEscaped(jsScope,  escaped,  compiler,  liveSet);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  cannot  find  symbol  liveSet	17	None	replace
14	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Preconditions.checkState(escaped  ==  jsScope);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	add	Preconditions.checkState(escaped  ==  jsScope);	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  IllegalStateException  	17	20	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(escaped  ==  jsScope);  [FE]  IllegalStateException  [FE]      IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Preconditions.checkState(escaped  ==  jsScope);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	Preconditions.checkState(escaped  ==  jsScope);	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  IllegalStateException  	17	20	replace
16	[BUG]  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  baseUri);  [CE]  cannot  find  symbol  baseUri  [FE]        IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  computeEscaped(jsScope,  escaped,  compiler,  baseUri);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	computeEscaped(jsScope,  escaped,  compiler,  baseUri);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  cannot  find  symbol  baseUri	17	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Set  <  String>  liveSet  =  Sets.newHashSet();  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	add	Set  <  String>  liveSet  =  Sets.newHashSet();	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
18	[BUG]  [BUGGY]  Set  <  String>  liveSet  =  Sets.newHashSet();  [FE]  AssertionFailedError  [FE]    IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Set  <  String>  liveSet  =  Sets.newHashSet();  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	Set  <  String>  liveSet  =  Sets.newHashSet();	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Set  <  Node>  liveSet  =  Sets.newHashSet();  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	add	Set  <  Node>  liveSet  =  Sets.newHashSet();	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
20	[BUG]  [BUGGY]  Set  <  Node>  liveSet  =  Sets.newHashSet();  [FE]  AssertionFailedError  [FE]      IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  Set  <  Node>  liveSet  =  Sets.newHashSet();  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	Set  <  Node>  liveSet  =  Sets.newHashSet();	computeEscaped(jsScope,  escaped,  compiler);  	compilable	  [FE]  AssertionFailedError  	17	3	replace
21	[BUG]  [BUGGY]  escaped  =  Sets.newHashSet(escaped);  [CE]  variable  escaped  might  already  have  been  assigned  [FE]        IllegalStateException  [CONTEXT]  LiveVariablesAnalysis(ControlFlowGraph<Node>  cfg,  Scope  jsScope,  AbstractCompiler  compiler)  {  super(cfg,  new  LiveVariableJoinOp());  this.jsScope  =  jsScope;  this.escaped  =  Sets.newHashSet();  [BUGGY]  escaped  =  Sets.newHashSet(escaped);  [BUGGY]  }  [CLASS]  LiveVariablesAnalysis  LiveVariableJoinOp  LiveVariableLattice  [METHOD]  <init>  [RETURN_TYPE]  AbstractCompiler)  Node>  cfg  Scope  jsScope  AbstractCompiler  compiler  [VARIABLES]  AbstractCompiler  compiler  Set  escaped  boolean  Scope  jsScope  ControlFlowGraph  cfg  BitSet  liveSet  String  ARGUMENT_ARRAY_ALIAS  	projects/Closure58/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java	0.22360679774997896	120	120	1	replace	escaped  =  Sets.newHashSet(escaped);	computeEscaped(jsScope,  escaped,  compiler);  	non-compiled	[CE]  variable  escaped  might  already  have  been  assigned	17	None	replace
