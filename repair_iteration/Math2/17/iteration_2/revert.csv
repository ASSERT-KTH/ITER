projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(RandomGenerator.NUMBER_OF_SUCCESSES);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=getRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.null;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)super.getRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)super.getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(rng);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(numberOfSuccesses,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(LocalizedFormats.NUMBER_OF_SUCCESSES,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nullPositions.get(0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(randomGenerator);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(RandomGenerator.NUMBER_OF_SUCCESSES,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(RandomGenerator.NUMBER_OF_SUCCESSES,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.super.getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=getRandomGenerator(null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null);super(null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null);this.rng=newRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null);super(null,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,randomGenerator);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.natives.getValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.super.getRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null);this.rng=newRandomGenerator(null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)super.getNumberOfSuccesses()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=numberOfSuccesses-populationSize;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=numberOfSuccesses-PopulationSize.intValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)super.getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=rng.getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=Math.min(populationSize,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=Math.min(populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,rng);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84this.rng=newRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null);this.sampleSize=newRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,numberOfSuccesses,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,numberOfSuccesses,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(numberOfSuccesses,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=getRandomGenerator(null,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=getRandomGenerator(LocalizedFormats.NUMBER_OF_SUCCESSES);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,null,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,null,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84this.rng=newRandomGenerator(null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84this.rng=newRandomGenerator(RandomGenerator.NUMBER_OF_SUCCESSES);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=Math.min(populationSize,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(RandomGenerator.NUMBER_OF_SUCCESSES,numberOfSuccesses+1);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.numberOfSuccesses;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(false,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,rng,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,populationSize,0,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,numberOfSuccesses,0,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,populationSize,0,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(randomGenerator+1);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,populationSize,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nullPositions.get(1);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,0,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,0,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(numberOfSuccesses,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.super.getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=numberOfSuccesses-sampleSize;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=numberOfSuccesses/sampleSize;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=numberOfSuccesses/PopulationSize.intValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0,numberOfSuccesses,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.super.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=getNumberOfSuccesses()-1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=getNumberOfSuccesses()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.natives.getValue(0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=rng.getSampleSize()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(numberOfSuccesses+1);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.super.getRangeOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(LocalizedFormats.NUMBER_OF_SUCCESSES,numberOfSuccesses,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(LocalizedFormats.NUMBER_OF_SUCCESSES,numberOfSuccesses,0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(RandomGenerator.NUMBER_OF_SUCCESSES,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=Math.min(numberOfSuccesses,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,numberOfSuccesses,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(numberOfSuccesses-1);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,null);this.rng=newRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=rng.getSampleSize(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.super.getNumberOfSuccesses()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0,numberOfSuccesses-1);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.super.getSuperGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,0,0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,null,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=getRandomGenerator(NUMBER_OF_SUCCESSES);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)super.getSampleSize()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=numberOfSuccesses/populationSize;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.sampleSize;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,null,randomGenerator);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,null.intValue());
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=Math.min(numberOfSuccesses,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84intpopulationSize=numberOfSuccesses-PopulationSize.secondValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=getRandomGenerator(randomGenerator);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0,populationSize,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(rng,0,populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84RandomGeneratorrng=(RandomGenerator)this.nodeMap.get(null,null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(numberOfSuccesses,populationSize,sampleSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(null,null,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java84super(LocalizedFormats.NUMBER_OF_SUCCESSES,sampleSize);
