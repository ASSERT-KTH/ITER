bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      int  numberOfSuccesses  =  getPopulationSize();  int  numberOfSuccesses  =  getPopulationSize();  [CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]      int  numberOfSuccesses  =  getPopulationSize();  int  numberOfSuccesses  =  getPopulationSize();  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	        int    numberOfSuccesses    =    getPopulationSize();    int  numberOfSuccesses  =  getPopulationSize();	  	non-compiled	[CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()	8	None	add
2	[BUG]  [BUGGY]      int  numberOfSuccesses  =  getPopulationSize();  Integer  numberOfSuccesses  =  getPopulationSize();  [CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()  [FE]      AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]      int  numberOfSuccesses  =  getPopulationSize();  Integer  numberOfSuccesses  =  getPopulationSize();  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	        int    numberOfSuccesses    =    getPopulationSize();    Integer  numberOfSuccesses  =  getPopulationSize();	  	non-compiled	[CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()	8	None	add
3	[BUG]  [BUGGY]      int  numberOfSuccesses  =  this.numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses;  [CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]      int  numberOfSuccesses  =  this.numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses;  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	        int    numberOfSuccesses    =    this.numberOfSuccesses;    int  numberOfSuccesses  =  this.numberOfSuccesses;	  	non-compiled	[CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()	3	None	add
4	[BUG]  [BUGGY]      int  numberOfSuccesses  =  this.numberOfSuccesses;  Integer  numberOfSuccesses  =  this.numberOfSuccesses;  [CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()  [FE]      AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]      int  numberOfSuccesses  =  this.numberOfSuccesses;  Integer  numberOfSuccesses  =  this.numberOfSuccesses;  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	        int    numberOfSuccesses    =    this.numberOfSuccesses;    Integer  numberOfSuccesses  =  this.numberOfSuccesses;	  	non-compiled	[CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()	3	None	add
5	[BUG]  [BUGGY]      int  numberOfSuccesses  =  getNumberOfSuccesses();  int  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()  [FE]    StackOverflowError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]      int  numberOfSuccesses  =  getNumberOfSuccesses();  int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	        int    numberOfSuccesses    =    getNumberOfSuccesses();    int  numberOfSuccesses  =  getNumberOfSuccesses();	  	non-compiled	[CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()	1	None	add
6	[BUG]  [BUGGY]      int  numberOfSuccesses  =  getNumberOfSuccesses();  Integer  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()  [FE]      StackOverflowError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]      int  numberOfSuccesses  =  getNumberOfSuccesses();  Integer  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	        int    numberOfSuccesses    =    getNumberOfSuccesses();    Integer  numberOfSuccesses  =  getNumberOfSuccesses();	  	non-compiled	[CE]  variable  numberOfSuccesses  is  already  defined  in  method  getNumberOfSuccesses()	1	None	add
7	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses()  +  1;  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses()  +  1;  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses()  +  1;	      int    numberOfSuccesses    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	2	None	replace
8	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples()  -  1;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples()  -  1;  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	int  numberOfSuccesses  =  getNumberOfSamples()  -  1;	      int    numberOfSuccesses    =    getNumberOfSamples();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses  -  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	add	return  this.numberOfSuccesses  -  1;	  return    this.numberOfSuccesses;    	compilable	  [FE]  AssertionError  	7	9	replace
10	[BUG]  [BUGGY]  return  this.numberOfSuccesses  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses  -  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return  this.numberOfSuccesses  -  1;	  return    this.numberOfSuccesses;    	compilable	  [FE]  AssertionError  	7	9	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses  +  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	add	return  this.numberOfSuccesses  +  1;	  return    this.numberOfSuccesses;    	compilable	  [FE]  AssertionError  	7	9	replace
12	[BUG]  [BUGGY]  return  this.numberOfSuccesses  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses  +  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return  this.numberOfSuccesses  +  1;	  return    this.numberOfSuccesses;    	compilable	  [FE]  AssertionError  	7	9	replace
13	[BUG]  [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;	      int    numberOfSuccesses    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	4	None	replace
14	[BUG]  [BUGGY]  return  this.numberOfSuccesses;  int  n  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses;  int  n  =  this.numberOfSuccesses;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return    this.numberOfSuccesses;    int  n  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	6	None	add
15	[BUG]  [BUGGY]  return  this.numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return    this.numberOfSuccesses;    int  numberOfSuccesses  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	6	None	add
16	[BUG]  [BUGGY]  return  this.numberOfSuccesses;  this.numberOfSuccesses;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses;  this.numberOfSuccesses;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return    this.numberOfSuccesses;    this.numberOfSuccesses;	  	non-compiled	[CE]  not  a  statement	6	None	add
17	[BUG]  [BUGGY]  return  this.numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses  +  1;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses  +  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return    this.numberOfSuccesses;    int  numberOfSuccesses  =  this.numberOfSuccesses  +  1;	  	non-compiled	[CE]  unreachable  statement	6	None	add
18	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples(null);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples(null);  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	int  numberOfSuccesses  =  getNumberOfSamples(null);	      int    numberOfSuccesses    =    getNumberOfSamples();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
19	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getMean();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  int  numberOfSuccesses  =  getMean();  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	int  numberOfSuccesses  =  getMean();	      int    numberOfSuccesses    =    getPopulationSize();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
20	[BUG]  [BUGGY]      int  numberOfSuccesses  =  this.numberOfSuccesses;  Int  numberOfSuccesses  =  this.numberOfSuccesses;  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]      int  numberOfSuccesses  =  this.numberOfSuccesses;  Int  numberOfSuccesses  =  this.numberOfSuccesses;  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	        int    numberOfSuccesses    =    this.numberOfSuccesses;    Int  numberOfSuccesses  =  this.numberOfSuccesses;	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
21	[BUG]  [BUGGY]  return  this.numberOfSuccesses;  int  n  =  this.numberOfSuccesses  *  getSampleSize();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses;  int  n  =  this.numberOfSuccesses  *  getSampleSize();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return    this.numberOfSuccesses;    int  n  =  this.numberOfSuccesses  *  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	6	None	add
22	[BUG]  [BUGGY]  return  this.numberOfSuccesses;  int  n  =  this.numberOfSuccesses  +  getSampleSize();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  return  this.numberOfSuccesses;  int  n  =  this.numberOfSuccesses  +  getSampleSize();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	return    this.numberOfSuccesses;    int  n  =  this.numberOfSuccesses  +  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	6	None	add
23	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getSampleSize();  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  int  getNumberOfSuccesses()  {    [BUGGY]  int  numberOfSuccesses  =  getSampleSize();  [BUGGY]    return  numberOfSuccesses;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getNumberOfSuccesses  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	161	161	1	replace	int  numberOfSuccesses  =  getSampleSize();	      int    numberOfSuccesses    =    getPopulationSize();    	non-compiled	[CE]  missing  return  statement	9	None	replace
