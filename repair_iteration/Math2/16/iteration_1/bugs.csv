bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.numberOfSuccesses  =  numberOfSuccesses;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  HypergeometricDistribution(int  populationSize,  int  numberOfSuccesses,  int  sampleSize)  throws  NotPositiveException,  NotStrictlyPositiveException,  NumberIsTooLargeException  {  this(new  Well19937c(),  populationSize,  numberOfSuccesses,  sampleSize);  [BUGGY]  this.numberOfSuccesses  =  numberOfSuccesses;  [BUGGY]    [CLASS]  HypergeometricDistribution  [METHOD]  <init>  [RETURN_TYPE]  HypergeometricDistribution(int,int,int)  int  populationSize  int  numberOfSuccesses  int  sampleSize  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	64	64	1	replace	this.numberOfSuccesses  =  numberOfSuccesses;	}  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2	[BUG]  [BUGGY]  this.numberOfSuccesses  =  numberOfSuccesses  +  1;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  HypergeometricDistribution(int  populationSize,  int  numberOfSuccesses,  int  sampleSize)  throws  NotPositiveException,  NotStrictlyPositiveException,  NumberIsTooLargeException  {  this(new  Well19937c(),  populationSize,  numberOfSuccesses,  sampleSize);  [BUGGY]  this.numberOfSuccesses  =  numberOfSuccesses  +  1;  [BUGGY]    [CLASS]  HypergeometricDistribution  [METHOD]  <init>  [RETURN_TYPE]  HypergeometricDistribution(int,int,int)  int  populationSize  int  numberOfSuccesses  int  sampleSize  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	64	64	1	replace	this.numberOfSuccesses  =  numberOfSuccesses  +  1;	}  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  public  HypergeometricDistribution(int  populationSize,  int  numberOfSuccesses,  int  sampleSize)  throws  NotPositiveException,  NotStrictlyPositiveException,  NumberIsTooLargeException  {  this(new  Well19937c(),  populationSize,  numberOfSuccesses,  sampleSize);  [BUGGY]    [BUGGY]    [CLASS]  HypergeometricDistribution  [METHOD]  <init>  [RETURN_TYPE]  HypergeometricDistribution(int,int,int)  int  populationSize  int  numberOfSuccesses  int  sampleSize  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	64	64	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
4	[BUG]  [BUGGY]    this.numberOfSuccesses  =  NumberIsTooLargeException.create();  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  HypergeometricDistribution(int  populationSize,  int  numberOfSuccesses,  int  sampleSize)  throws  NotPositiveException,  NotStrictlyPositiveException,  NumberIsTooLargeException  {  this(new  Well19937c(),  populationSize,  numberOfSuccesses,  sampleSize);  [BUGGY]    this.numberOfSuccesses  =  NumberIsTooLargeException.create();  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  <init>  [RETURN_TYPE]  HypergeometricDistribution(int,int,int)  int  populationSize  int  numberOfSuccesses  int  sampleSize  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	64	64	1	replace	    this.numberOfSuccesses  =  NumberIsTooLargeException.create();		non-compiled	[CE]  cannot  find  symbol	32	None	add
5	[BUG]  [BUGGY]    this.numberOfSuccesses  =  NumberIsTooLargeException.create(populationSize,  numberOfSuccesses);  [CE]  cannot  find  symbol  [FE]    AssertionError  [CONTEXT]  public  HypergeometricDistribution(int  populationSize,  int  numberOfSuccesses,  int  sampleSize)  throws  NotPositiveException,  NotStrictlyPositiveException,  NumberIsTooLargeException  {  this(new  Well19937c(),  populationSize,  numberOfSuccesses,  sampleSize);  [BUGGY]    this.numberOfSuccesses  =  NumberIsTooLargeException.create(populationSize,  numberOfSuccesses);  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  <init>  [RETURN_TYPE]  HypergeometricDistribution(int,int,int)  int  populationSize  int  numberOfSuccesses  int  sampleSize  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	64	64	1	replace	    this.numberOfSuccesses  =  NumberIsTooLargeException.create(populationSize,  numberOfSuccesses);		non-compiled	[CE]  cannot  find  symbol	32	None	add
6	[BUG]  [BUGGY]    this.numberOfSuccesses  =  numberOfSuccesses  +  sampleSize;  [CE]  variable  numberOfSuccesses  might  already  have  been  assigned  [FE]      AssertionError  [CONTEXT]  public  HypergeometricDistribution(int  populationSize,  int  numberOfSuccesses,  int  sampleSize)  throws  NotPositiveException,  NotStrictlyPositiveException,  NumberIsTooLargeException  {  this(new  Well19937c(),  populationSize,  numberOfSuccesses,  sampleSize);  [BUGGY]    this.numberOfSuccesses  =  numberOfSuccesses  +  sampleSize;  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  <init>  [RETURN_TYPE]  HypergeometricDistribution(int,int,int)  int  populationSize  int  numberOfSuccesses  int  sampleSize  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  long  serialVersionUID  int  numberOfSuccesses  populationSize  sampleSize  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	64	64	1	replace	    this.numberOfSuccesses  =  numberOfSuccesses  +  sampleSize;		non-compiled	[CE]  variable  numberOfSuccesses  might  already  have  been  assigned	32	None	add
