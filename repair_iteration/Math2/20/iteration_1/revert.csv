projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86if(populationSize<=0){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86if(populationSize<=1){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86if(populationSize<0){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)this.null;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)super.getValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)super.getValue(rng);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)super.getDataResolver();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)this.numbers.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86intpopulationSize=rng.getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86intpopulationSize=rng.getSampleSize()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86intpopulationSize=rng.getSampleSize(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86if(populationSize<0){if(populationSize<0){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86if(populationSize<0){If(populationSize<0){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86intnumberOfSuccesses=rng.getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86if(populationSize<1){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)this.super.getDataResolver();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)this;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)this.numbers.get(0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)super.getValue(null);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)super.getValue(variance);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)this.super.getValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)super.getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=(RandomGenerator)super.getValue(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java86RandomGeneratorrng=newRandomGenerator(sampleSize,numberOfSuccesses);
