bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
39	[BUG] [BUGGY] if (populationSize <= 0) { [FE] AssertionError [CONTEXT] throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException { super(rng); [BUGGY] if (populationSize <= 0) { [BUGGY] throw new NotStrictlyPositiveException(LocalizedFormats.POPULATION_SIZE, populationSize); } if (numberOfSuccesses < 0) { throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SUCCESSES, numberOfSuccesses); } if (sampleSize < 0) { throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize); [CLASS] HypergeometricDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,int,int,int)  RandomGenerator rng int populationSize int numberOfSuccesses int sampleSize [VARIABLES] boolean numericalVarianceIsCalculated double numericalVariance long serialVersionUID int numberOfSuccesses populationSize sampleSize RandomGenerator rng  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	86	86	1	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException { super(rng); [BUGGY] [BUGGY] if (populationSize <= 0) { throw new NotStrictlyPositiveException(LocalizedFormats.POPULATION_SIZE, populationSize); } if (numberOfSuccesses < 0) { throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SUCCESSES, numberOfSuccesses); } if (sampleSize < 0) { throw new NotPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize); [CLASS] HypergeometricDistribution [METHOD] <init> [RETURN_TYPE] RandomGenerator,int,int,int)  RandomGenerator rng int populationSize int numberOfSuccesses int sampleSize [VARIABLES] boolean numericalVarianceIsCalculated double numericalVariance long serialVersionUID int numberOfSuccesses populationSize sampleSize RandomGenerator rng  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.25	86	86	1	add	
