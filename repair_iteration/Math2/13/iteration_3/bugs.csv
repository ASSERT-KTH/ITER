bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples()  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples()  -  1;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  numberOfSuccesses  =  getNumberOfSamples()  -  1;	  int    numberOfSuccesses    =    getNumberOfSamples();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
2	[BUG]  [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  numberOfSuccesses  =  this.numberOfSuccesses;	  return    numberOfSuccesses;    int    numberOfSuccesses    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	16	None	replace
3	[BUG]  [BUGGY]  int  this.populationSize  =  getNumberOfSuccesses();  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  this.populationSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  this.populationSize  =  getNumberOfSuccesses();	  return    this.populationSize;    int    this.populationSize    =    getNumberOfSuccesses();    	non-compiled	[CE]  not  a  statement	22	None	replace
4	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getPopulationSize();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  numberOfSuccesses  =  getPopulationSize();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  numberOfSuccesses  =  getPopulationSize();	  int    numberOfSuccesses    =    getNumberOfSuccesses()    +    1;    	non-compiled	[CE]  missing  return  statement	8	None	replace
5	[BUG]  [BUGGY]  int  populationSize  =  this.populationSize  /  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  populationSize  =  this.populationSize  /  1;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  populationSize  =  this.populationSize  /  1;	  int    populationSize    =    this.populationSize    +    1;    	non-compiled	[CE]  missing  return  statement	31	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  this.populationSize  -  getNumberOfSuccesses();	  return    numberOfSuccesses    -    getNumberOfSuccesses();    	compilable	  [FE]  AssertionError  	39	7	replace
7	[BUG]  [BUGGY]  return  this.populationSize  -  getNumberOfSuccesses();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize  -  getNumberOfSuccesses();	  return    numberOfSuccesses    -    getNumberOfSuccesses();    	compilable	  [FE]  AssertionError  	39	7	replace
8	[BUG]  [BUGGY]  int  n  =  this.populationSize;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  n  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  n  =  this.populationSize;	  return    numberOfSuccesses;    int    n    =    numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	45	None	replace
9	[BUG]  [BUGGY]  int  n  =  numberOfSuccesses  +  1;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  n  =  numberOfSuccesses  +  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  n  =  numberOfSuccesses  +  1;	  return    numberOfSuccesses;    int    n    =    numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	45	None	replace
10	[BUG]  [BUGGY]  int  sampleSize  =  getNumberOfSuccesses()  +  1;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  sampleSize  =  getNumberOfSuccesses()  +  1;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  sampleSize  =  getNumberOfSuccesses()  +  1;	  int    sampleSize    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	20	None	replace
11	[BUG]  [BUGGY]  Integer  populationSize  =  this.populationSize;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  Integer  populationSize  =  this.populationSize;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	Integer  populationSize  =  this.populationSize;	          int    populationSize    =    this.populationSize;    Integer    populationSize    =    this.populationSize;    	non-compiled	[CE]  missing  return  statement	30	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  *  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  numberOfSuccesses  *  getNumberOfSuccesses();	  return    numberOfSuccesses    /    getNumberOfSuccesses();    	compilable	  [FE]  AssertionError  	37	7	replace
13	[BUG]  [BUGGY]  return  numberOfSuccesses  *  getNumberOfSuccesses();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  *  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  numberOfSuccesses  *  getNumberOfSuccesses();	  return    numberOfSuccesses    /    getNumberOfSuccesses();    	compilable	  [FE]  AssertionError  	37	7	replace
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.numberOfSuccesses  /  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  this.numberOfSuccesses  /  getNumberOfSuccesses();	  return    numberOfSuccesses    /    getNumberOfSuccesses();    	compilable	  [FE]  AssertionError  	37	8	replace
15	[BUG]  [BUGGY]  return  this.numberOfSuccesses  /  getNumberOfSuccesses();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.numberOfSuccesses  /  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.numberOfSuccesses  /  getNumberOfSuccesses();	  return    numberOfSuccesses    /    getNumberOfSuccesses();    	compilable	  [FE]  AssertionError  	37	8	replace
16	[BUG]  [BUGGY]  Integer  populationSize  =  this.numberOfSuccesses;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  Integer  populationSize  =  this.numberOfSuccesses;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	Integer  populationSize  =  this.numberOfSuccesses;	          int    populationSize    =    this.numberOfSuccesses;    Integer    populationSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	4	None	replace
17	[BUG]  [BUGGY]  return  this.populationSize  +  1;  int  this.populationSize  =  getNumberOfSuccesses();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  +  1;  int  this.populationSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    +    1;    int  this.populationSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  not  a  statement	12	None	add
18	[BUG]  [BUGGY]  return  this.populationSize  +  1;  int  this.populationSize  +  1;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  +  1;  int  this.populationSize  +  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    +    1;    int  this.populationSize  +  1;	  	non-compiled	[CE]  not  a  statement	12	None	add
19	[BUG]  [BUGGY]  return  this.populationSize  +  1;  int  n  =  this.populationSize  +  1;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  +  1;  int  n  =  this.populationSize  +  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    +    1;    int  n  =  this.populationSize  +  1;	  	non-compiled	[CE]  unreachable  statement	12	None	add
20	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  this.populationSize  -  1;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -    1;    int  this.populationSize  -  1;	  	non-compiled	[CE]  not  a  statement	10	None	add
21	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  n  =  this.populationSize  -  1;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  n  =  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -    1;    int  n  =  this.populationSize  -  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
22	[BUG]  [BUGGY]  return  this.populationSize  -  1;  this.populationSize  -  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -    1;    this.populationSize  -  1;	  	non-compiled	[CE]  not  a  statement	10	None	add
23	[BUG]  [BUGGY]  int  populationSize  =  getSampleSize();  Integer  populationSize  =  getPopulationSize();  [CE]  variable  populationSize  is  already  defined  in  method  getPopulationSize()  [FE]          StackOverflowError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  populationSize  =  getSampleSize();  Integer  populationSize  =  getPopulationSize();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  populationSize  =  getSampleSize();  Integer  populationSize  =  getPopulationSize();	          int    populationSize    =    getPopulationSize();    Integer    populationSize    =    getPopulationSize();    	non-compiled	[CE]  variable  populationSize  is  already  defined  in  method  getPopulationSize()	2	None	replace
24	[BUG]  [BUGGY]  Integer  populationSize  =  getPopulationSize();  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  Integer  populationSize  =  getPopulationSize();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	Integer  populationSize  =  getPopulationSize();	          int    populationSize    =    getPopulationSize();    Integer    populationSize    =    getPopulationSize();    	non-compiled	[CE]  missing  return  statement	2	None	replace
25	[BUG]  [BUGGY]  int  n  =  getSampleSize();  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  n  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  n  =  getSampleSize();	  int    n    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	21	None	replace
26	[BUG]  [BUGGY]  int  n  =  getNumberOfSuccesses()  +  1;  [CE]  missing  return  statement  [FE]                  AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  n  =  getNumberOfSuccesses()  +  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  n  =  getNumberOfSuccesses()  +  1;	  int    n    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	21	None	replace
27	[BUG]  [BUGGY]  int  populationSize  =  this.numberOfSuccesses  /  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  populationSize  =  this.numberOfSuccesses  /  1;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  populationSize  =  this.numberOfSuccesses  /  1;	  int    populationSize    =    this.numberOfSuccesses    -    1;    	non-compiled	[CE]  missing  return  statement	6	None	replace
28	[BUG]  [BUGGY]  int  sampleSize  =  this.populationSize;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  sampleSize  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  sampleSize  =  this.populationSize;	  return    this.populationSize;    int    sampleSize    =    this.populationSize;    	non-compiled	[CE]  missing  return  statement	34	None	replace
29	[BUG]  [BUGGY]  int  sampleSize  =  getSummarySize();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  sampleSize  =  getSummarySize();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  sampleSize  =  getSummarySize();	  int    sampleSize    =    getPopulationSize();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
30	[BUG]  [BUGGY]  int  populationSize  =(this.numberOfSuccesses  <  0)?  this.numberOfSuccesses  :  0;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  populationSize  =(this.numberOfSuccesses  <  0)?  this.numberOfSuccesses  :  0;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  populationSize  =(this.numberOfSuccesses  <  0)?  this.numberOfSuccesses  :  0;	  int    populationSize    =(this.numberOfSuccesses    <    =    0)?    this.numberOfSuccesses    :    0;    	non-compiled	[CE]  missing  return  statement	48	None	replace
31	[BUG]  [BUGGY]  this.populationSize;  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	this.populationSize;	  return    this.populationSize;    this.populationSize;    	non-compiled	[CE]  not  a  statement	23	None	replace
32	[BUG]  [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  numberOfSuccesses  /  getNumberOfSuccesses();  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  numberOfSuccesses  /  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    /    getNumberOfSuccesses();    int  numberOfSuccesses  /  getNumberOfSuccesses();	  	non-compiled	[CE]  ';'  expected	36	None	add
33	[BUG]  [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    /    getNumberOfSuccesses();    int  numberOfSuccesses  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	36	None	add
34	[BUG]  [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  n  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  n  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    /    getNumberOfSuccesses();    int  n  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	36	None	add
35	[BUG]  [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  numberOfSuccesses  -  getNumberOfSuccesses();  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  numberOfSuccesses  -  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    -    getNumberOfSuccesses();    int  numberOfSuccesses  -  getNumberOfSuccesses();	  	non-compiled	[CE]  ';'  expected	38	None	add
36	[BUG]  [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    -    getNumberOfSuccesses();    int  numberOfSuccesses  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	38	None	add
37	[BUG]  [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  double  numberOfSuccesses  -  getNumberOfSuccesses();  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  double  numberOfSuccesses  -  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    -    getNumberOfSuccesses();    double  numberOfSuccesses  -  getNumberOfSuccesses();	  	non-compiled	[CE]  ';'  expected	38	None	add
38	[BUG]  [BUGGY]  Integer  populationSize  =  getNumberOfSuccesses();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  Integer  populationSize  =  getNumberOfSuccesses();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	Integer  populationSize  =  getNumberOfSuccesses();	          int    populationSize    =    getNumberOfSuccesses();    Integer    populationSize    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	26	None	replace
39	[BUG]  [BUGGY]  Integer  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  Integer  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	Integer  numberOfSuccesses  =  getNumberOfSuccesses();	          int    numberOfSuccesses    =    getNumberOfSuccesses();    Integer    numberOfSuccesses    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	28	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  /  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  this.populationSize  /  1;	  return    this.populationSize    +    1;    	compilable	  [FE]  AssertionError  	13	1	replace
41	[BUG]  [BUGGY]  return  this.populationSize  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  /  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize  /  1;	  return    this.populationSize    +    1;    	compilable	  [FE]  AssertionError  	13	1	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  populationSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  this.populationSize  -(this.numberOfSuccesses  *  populationSize);	  return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    	compilable	  [FE]  AssertionError  	47	8	replace
43	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  populationSize);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  populationSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize  -(this.numberOfSuccesses  *  populationSize);	  return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    	compilable	  [FE]  AssertionError  	47	8	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  /  populationSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  this.populationSize  -(this.numberOfSuccesses  /  populationSize);	  return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    	compilable	  [FE]  AssertionError  	47	2	replace
45	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  /  populationSize);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  /  populationSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize  -(this.numberOfSuccesses  /  populationSize);	  return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    	compilable	  [FE]  AssertionError  	47	2	replace
46	[BUG]  [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getSampleSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getPopulationSize()  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getSampleSize();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getSampleSize();	          int    sampleSize    =    getSampleSize();    Integer    sampleSize    =    getSampleSize();    	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getPopulationSize()	18	None	replace
47	[BUG]  [BUGGY]  Integer  sampleSize  =  getSampleSize();  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  Integer  sampleSize  =  getSampleSize();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	Integer  sampleSize  =  getSampleSize();	          int    sampleSize    =    getSampleSize();    Integer    sampleSize    =    getSampleSize();    	non-compiled	[CE]  missing  return  statement	18	None	replace
48	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  n  =  this.numberOfSuccesses  -  populationSize;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  n  =  this.numberOfSuccesses  -  populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    int  n  =  this.numberOfSuccesses  -  populationSize;	  	non-compiled	[CE]  unreachable  statement	46	None	add
49	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  n  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  n  =  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    int  n  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	46	None	add
50	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  populationSize  =  this.numberOfSuccesses  -  populationSize;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  populationSize  =  this.numberOfSuccesses  -  populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    int  populationSize  =  this.numberOfSuccesses  -  populationSize;	  	non-compiled	[CE]  unreachable  statement	46	None	add
51	[BUG]  [BUGGY]  int  this.populationSize  =  getPopulationSize();  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  this.populationSize  =  getPopulationSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  this.populationSize  =  getPopulationSize();	  return    this.populationSize;    int    this.populationSize    =    getPopulationSize();    	non-compiled	[CE]  not  a  statement	24	None	replace
52	[BUG]  [BUGGY]  return  sampleSize;  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  sampleSize;  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    sampleSize;    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	42	None	add
53	[BUG]  [BUGGY]  return  sampleSize;  int  sampleSize  =  getPopulationSize();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  sampleSize;  int  sampleSize  =  getPopulationSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    sampleSize;    int  sampleSize  =  getPopulationSize();	  	non-compiled	[CE]  unreachable  statement	42	None	add
54	[BUG]  [BUGGY]  return  sampleSize;  int  sampleSize  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  sampleSize;  int  sampleSize  =  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    sampleSize;    int  sampleSize  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	42	None	add
55	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  populationSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  this.populationSize  /(this.numberOfSuccesses  -  populationSize);	  return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    	compilable	  [FE]  ArithmeticException  	47	8	replace
56	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  populationSize);  [FE]  ArithmeticException  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  populationSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize  /(this.numberOfSuccesses  -  populationSize);	  return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    	compilable	  [FE]  ArithmeticException  	47	8	replace
57	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  *  getPopulationSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  numberOfSuccesses  *  getPopulationSize();	  return    numberOfSuccesses    /    getNumberOfSuccesses();    	compilable	  [FE]  StackOverflowError  	37	9	replace
58	[BUG]  [BUGGY]  return  numberOfSuccesses  *  getPopulationSize();  [FE]  StackOverflowError  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  *  getPopulationSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  numberOfSuccesses  *  getPopulationSize();	  return    numberOfSuccesses    /    getNumberOfSuccesses();    	compilable	  [FE]  StackOverflowError  	37	9	replace
59	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses()  *  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses()  *  1;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses()  *  1;	  int    numberOfSuccesses    =    getNumberOfSuccesses()    -    1;    	non-compiled	[CE]  missing  return  statement	40	None	replace
60	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  this.populationSize;  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize  -  1;  int  sampleSize  =  this.populationSize;	  return    this.populationSize;    int    sampleSize    =    this.populationSize;    	non-compiled	[CE]  unreachable  statement	34	None	replace
61	[BUG]  [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  n  =  numberOfSuccesses  *  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  n  =  numberOfSuccesses  *  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    /    getNumberOfSuccesses();    int  n  =  numberOfSuccesses  *  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	36	None	add
62	[BUG]  [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    /    getNumberOfSuccesses();    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	36	None	add
63	[BUG]  [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;	  return    numberOfSuccesses;    int    numberOfSuccesses    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	16	None	replace
64	[BUG]  [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  n  =  numberOfSuccesses  *  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  n  =  numberOfSuccesses  *  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    -    getNumberOfSuccesses();    int  n  =  numberOfSuccesses  *  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	38	None	add
65	[BUG]  [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    -    getNumberOfSuccesses();    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	38	None	add
66	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize  -  1;  int  sampleSize  =  getSampleSize();	  return    this.populationSize;    int    sampleSize    =    getSampleSize();    	non-compiled	[CE]  unreachable  statement	33	None	replace
67	[BUG]  [BUGGY]  int  n  =  getPopulationSize();  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  n  =  getPopulationSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  n  =  getPopulationSize();	  int    n    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	21	None	replace
68	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  this.populationSize  =  getNumberOfSuccesses();  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  this.populationSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -    1;    int  this.populationSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  not  a  statement	10	None	add
69	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  k  =  this.populationSize  -  1;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  k  =  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -    1;    int  k  =  this.populationSize  -  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
70	[BUG]  [BUGGY]  int  n  =  numberOfSuccesses;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  n  =  numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  n  =  numberOfSuccesses;	  return    numberOfSuccesses;    int    n    =    numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	45	None	replace
71	[BUG]  [BUGGY]  int  populationSize  =  getNumberOfSuccesses();  Integer  populationSize  =  getPopulationSize();  [CE]  variable  populationSize  is  already  defined  in  method  getPopulationSize()  [FE]          StackOverflowError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  populationSize  =  getNumberOfSuccesses();  Integer  populationSize  =  getPopulationSize();  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  populationSize  =  getNumberOfSuccesses();  Integer  populationSize  =  getPopulationSize();	          int    populationSize    =    getPopulationSize();    Integer    populationSize    =    getPopulationSize();    	non-compiled	[CE]  variable  populationSize  is  already  defined  in  method  getPopulationSize()	2	None	replace
72	[BUG]  [BUGGY]  return  this.populationSize  +  1;  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  +  1;  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    +    1;    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	12	None	add
73	[BUG]  [BUGGY]  return  this.populationSize  +  1;  int  sampleSize  =  this.populationSize  +  1;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  +  1;  int  sampleSize  =  this.populationSize  +  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    +    1;    int  sampleSize  =  this.populationSize  +  1;	  	non-compiled	[CE]  unreachable  statement	12	None	add
74	[BUG]  [BUGGY]  return  this.populationSize  +  1;  int  sampleSize  =  this.populationSize;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  +  1;  int  sampleSize  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    +    1;    int  sampleSize  =  this.populationSize;	  	non-compiled	[CE]  unreachable  statement	12	None	add
75	[BUG]  [BUGGY]  int  populationSize  =  this.numberOfSuccesses  -  1;  Integer  populationSize  =  this.numberOfSuccesses;  [CE]  variable  populationSize  is  already  defined  in  method  getPopulationSize()  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  populationSize  =  this.numberOfSuccesses  -  1;  Integer  populationSize  =  this.numberOfSuccesses;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  populationSize  =  this.numberOfSuccesses  -  1;  Integer  populationSize  =  this.numberOfSuccesses;	          int    populationSize    =    this.numberOfSuccesses;    Integer    populationSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  variable  populationSize  is  already  defined  in  method  getPopulationSize()	4	None	replace
76	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	46	None	add
77	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    int  sampleSize  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	46	None	add
78	[BUG]  [BUGGY]  int  sampleSize  =  getPopulationSize()  +  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  sampleSize  =  getPopulationSize()  +  1;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  sampleSize  =  getPopulationSize()  +  1;	  int    sampleSize    =    getPopulationSize();    	non-compiled	[CE]  missing  return  statement	19	None	replace
79	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  this.numberOfSuccesses  -  populationSize;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  this.numberOfSuccesses  -  populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    int  sampleSize  =  this.numberOfSuccesses  -  populationSize;	  	non-compiled	[CE]  unreachable  statement	46	None	add
80	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  this.numberOfSuccesses  -  numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  -  populationSize);  int  sampleSize  =  this.numberOfSuccesses  -  numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -(this.numberOfSuccesses    -    populationSize);    int  sampleSize  =  this.numberOfSuccesses  -  numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	46	None	add
81	[BUG]  [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  n  =  getSampleSize();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  /  getNumberOfSuccesses();  int  n  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    /    getNumberOfSuccesses();    int  n  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	36	None	add
82	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  this.populationSize  -  1;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    this.populationSize    -    1;    int  sampleSize  =  this.populationSize  -  1;	  	non-compiled	[CE]  unreachable  statement	10	None	add
83	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples()  -  populationSize;  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSamples()  -  populationSize;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  numberOfSuccesses  =  getNumberOfSamples()  -  populationSize;	  int    numberOfSuccesses    =    getNumberOfSamples();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
84	[BUG]  [BUGGY]  int  populationSize  =(this.populationSize  <  =  0)?  this.populationSize  :  0;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  int  populationSize  =(this.populationSize  <  =  0)?  this.populationSize  :  0;  [BUGGY]      return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	int  populationSize  =(this.populationSize  <  =  0)?  this.populationSize  :  0;	          int    populationSize    =    this.populationSize;    int    populationSize    =    this.populationSize;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
85	[BUG]  [BUGGY]  this.populationSize  =  Math.max(0,  this.populationSize);  [CE]  cannot  assign  a  value  to  final  variable  populationSize  [FE]          AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  this.populationSize  =  Math.max(0,  this.populationSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	this.populationSize  =  Math.max(0,  this.populationSize);	  return    this.populationSize;    this.populationSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  populationSize	23	None	replace
86	[BUG]  [BUGGY]  return  this.populationSize;  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  this.populationSize;  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize;  int  sampleSize  =  getNumberOfSuccesses();	  return    this.populationSize;    int    sampleSize    =    getSampleSize();    	non-compiled	[CE]  unreachable  statement	33	None	replace
87	[BUG]  [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  n  =  getSampleSize();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getPopulationSize()  {      [BUGGY]  return  numberOfSuccesses  -  getNumberOfSuccesses();  int  n  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return    numberOfSuccesses    -    getNumberOfSuccesses();    int  n  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	38	None	add
