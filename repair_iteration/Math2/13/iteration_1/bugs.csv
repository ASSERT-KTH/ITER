bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]  return  this.populationSize;  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  this.populationSize;	return  populationSize;  	compilable	  [FE]  AssertionError  	25	1	replace
2	[BUG]  [BUGGY]  return  this.populationSize;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]  return  this.populationSize;  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  this.populationSize;	return  populationSize;  	compilable	  [FE]  AssertionError  	25	1	replace
3	[BUG]  [BUGGY]  return  m;  [CE]  cannot  find  symbol  m  [FE]      AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]  return  m;  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  m;	return  populationSize;  	non-compiled	[CE]  cannot  find  symbol  m	25	None	replace
4	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]        AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	  	return  populationSize;  	non-compiled	[CE]  missing  return  statement	25	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	    int  numberOfSuccesses  =  getNumberOfSuccesses();		compilable	  [FE]  AssertionError  	26	1	add
6	[BUG]  [BUGGY]    int  numberOfSuccesses  =  getNumberOfSuccesses();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	    int  numberOfSuccesses  =  getNumberOfSuccesses();		compilable	  [FE]  AssertionError  	26	1	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  getNumberOfSuccesses();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	    int  populationSize  =  getNumberOfSuccesses();		compilable	  [FE]  AssertionError  	26	7	add
8	[BUG]  [BUGGY]    int  populationSize  =  getNumberOfSuccesses();  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  getNumberOfSuccesses();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	    int  populationSize  =  getNumberOfSuccesses();		compilable	  [FE]  AssertionError  	26	7	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  this.numberOfSuccesses;  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	    int  populationSize  =  this.numberOfSuccesses;		compilable	  [FE]  AssertionError  	26	7	add
10	[BUG]  [BUGGY]    int  populationSize  =  this.numberOfSuccesses;  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  this.numberOfSuccesses;  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	    int  populationSize  =  this.numberOfSuccesses;		compilable	  [FE]  AssertionError  	26	7	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]  return  numberOfSuccesses;  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	return  numberOfSuccesses;	return  populationSize;  	compilable	  [FE]  AssertionError  	25	7	replace
12	[BUG]  [BUGGY]  return  numberOfSuccesses;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]  return  numberOfSuccesses;  [BUGGY]  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	return  numberOfSuccesses;	return  populationSize;  	compilable	  [FE]  AssertionError  	25	7	replace
13	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  getPopulationSize();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	    int  populationSize  =  getPopulationSize();		compilable	  [FE]  StackOverflowError  	26	9	add
14	[BUG]  [BUGGY]    int  populationSize  =  getPopulationSize();  [FE]  StackOverflowError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  getPopulationSize();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	    int  populationSize  =  getPopulationSize();		compilable	  [FE]  StackOverflowError  	26	9	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  this.populationSize;  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	    int  populationSize  =  this.populationSize;		compilable	  [FE]  AssertionError  	26	1	add
16	[BUG]  [BUGGY]    int  populationSize  =  this.populationSize;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  populationSize  =  this.populationSize;  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	    int  populationSize  =  this.populationSize;		compilable	  [FE]  AssertionError  	26	1	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  sampleSize  =  getSampleSize();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	add	    int  sampleSize  =  getSampleSize();		compilable	  [FE]  AssertionError  	26	1	add
18	[BUG]  [BUGGY]    int  sampleSize  =  getSampleSize();  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  getPopulationSize()  {  [BUGGY]    int  sampleSize  =  getSampleSize();  [BUGGY]  return  populationSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getPopulationSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	170	170	1	replace	    int  sampleSize  =  getSampleSize();		compilable	  [FE]  AssertionError  	26	1	add
