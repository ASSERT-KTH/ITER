projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorsampleSize=rng.getRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)rng.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<0){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<=0){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.null;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)getDataset();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<=0||sampleSize>populationSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)randomGenerator.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.numberOfSuccesses.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(populationSize,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(LocalizedFormats.SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorsampleSize=rng.generateRandomGenerator();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)getDataset().clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<=0||numberOfSuccesses>populationSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorsampleSize=rng.getRandomGenerator(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize(populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)generator.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<=1){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<=0||populationSize>sampleSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.data.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize()+populationSize;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(populationSize<=0||numberOfSuccesses>populationSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize(populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize(populationSize,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.dataset.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(populationSize,populationSize,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(populationSize<=0||populationSize>sampleSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<=0||numberOfSuccesses>sampleSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.data.get(rng);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorsampleSize=rng.getRandomGenerator(numberOfSuccesses,numberSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorsampleSize=rng.getRandomGenerator(populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorsampleSize=rng.generateRandomGenerator(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.randomGenerator.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize()*populationSize;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=populationSize.getSampleSize()+rng;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(LocalizedFormats.SAMPLE_SIZE_LARGER_THAN_POPULATION_SIZE,numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)generator.next();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(populationSize,numberOfSuccesses,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(numberOfSuccesses,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.numberOfSuccesses;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<1){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(populationSize<=0||sampleSize>populationSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(numberOfSuccesses,numberSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)numberOfSuccesses.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize(numberOfSuccesses);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94intsampleSize=rng.getSampleSize()+numberOfSuccesses;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(numberOfSuccesses<=0||numberOfSuccesses>populationSize){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorsampleSize=rng.getRandomGenerator(numberOfSuccesses,populationSize);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.data.get(0);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94if(sampleSize<=0||populationSize>numberOfSuccesses){
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=(RandomGenerator)this.generator.clone();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java94RandomGeneratorrng=RandomGenerator.getInstance(numberOfSuccesses,sampleSize);
