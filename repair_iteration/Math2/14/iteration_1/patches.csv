bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  sampleSize  =  getSampleSize()  +  1;  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  int  sampleSize  =  getSampleSize()  +  1;  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  getSampleSize()  +  1;	      int    sampleSize    =    getSampleSize();    	non-compiled	[CE]  missing  return  statement	4	None	replace
2	[BUG]  [BUGGY]  int  sampleSize  =  this.numberOfSuccesses  -  1;  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  int  sampleSize  =  this.numberOfSuccesses  -  1;  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  this.numberOfSuccesses  -  1;	      int    sampleSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	6	None	replace
3	[BUG]  [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    numberOfSuccesses;    int  numberOfSuccesses  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	13	None	add
4	[BUG]  [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  this.numberOfSuccesses;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    numberOfSuccesses;    int  numberOfSuccesses  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	13	None	add
5	[BUG]  [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    numberOfSuccesses;    int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
6	[BUG]  [BUGGY]  int  sampleSize  =  getNumberOfSuccesses()  +  1;  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  int  sampleSize  =  getNumberOfSuccesses()  +  1;  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  getNumberOfSuccesses()  +  1;	      int    sampleSize    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	2	None	replace
7	[BUG]  [BUGGY]  return  this.populationSize;  int  populationSize  =  this.populationSize;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize;  int  populationSize  =  this.populationSize;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize;    int  populationSize  =  this.populationSize;	  	non-compiled	[CE]  unreachable  statement	9	None	add
8	[BUG]  [BUGGY]  return  this.populationSize;  int  populationSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize;  int  populationSize  =  getNumberOfSuccesses();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize;    int  populationSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	9	None	add
9	[BUG]  [BUGGY]  return  this.populationSize;  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize;  int  sampleSize  =  getSampleSize();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize;    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	9	None	add
10	[BUG]  [BUGGY]      int  sampleSize  =  getSampleSize();  int  sampleSize  =  getSampleSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]    StackOverflowError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  getSampleSize();  int  sampleSize  =  getSampleSize();  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    getSampleSize();    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	3	None	add
11	[BUG]  [BUGGY]      int  sampleSize  =  getSampleSize();  Integer  sampleSize  =  getSampleSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]      StackOverflowError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  getSampleSize();  Integer  sampleSize  =  getSampleSize();  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    getSampleSize();    Integer  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	3	None	add
12	[BUG]  [BUGGY]      int  sampleSize  =  getPopulationSize();  int  sampleSize  =  getPopulationSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  getPopulationSize();  int  sampleSize  =  getPopulationSize();  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    getPopulationSize();    int  sampleSize  =  getPopulationSize();	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	11	None	add
13	[BUG]  [BUGGY]      int  sampleSize  =  getPopulationSize();  Integer  sampleSize  =  getPopulationSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  getPopulationSize();  Integer  sampleSize  =  getPopulationSize();  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    getPopulationSize();    Integer  sampleSize  =  getPopulationSize();	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	11	None	add
14	[BUG]  [BUGGY]  return  this.sampleSize;  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize;  int  sampleSize  =  getSampleSize();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize;    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	7	None	add
15	[BUG]  [BUGGY]  return  this.sampleSize;  int  sampleSize  =  this.sampleSize;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize;  int  sampleSize  =  this.sampleSize;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize;    int  sampleSize  =  this.sampleSize;	  	non-compiled	[CE]  unreachable  statement	7	None	add
16	[BUG]  [BUGGY]  return  this.sampleSize;  this.sampleSize;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize;  this.sampleSize;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize;    this.sampleSize;	  	non-compiled	[CE]  not  a  statement	7	None	add
17	[BUG]  [BUGGY]      int  sampleSize  =  getNumberOfSuccesses();  int  sampleSize  =  getNumberOfSuccesses();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  getNumberOfSuccesses();  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    getNumberOfSuccesses();    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	1	None	add
18	[BUG]  [BUGGY]      int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getNumberOfSuccesses();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getNumberOfSuccesses();  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    getNumberOfSuccesses();    Integer  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	1	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize  -  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  -  1;	  return    this.sampleSize;    	compilable	  [FE]  AssertionError  	8	7	replace
20	[BUG]  [BUGGY]  return  this.sampleSize  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize  -  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  -  1;	  return    this.sampleSize;    	compilable	  [FE]  AssertionError  	8	7	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.sampleSize;    	compilable	  [FE]  AssertionError  	8	7	replace
22	[BUG]  [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.sampleSize;    	compilable	  [FE]  AssertionError  	8	7	replace
23	[BUG]  [BUGGY]      int  sampleSize  =  this.numberOfSuccesses;  int  sampleSize  =  this.numberOfSuccesses;  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  this.numberOfSuccesses;  int  sampleSize  =  this.numberOfSuccesses;  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    this.numberOfSuccesses;    int  sampleSize  =  this.numberOfSuccesses;	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	5	None	add
24	[BUG]  [BUGGY]      int  sampleSize  =  this.numberOfSuccesses;  Integer  sampleSize  =  this.numberOfSuccesses;  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]      int  sampleSize  =  this.numberOfSuccesses;  Integer  sampleSize  =  this.numberOfSuccesses;  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	        int    sampleSize    =    this.numberOfSuccesses;    Integer  sampleSize  =  this.numberOfSuccesses;	  	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	5	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.populationSize;    	compilable	  [FE]  AssertionError  	10	7	replace
26	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.populationSize;    	compilable	  [FE]  AssertionError  	10	7	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize  -  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.populationSize  -  1;	  return    this.populationSize;    	compilable	  [FE]  AssertionError  	10	7	replace
28	[BUG]  [BUGGY]  return  this.populationSize  -  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize  -  1;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.populationSize  -  1;	  return    this.populationSize;    	compilable	  [FE]  AssertionError  	10	7	replace
29	[BUG]  [BUGGY]  int  sampleSize  =  this.populationSize;  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  int  sampleSize  =  this.populationSize;  [BUGGY]    return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  this.populationSize;	      int    sampleSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	6	None	replace
30	[BUG]  [BUGGY]  return  this.sampleSize;  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize;  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize;    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	7	None	add
31	[BUG]  [BUGGY]  return  this.sampleSize;  int  sampleSize  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize;  int  sampleSize  =  this.numberOfSuccesses;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize;    int  sampleSize  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	7	None	add
32	[BUG]  [BUGGY]  return  this.populationSize;  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize;  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize;    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	9	None	add
33	[BUG]  [BUGGY]  return  this.populationSize;  int  sampleSize  =  this.populationSize;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize;  int  sampleSize  =  this.populationSize;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize;    int  sampleSize  =  this.populationSize;	  	non-compiled	[CE]  unreachable  statement	9	None	add
34	[BUG]  [BUGGY]  return  this.populationSize;  int  n  =  this.populationSize;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize;  int  n  =  this.populationSize;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize;    int  n  =  this.populationSize;	  	non-compiled	[CE]  unreachable  statement	9	None	add
35	[BUG]  [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  sampleSize;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  numberOfSuccesses;  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  sampleSize;  }  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    numberOfSuccesses;    int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  sampleSize;  }	  	non-compiled	[CE]  unreachable  statement	13	None	add
36	[BUG]  [BUGGY]  return  numberOfSuccesses;  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  numberOfSuccesses;  int  sampleSize  =  getSampleSize();  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    numberOfSuccesses;    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	13	None	add
37	[BUG]  [BUGGY]  return  numberOfSuccesses;  int  sampleSize  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  numberOfSuccesses;  int  sampleSize  =  this.numberOfSuccesses;  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    numberOfSuccesses;    int  sampleSize  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	13	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);	  return    this.populationSize;    	compilable	  [FE]  AssertionError  	10	8	replace
39	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);	  return    this.populationSize;    	compilable	  [FE]  AssertionError  	10	8	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);	  return    this.sampleSize;    	compilable	  [FE]  AssertionError  	8	5	replace
41	[BUG]  [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  getSampleSize()  {    [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  [BUGGY]    }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);	  return    this.sampleSize;    	compilable	  [FE]  AssertionError  	8	5	replace
