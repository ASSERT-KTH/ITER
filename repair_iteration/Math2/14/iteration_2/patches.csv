bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.numberOfSuccesses  *  numberOfSuccesses;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.numberOfSuccesses  *  numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  sampleSize  =  this.numberOfSuccesses  *  numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	21	None	add
2	[BUG]  [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.numberOfSuccesses  -(this.numberOfSuccesses  *  numberOfSuccesses);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.numberOfSuccesses  -(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  sampleSize  =  this.numberOfSuccesses  -(this.numberOfSuccesses  *  numberOfSuccesses);	  	non-compiled	[CE]  unreachable  statement	21	None	add
3	[BUG]  [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	21	None	add
4	[BUG]  [BUGGY]  Integer  sampleSize  =  this.numberOfSuccesses;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  Integer  sampleSize  =  this.numberOfSuccesses;  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	Integer  sampleSize  =  this.numberOfSuccesses;	          int    sampleSize    =    this.numberOfSuccesses;    Integer    sampleSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	24	None	replace
5	[BUG]  [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getSampleSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]          StackOverflowError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getSampleSize();  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getSampleSize();	          int    sampleSize    =    getSampleSize();    Integer    sampleSize    =    getSampleSize();    	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	11	None	replace
6	[BUG]  [BUGGY]  Integer  sampleSize  =  getSampleSize();  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  Integer  sampleSize  =  getSampleSize();  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	Integer  sampleSize  =  getSampleSize();	          int    sampleSize    =    getSampleSize();    Integer    sampleSize    =    getSampleSize();    	non-compiled	[CE]  missing  return  statement	11	None	replace
7	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  ==  0)  {  return  sampleSize;  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  ==  0)  {  return  sampleSize;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  ==  0)  {  return  sampleSize;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    sampleSize;    }    	non-compiled	[CE]  missing  return  statement	35	None	replace
8	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >  0)  {  return  sampleSize;  }  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >  0)  {  return  sampleSize;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >  0)  {  return  sampleSize;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    sampleSize;    }    	non-compiled	[CE]  missing  return  statement	35	None	replace
9	[BUG]  [BUGGY]  int  sampleSize  =  this.populationSize  +  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  this.populationSize  +  1;  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  this.populationSize  +  1;	  int    sampleSize    =    this.populationSize;    	non-compiled	[CE]  missing  return  statement	29	None	replace
10	[BUG]  [BUGGY]  int  sampleSize  =  this.populationSize  -  1;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  this.populationSize  -  1;  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  this.populationSize  -  1;	  int    sampleSize    =    this.populationSize;    	non-compiled	[CE]  missing  return  statement	29	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  /(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  /(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    	compilable	  [FE]  AssertionError  	22	8	replace
12	[BUG]  [BUGGY]  return  this.sampleSize  /(this.numberOfSuccesses  *  numberOfSuccesses);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  /(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  /(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    	compilable	  [FE]  AssertionError  	22	8	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses  +  1);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses  +  1);	  return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    	compilable	  [FE]  AssertionError  	22	7	replace
14	[BUG]  [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses  +  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses  +  1);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses  +  1);	  return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    	compilable	  [FE]  AssertionError  	22	7	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.populationSize  /(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.populationSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    	compilable	  [FE]  AssertionError  	26	8	replace
16	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  *  numberOfSuccesses);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.populationSize  /(this.numberOfSuccesses  *  numberOfSuccesses);	  return    this.populationSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    	compilable	  [FE]  AssertionError  	26	8	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.populationSize  /  1;	  return    this.populationSize    -    1;    	compilable	  [FE]  AssertionError  	28	7	replace
18	[BUG]  [BUGGY]  return  this.populationSize  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.populationSize  /  1;	  return    this.populationSize    -    1;    	compilable	  [FE]  AssertionError  	28	7	replace
19	[BUG]  [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  this.numberOfSuccesses  -  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	40	None	add
20	[BUG]  [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	40	None	add
21	[BUG]  [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  1;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  this.numberOfSuccesses  -  1;	  	non-compiled	[CE]  unreachable  statement	40	None	add
22	[BUG]  [BUGGY]  int  sampleSize  =  getNumberOfSuccesses()  /  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  getNumberOfSuccesses()  /  1;  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  getNumberOfSuccesses()  /  1;	  int    sampleSize    =    getNumberOfSuccesses()    +    1;    	non-compiled	[CE]  missing  return  statement	6	None	replace
23	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  n  =  this.numberOfSuccesses  *  numberOfSuccesses;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  n  =  this.numberOfSuccesses  *  numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  n  =  this.numberOfSuccesses  *  numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	25	None	add
24	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  n  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  n  =  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  n  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	25	None	add
25	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	25	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  *  sampleSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.populationSize  /(this.numberOfSuccesses  *  sampleSize);	  return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	39	8	replace
27	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  *  sampleSize);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  *  sampleSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.populationSize  /(this.numberOfSuccesses  *  sampleSize);	  return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	39	8	replace
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  1);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.populationSize  /(this.numberOfSuccesses  -  1);	  return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	39	8	replace
29	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  1);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  1);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.populationSize  /(this.numberOfSuccesses  -  1);	  return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	39	8	replace
30	[BUG]  [BUGGY]  int  populationSize  =  this.populationSize;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  populationSize  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  populationSize  =  this.populationSize;	  return    this.populationSize;    int    populationSize    =    this.populationSize;    	non-compiled	[CE]  missing  return  statement	7	None	replace
31	[BUG]  [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  this.numberOfSuccesses;	  return    numberOfSuccesses;    int    numberOfSuccesses    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	4	None	replace
32	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses();	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	3	None	replace
33	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSampleSize();  if(numberOfSuccesses  ==  0)  {  return  numberOfSuccesses;  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSampleSize();  if(numberOfSuccesses  ==  0)  {  return  numberOfSuccesses;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSampleSize();  if(numberOfSuccesses  ==  0)  {  return  numberOfSuccesses;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    numberOfSuccesses;    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
34	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSampleSize();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSampleSize();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSampleSize();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    numberOfSuccesses;    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
35	[BUG]  [BUGGY]  int  sampleSize  =  this.numberOfSuccesses  /  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  this.numberOfSuccesses  /  1;  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  this.numberOfSuccesses  /  1;	  int    sampleSize    =    this.numberOfSuccesses    -    1;    	non-compiled	[CE]  missing  return  statement	2	None	replace
36	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  this.populationSize  -  1;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -    1;    int  this.populationSize  -  1;	  	non-compiled	[CE]  not  a  statement	27	None	add
37	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  n  =  this.populationSize  -  1;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  n  =  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -    1;    int  n  =  this.populationSize  -  1;	  	non-compiled	[CE]  unreachable  statement	27	None	add
38	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -    1;    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	27	None	add
39	[BUG]  [BUGGY]  int  sampleSize  =  this.sampleSize;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  this.sampleSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  this.sampleSize;	  return    this.sampleSize;    int    sampleSize    =    this.sampleSize;    	non-compiled	[CE]  missing  return  statement	15	None	replace
40	[BUG]  [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getPopulationSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getPopulationSize();  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  getNumberOfSuccesses();  Integer  sampleSize  =  getPopulationSize();	          int    sampleSize    =    getPopulationSize();    Integer    sampleSize    =    getPopulationSize();    	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	13	None	replace
41	[BUG]  [BUGGY]  Integer  sampleSize  =  getPopulationSize();  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  Integer  sampleSize  =  getPopulationSize();  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	Integer  sampleSize  =  getPopulationSize();	          int    sampleSize    =    getPopulationSize();    Integer    sampleSize    =    getPopulationSize();    	non-compiled	[CE]  missing  return  statement	13	None	replace
42	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  this.numberOfSuccesses  -  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	38	None	add
43	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	38	None	add
44	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  n  =  this.numberOfSuccesses  -  sampleSize;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  n  =  this.numberOfSuccesses  -  sampleSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    int  n  =  this.numberOfSuccesses  -  sampleSize;	  	non-compiled	[CE]  unreachable  statement	38	None	add
45	[BUG]  [BUGGY]  int  n  =  this.populationSize;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  n  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  n  =  this.populationSize;	  return    this.populationSize;    int    n    =    this.populationSize;    	non-compiled	[CE]  missing  return  statement	34	None	replace
46	[BUG]  [BUGGY]  int  n  =  this.sampleSize;  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  n  =  this.sampleSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  n  =  this.sampleSize;	  return    this.populationSize;    int    n    =    this.populationSize;    	non-compiled	[CE]  missing  return  statement	34	None	replace
47	[BUG]  [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  this.sampleSize  -  1;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  this.sampleSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -    1;    int  sampleSize  =  this.sampleSize  -  1;	  	non-compiled	[CE]  unreachable  statement	19	None	add
48	[BUG]  [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  getSampleSize();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  getSampleSize();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -    1;    int  sampleSize  =  getSampleSize();	  	non-compiled	[CE]  unreachable  statement	19	None	add
49	[BUG]  [BUGGY]  return  this.sampleSize  -  1;  int  this.sampleSize  -  1;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -  1;  int  this.sampleSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -    1;    int  this.sampleSize  -  1;	  	non-compiled	[CE]  not  a  statement	19	None	add
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  1);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  +(this.numberOfSuccesses  -  1);	  return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	41	8	replace
51	[BUG]  [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  1);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  +(this.numberOfSuccesses  -  1);	  return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	41	8	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  /  sampleSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  +(this.numberOfSuccesses  /  sampleSize);	  return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	41	5	replace
53	[BUG]  [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  /  sampleSize);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  /  sampleSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  +(this.numberOfSuccesses  /  sampleSize);	  return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	41	5	replace
54	[BUG]  [BUGGY]  Integer  sampleSize  =  getNumberOfSuccesses();  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  Integer  sampleSize  =  getNumberOfSuccesses();  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	Integer  sampleSize  =  getNumberOfSuccesses();	          int    sampleSize    =    getNumberOfSuccesses();    Integer    sampleSize    =    getNumberOfSuccesses();    	non-compiled	[CE]  missing  return  statement	18	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  /  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  /  1;	  return    this.sampleSize    -    1;    	compilable	  [FE]  AssertionError  	20	1	replace
56	[BUG]  [BUGGY]  return  this.sampleSize  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  /  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  /  1;	  return    this.sampleSize    -    1;    	compilable	  [FE]  AssertionError  	20	1	replace
57	[BUG]  [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -    1;    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	19	None	add
58	[BUG]  [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  this.numberOfSuccesses  -  1;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -  1;  int  sampleSize  =  this.numberOfSuccesses  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -    1;    int  sampleSize  =  this.numberOfSuccesses  -  1;	  	non-compiled	[CE]  unreachable  statement	19	None	add
59	[BUG]  [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  this.numberOfSuccesses  -  1;	  return    numberOfSuccesses;    int    numberOfSuccesses    =    this.numberOfSuccesses;    	non-compiled	[CE]  missing  return  statement	4	None	replace
60	[BUG]  [BUGGY]  return  sampleSize;  int  numberOfSuccesses  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  sampleSize;  int  numberOfSuccesses  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  sampleSize;  int  numberOfSuccesses  =  getNumberOfSuccesses();	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    	non-compiled	[CE]  unreachable  statement	3	None	replace
61	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >  0)  {  return  numberOfSuccesses;  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >  0)  {  return  numberOfSuccesses;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >  0)  {  return  numberOfSuccesses;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    numberOfSuccesses;    }    	non-compiled	[CE]  missing  return  statement	5	None	replace
62	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >=  0)  {  return  numberOfSuccesses;  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >=  0)  {  return  numberOfSuccesses;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses  >=  0)  {  return  numberOfSuccesses;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    numberOfSuccesses;    }    	non-compiled	[CE]  missing  return  statement	5	None	replace
63	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  this.numberOfSuccesses;	  	non-compiled	[CE]  unreachable  statement	38	None	add
64	[BUG]  [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  1;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  /(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    /(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  this.numberOfSuccesses  -  1;	  	non-compiled	[CE]  unreachable  statement	38	None	add
65	[BUG]  [BUGGY]  return  this.sampleSize;  int  sampleSize  =  this.numberOfSuccesses  -  1;  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize;  int  sampleSize  =  this.numberOfSuccesses  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize;  int  sampleSize  =  this.numberOfSuccesses  -  1;	  return    this.sampleSize;    int    sampleSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  unreachable  statement	31	None	replace
66	[BUG]  [BUGGY]  return  this.sampleSize;  int  n  =  this.populationSize;  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize;  int  n  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize;  int  n  =  this.populationSize;	  return    this.populationSize;    int    n    =    this.populationSize;    	non-compiled	[CE]  unreachable  statement	34	None	replace
67	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  this.populationSize  -  1;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  this.populationSize  -  1;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -    1;    int  sampleSize  =  this.populationSize  -  1;	  	non-compiled	[CE]  unreachable  statement	27	None	add
68	[BUG]  [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -  1;  int  sampleSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -    1;    int  sampleSize  =  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	27	None	add
69	[BUG]  [BUGGY]  return  this.sampleSize;  int  populationSize  =  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize;  int  populationSize  =  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize;  int  populationSize  =  getNumberOfSuccesses();	  return    this.populationSize;    int    populationSize    =    getNumberOfSuccesses();    	non-compiled	[CE]  unreachable  statement	8	None	replace
70	[BUG]  [BUGGY]  return  this.sampleSize;  int  populationSize  =  this.populationSize;  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize;  int  populationSize  =  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize;  int  populationSize  =  this.populationSize;	  return    this.populationSize;    int    populationSize    =    this.populationSize;    	non-compiled	[CE]  unreachable  statement	7	None	replace
71	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  sampleSize  =  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);	  	non-compiled	[CE]  unreachable  statement	25	None	add
72	[BUG]  [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.numberOfSuccesses  -(this.numberOfSuccesses  *  numberOfSuccesses);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.populationSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =  this.numberOfSuccesses  -(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.populationSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  sampleSize  =  this.numberOfSuccesses  -(this.numberOfSuccesses  *  numberOfSuccesses);	  	non-compiled	[CE]  unreachable  statement	25	None	add
73	[BUG]  [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  int  sampleSize  =  getPopulationSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  getNumberOfSuccesses();  int  sampleSize  =  getPopulationSize();  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  getNumberOfSuccesses();  int  sampleSize  =  getPopulationSize();	          int    sampleSize    =    getPopulationSize();    int    sampleSize    =    getPopulationSize();    	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	12	None	replace
74	[BUG]  [BUGGY]  int  sampleSize  =  this.numberOfSuccesses  -  1;  Integer  sampleSize  =  this.numberOfSuccesses;  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  this.numberOfSuccesses  -  1;  Integer  sampleSize  =  this.numberOfSuccesses;  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  this.numberOfSuccesses  -  1;  Integer  sampleSize  =  this.numberOfSuccesses;	          int    sampleSize    =    this.numberOfSuccesses;    Integer    sampleSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	24	None	replace
75	[BUG]  [BUGGY]  int  sampleSize  =  getPopulationSize();  Integer  sampleSize  =  getSampleSize();  [CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()  [FE]          StackOverflowError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =  getPopulationSize();  Integer  sampleSize  =  getSampleSize();  [BUGGY]      return  sampleSize;  }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =  getPopulationSize();  Integer  sampleSize  =  getSampleSize();	          int    sampleSize    =    getSampleSize();    Integer    sampleSize    =    getSampleSize();    	non-compiled	[CE]  variable  sampleSize  is  already  defined  in  method  getSampleSize()	11	None	replace
76	[BUG]  [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  getNumberOfSuccesses();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  +(this.numberOfSuccesses  -  sampleSize);  int  sampleSize  =  this.numberOfSuccesses  -  getNumberOfSuccesses();  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    int  sampleSize  =  this.numberOfSuccesses  -  getNumberOfSuccesses();	  	non-compiled	[CE]  unreachable  statement	40	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  /(this.numberOfSuccesses  -  sampleSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	add	return  this.sampleSize  /(this.numberOfSuccesses  -  sampleSize);	  return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	41	8	replace
78	[BUG]  [BUGGY]  return  this.sampleSize  /(this.numberOfSuccesses  -  sampleSize);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  /(this.numberOfSuccesses  -  sampleSize);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return  this.sampleSize  /(this.numberOfSuccesses  -  sampleSize);	  return    this.sampleSize    +(this.numberOfSuccesses    -    sampleSize);    	compilable	  [FE]  AssertionError  	41	8	replace
79	[BUG]  [BUGGY]  int  sampleSize  =(this.populationSize  <  =  0)?  0  :  this.populationSize;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =(this.populationSize  <  =  0)?  0  :  this.populationSize;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =(this.populationSize  <  =  0)?  0  :  this.populationSize;	  return    this.populationSize;    int    populationSize    =    this.populationSize;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  int  sampleSize  =(this.numberOfSuccesses  <  =  0)?  this.numberOfSuccesses  :  numberOfSuccesses;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =(this.numberOfSuccesses  <  =  0)?  this.numberOfSuccesses  :  numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =(this.numberOfSuccesses  <  =  0)?  this.numberOfSuccesses  :  numberOfSuccesses;	  return    numberOfSuccesses;    int    sampleSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
81	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  sampleSize;  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  sampleSize;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  sampleSize;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    sampleSize;    }    	non-compiled	[CE]  missing  return  statement	35	None	replace
82	[BUG]  [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =(this.numberOfSuccesses  *  numberOfSuccesses);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  return  this.sampleSize  -(this.numberOfSuccesses  *  numberOfSuccesses);  int  sampleSize  =(this.numberOfSuccesses  *  numberOfSuccesses);  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	return    this.sampleSize    -(this.numberOfSuccesses    *    numberOfSuccesses);    int  sampleSize  =(this.numberOfSuccesses  *  numberOfSuccesses);	  	non-compiled	[CE]  unreachable  statement	21	None	add
83	[BUG]  [BUGGY]  int  sampleSize  =(this.numberOfSuccesses  <  =  0)?  this.sampleSize  :  this.numberOfSuccesses;  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  sampleSize  =(this.numberOfSuccesses  <  =  0)?  this.sampleSize  :  this.numberOfSuccesses;  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  sampleSize  =(this.numberOfSuccesses  <  =  0)?  this.sampleSize  :  this.numberOfSuccesses;	  return    this.sampleSize;    int    sampleSize    =    this.numberOfSuccesses;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
84	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getNumberOfSuccesses();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    numberOfSuccesses;    }    	non-compiled	[CE]  missing  return  statement	5	None	replace
85	[BUG]  [BUGGY]  int  numberOfSuccesses  =  getPopulationSize();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  int  getSampleSize()  {      [BUGGY]  int  numberOfSuccesses  =  getPopulationSize();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }  [BUGGY]      }  [CLASS]  HypergeometricDistribution  [METHOD]  getSampleSize  [RETURN_TYPE]  int  [VARIABLES]  boolean  numericalVarianceIsCalculated  double  numericalVariance  ret  long  serialVersionUID  int  k  m  n  numberOfSuccesses  populationSize  sampleSize  x  	projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java	0.3333333333333333	179	179	1	replace	int  numberOfSuccesses  =  getPopulationSize();  if(numberOfSuccesses!=  0)  {  return  numberOfSuccesses;  }	  return    numberOfSuccesses;    int    numberOfSuccesses    =    getNumberOfSuccesses();    if(numberOfSuccesses!=    0)    {    return    numberOfSuccesses;    }    	non-compiled	[CE]  missing  return  statement	5	None	replace
