projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N-m))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intn=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublem=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublem=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublem=getPopulationSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-m)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intn=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295n=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295n=getNumberOfSuccesses().doubleValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295finaldoublem=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-m)*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-m)*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-m)*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1))(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublen=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N-1))/(N*N*(N-1));(n*m*(N-n)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N-1))/(N*N*(N-1));(n*m*(N-n)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N-1))/(N*N*(N-1));intn=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublen=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N*n*2))/(N*N*(N-1));doublen=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intn=getNumberOfSuccesses()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295if(n>populationSize){for(inti=0;i<N;i++){m*=N;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intn=getPopulationSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-n)*(N-1))/(N*N*(N-1));doublen=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublem=getSampleSize()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*N*(N-m)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295if(n>0){intsampleSize=getSampleSize();if(sampleSize==N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295if(n>0){intsampleSize=getSampleSize();if(sampleSize>=N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*m*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*N*(N-m)*(N-1))/(N*N*(N-1));(N*(N-m)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*N*(N-m)*(N-1))/(N*N*(N-1));(N*(N-m)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*N*(N-m)*(N-1))/(N*N*(N-1));doublem=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intsampleSize=getSampleSize();if(sampleSize==N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intsampleSize=getSampleSize();if(n==N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295finaldoublen=getNumberOfSuccesses();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295for(inti=0;i<N;i++){m*=N;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295For(inti=0;i<N;i++){m*=N;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-m)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-m)*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*N-1));(n*m*(N-n)*(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295Doublem=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-m)*(N*N-1));(N*n*(N-m)*(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N-1))/(N*N*(N-1));(n*m*(N-1)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N-1))/(N*N*(N-1));n*m*(N-1)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N-1))/(N*N*(N-1));(n*m*(N-1)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295finaldoublem=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N*n*2))/(N*N*(N-1));(n*m*(N-1)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N*n*2))/(N*N*(N-1));(n*m*(N-1)*(N*n*2))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N*n*2))/(N*N*(N-1));doublen=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*N*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*m*(N-1))/(N*N*(N-1));(N*m*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*m*(N-1))/(N*N*(N-1));(N*m*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*m*(N-1))/(N*N*(N-1));doublem=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*n*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-1))/(N*N*(N-1));(N*n*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-1))/(N*N*(N-1));(N*n*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-1))/(N*N*(N-1));doublen=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*n)/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-m)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295n*m*(N-n)*(N*N*(N-1));(n*m*(N-n)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublen=getNumberOfSuccesses()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intsampleSize=getSampleSize();if(sampleSize>=N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intsampleSize=getSampleSize();if(sampleSize!=N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295finaldoublen=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1))/(N*N*(N-1));(n*m*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1))/(N*N*(N-1));n*m*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1))/(N*N*(N-1));(n*m*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublen=getPopulationSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*N*(N-1)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1))(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-m)*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1))(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-1))/(N*N*(N-1));(n*m*(N-n)*(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*N*(N-1))/(N*N*(N-1));(n*m*(N-n)*(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-1))/(N*N*(N-1));(n*m*(N-n)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1))/(N*n*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N-1))/(N*N*(N-1));doublen=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N-1))/(N*N*(N-1));n*m*(N-1)*(N-1))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intnumberOfSuccesses=n>populationSize){for(inti=0;i<N;i++){m*=N;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295intsampleSize=getSampleSize();if(n<N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))(N*N*(N-1)
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*N*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1))/(N*N*2);
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))/(N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))/(N*(N-1)
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*n*2))/(N*N*(N-1)
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-1))/(N*N*(N-1));(N*n*(N-1))/(N*N*(N-1));}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublen=getSampleSize()+1;
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*N*(N-m)*(N-1))/(N*N*(N-1));(N*N*(N-m)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-1))/(N*N*(N-1));(n*m*(N-n)*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*n*2))/(N*N*(N-1));(n*m*(N-n)*(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295doublen=getNumberOfSuccesses().doubleValue();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-m)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-1))/(N*N*(N-1));(n*m*(N-n)*(N-1))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*m*(N-1))/(N*N*(N-1));intsampleSize=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(n*m*(N-n)*(N*N*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1)*(N*n*2))/(N*N*(N-1));intn=getSampleSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295for(inti=0;i<N;i++){m*=n;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*n*(N-1)*(N*n*2))/(N*N*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(n*m*(N-1))/(N*N*(N-1));intdx=getDynamicSize();
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295(N*n*(N-1))/(N*N*(N-1));(N*n*(N-m)*(N-1));
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295IntegersampleSize=getSampleSize();if(sampleSize>=N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295IntegersampleSize=getSampleSize();if(sampleSize==N){returnsampleSize;}
projects/Math2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java295return(N*m*(N-1))/(N*n*(N-1));
