bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  null  :  n.getParent();	  return    n.getParent();    	compilable	  [FE]  RuntimeException  	4	6	replace
2	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getParent();	  return    n.getParent();    	compilable	  [FE]  RuntimeException  	4	6	replace
3	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;	  return    n.getParent();    	compilable	  [FE]  RuntimeException  	4	6	replace
4	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;	  return    n.getParent();    	compilable	  [FE]  RuntimeException  	4	6	replace
5	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;	  return    n.getParent();    	compilable	  [FE]  RuntimeException  	4	6	replace
6	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;	  return    n.getParent();    	compilable	  [FE]  RuntimeException  	4	6	replace
7	[BUG]  [BUGGY]  return  n.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	5	None	add
8	[BUG]  [BUGGY]  return  n.getLastChild();  n  =  n.getLastChild();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  n  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    n  =  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	5	None	add
9	[BUG]  [BUGGY]  return  n.getLastChild();  Node  first  =  n.getLastChild();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  Node  first  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    Node  first  =  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	5	None	add
10	[BUG]  [BUGGY]  return  n.getLastChild();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
11	[BUG]  [BUGGY]  return  n.getLastChild();  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  Node  first  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	5	None	add
12	[BUG]  [BUGGY]  return  n.getLastChild();  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  Node  n  =  first.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    Node  n  =  first.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	5	None	add
13	[BUG]  [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]                RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	5	None	add
14	[BUG]  [BUGGY]  return  n.getLastChild();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]                  RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	5	None	add
15	[BUG]  [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	7	None	add
16	[BUG]  [BUGGY]  return  n.getNext();  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  Node  n  =  first.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    Node  n  =  first.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	7	None	add
17	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	7	None	add
18	[BUG]  [BUGGY]  return  n.getNext();  Node  first  =  n.getNext();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  Node  first  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    Node  first  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	7	None	add
19	[BUG]  [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    Node  n  =  curCfg.getLastChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	7	None	add
20	[BUG]  [BUGGY]  return  n.getNext();  Node  first  =  n.getLastChild();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  Node  first  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    Node  first  =  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	7	None	add
21	[BUG]  [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    Node  n  =  curCfg.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	7	None	add
22	[BUG]  [BUGGY]  return  n.getNext();  n  =  n.getNext();  [CE]  unreachable  statement  [FE]                  RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  n  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    n  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	7	None	add
23	[BUG]  [BUGGY]  return  first.getNext();  [CE]  cannot  find  symbol  first  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  first.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();	  return    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	8	None	replace
24	[BUG]  [BUGGY]  return  nextCfgNode.getNext();  [CE]  cannot  find  symbol  nextCfgNode  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  nextCfgNode.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getNext();	  return    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	8	None	replace
25	[BUG]  [BUGGY]  return  n.getPrevious();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getPrevious();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getPrevious();	  return    n.getNext();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
26	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	        NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	13	6	add
27	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	13	6	add
28	[BUG]  [BUGGY]      Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
29	[BUG]  [BUGGY]      n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	13	None	add
30	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	13	None	add
31	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      Node  nextCfgNode  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	        Node  nextCfgNode  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	13	6	add
32	[BUG]  [BUGGY]      Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      Node  nextCfgNode  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        Node  nextCfgNode  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	13	6	add
33	[BUG]  [BUGGY]      NodeUtil.removeChild(curCfg,  n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      NodeUtil.removeChild(curCfg,  n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        NodeUtil.removeChild(curCfg,  n);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	13	None	add
34	[BUG]  [BUGGY]      NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	13	None	add
35	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      Node  first  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	        Node  first  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	13	6	add
36	[BUG]  [BUGGY]      Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]                  RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      Node  first  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        Node  first  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	13	6	add
37	[BUG]  [BUGGY]  return  n.cloneNoOpStatements();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneNoOpStatements();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneNoOpStatements();	  return    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
38	[BUG]  [BUGGY]  return  first.cloneTree();  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  first.cloneTree();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneTree();	  return    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  first	11	None	replace
39	[BUG]  [BUGGY]  return  n.cloneFunction();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneFunction();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneFunction();	  return    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
40	[BUG]  [BUGGY]  return  fallThrough;  [CE]  cannot  find  symbol  fallThrough  [FE]          AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  fallThrough;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough;	  return    nextCfgNode;    	non-compiled	[CE]  cannot  find  symbol  fallThrough	16	None	replace
41	[BUG]  [BUGGY]  return  curCfgNode;  [CE]  cannot  find  symbol  curCfgNode  [FE]            AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfgNode;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode;	  return    nextCfgNode;    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	16	None	replace
42	[BUG]  [BUGGY]  return  curCfg;  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfg;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg;	  return    nextCfgNode;    	non-compiled	[CE]  incompatible  types	16	None	replace
43	[BUG]  [BUGGY]  return  curCfg.getNode();  [CE]  method  getNode  in  class  LinkedDirectedGraph<N,E>  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfg.getNode();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNode();	  return    nextCfgNode;    	non-compiled	[CE]  method  getNode  in  class  LinkedDirectedGraph<N,E>  cannot  be  applied  to  given  types;	16	None	replace
44	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	10	None	add
45	[BUG]  [BUGGY]  return  n.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	10	None	add
46	[BUG]  [BUGGY]  return  n.cloneTree();  n  =  n.cloneTree();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  n  =  n.cloneTree();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    n  =  n.cloneTree();	  	non-compiled	[CE]  unreachable  statement	10	None	add
47	[BUG]  [BUGGY]  return  n.cloneTree();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  Node  nextCfgNode  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	10	None	add
48	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	10	None	add
49	[BUG]  [BUGGY]  return  n.cloneTree();  n.cloneTree();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  n.cloneTree();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    n.cloneTree();	  	non-compiled	[CE]  unreachable  statement	10	None	add
50	[BUG]  [BUGGY]  return  n.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
51	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                  RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	10	None	add
52	[BUG]  [BUGGY]  return  n.getParent();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	3	None	add
53	[BUG]  [BUGGY]  return  n.getParent();  n  =  n.getParent();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  n  =  n.getParent();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    n  =  n.getParent();	  	non-compiled	[CE]  unreachable  statement	3	None	add
54	[BUG]  [BUGGY]  return  n.getParent();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	3	None	add
55	[BUG]  [BUGGY]  return  n.getParent();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  Node  nextCfgNode  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	3	None	add
56	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	3	None	add
57	[BUG]  [BUGGY]  return  n.getParent();  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  Node  n  =  first.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    Node  n  =  first.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	3	None	add
58	[BUG]  [BUGGY]  return  n.getParent();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
59	[BUG]  [BUGGY]  return  n.getParent();  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    Node  n  =  curCfg.getDirectedGrandparentNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	3	None	add
60	[BUG]  [BUGGY]  return  first.getLastChild();  [CE]  cannot  find  symbol  first  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  first.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLastChild();	  return    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	6	None	replace
61	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  n  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getLastChild();	  return    n.getLastChild();    	compilable	  [FE]  RuntimeException  	6	6	replace
62	[BUG]  [BUGGY]  n  =  n.getLastChild();  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  n  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getLastChild();	  return    n.getLastChild();    	compilable	  [FE]  RuntimeException  	6	6	replace
63	[BUG]  [BUGGY]  return  nextCfgNode.getLastChild();  [CE]  cannot  find  symbol  nextCfgNode  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  nextCfgNode.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getLastChild();	  return    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	6	None	replace
64	[BUG]  [BUGGY]  return  curCfg.getLastChild();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfg.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getLastChild();	  return    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
65	[BUG]  [BUGGY]  return  n.getLastChild()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild()  +  1;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild()  +  1;	  return    n.getLastChild();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	6	None	replace
66	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  n  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getFirstChild();	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
67	[BUG]  [BUGGY]  n  =  n.getFirstChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  n  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
68	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
69	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
70	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
71	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
72	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
73	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;	  return    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	2	6	replace
74	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  first  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	1	None	add
75	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	1	None	add
76	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  n  =  first.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  n  =  first.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	1	None	add
77	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
78	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  first  =  n.getLastChild();  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  first  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  first  =  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	1	None	add
79	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  nextCfgNode  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	1	None	add
80	[BUG]  [BUGGY]  return  n.getFirstChild();  n  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]                RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  n  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    n  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	1	None	add
81	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]                  RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	1	None	add
82	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  n.clone();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.clone()  :  n.clone();	  return    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	9	None	replace
83	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME);  [CE]  clone()  has  protected  access  in  Object  [FE]                  AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME);	  return    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	9	None	replace
84	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                    AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.clone();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.clone();	  return    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	9	None	replace
85	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(0);  [CE]  clone()  has  protected  access  in  Object  [FE]                      AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(0);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(0);	  return    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	9	None	replace
86	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                        AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.clone();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION?  null  :  n.clone();	  return    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	9	None	replace
87	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
88	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
89	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
90	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
91	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
92	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()!=  null;  [CE]  incompatible  types  [FE]                  AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()!=  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
93	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK;  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()!=  Token.BLOCK;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
94	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                      AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
95	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.NAME;  [CE]  incompatible  types  [FE]                        AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.NAME;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
96	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;  [CE]  incompatible  types  [FE]                          AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
97	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;  [CE]  incompatible  types  [FE]                            AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
98	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CALL;  [CE]  incompatible  types  [FE]                              AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CALL;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
99	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	3	None	add
100	[BUG]  [BUGGY]  return  n.getParent();  n  =  n.getNext();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  n  =  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    n  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	3	None	add
101	[BUG]  [BUGGY]  return  n.getParent();  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  Node  n  =  n.getParent();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    Node  n  =  n.getParent();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	3	None	add
102	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()!=  null;  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()!=  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent()!=  null;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
103	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]                      AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  null;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
104	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]                        AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
105	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);  [CE]  incompatible  types  [FE]                          AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
106	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;  [CE]  incompatible  types  [FE]                            AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
107	[BUG]  [BUGGY]  return  n.getNext();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	7	None	add
108	[BUG]  [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  first);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    NodeUtil.removeChild(n,  first);	  	non-compiled	[CE]  cannot  find  symbol  first	7	None	add
109	[BUG]  [BUGGY]  return  n.getNext();  n.getNext();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  n.getNext();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    n.getNext();	  	non-compiled	[CE]  unreachable  statement	7	None	add
110	[BUG]  [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  Node  n  =  curCfg.getParent();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    Node  n  =  curCfg.getParent();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	7	None	add
111	[BUG]  [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	13	None	add
112	[BUG]  [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  [CE]  >  expected  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  >  expected	13	None	add
113	[BUG]  [BUGGY]      NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  first  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      NodeUtil.removeChild(n,  first);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        NodeUtil.removeChild(n,  first);	  	non-compiled	[CE]  cannot  find  symbol  first	13	None	add
114	[BUG]  [BUGGY]  return  n.getGrandparent();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getGrandparent();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getGrandparent();	  return    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
115	[BUG]  [BUGGY]  return  n.getName();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getName();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getName();	  return    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
116	[BUG]  [BUGGY]  return  nextCfgNode.getFirstChild();  [CE]  cannot  find  symbol  nextCfgNode  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  nextCfgNode.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getFirstChild();	  return    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	2	None	replace
117	[BUG]  [BUGGY]  return  first.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  first.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getFirstChild();	  return    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	2	None	replace
118	[BUG]  [BUGGY]  return  curCfg.getFirstChild();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfg.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFirstChild();	  return    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
119	[BUG]  [BUGGY]  return  first.clone();  [CE]  cannot  find  symbol  first  [FE]                AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  first.clone();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.clone();	  return    n.clone();    	non-compiled	[CE]  cannot  find  symbol  first	9	None	replace
120	[BUG]  [BUGGY]  return  curCfg.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                  AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfg.clone();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.clone();	  return    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	9	None	replace
121	[BUG]  [BUGGY]  return  n.remove();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.remove();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.remove();	  return    n.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
122	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	1	None	add
123	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	1	None	add
124	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  curCfg.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  n  =  curCfg.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  n  =  curCfg.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	1	None	add
125	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  null;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
126	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()  ==  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()  ==  null;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
127	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  +  1;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
128	[BUG]  [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
129	[BUG]  [BUGGY]  return  curCfg.cloneTree();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  curCfg.cloneTree();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();	  return    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
130	[BUG]  [BUGGY]  return  n.cloneNoOpStatement();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneNoOpStatement();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneNoOpStatement();	  return    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
131	[BUG]  [BUGGY]  return  n.getFirst();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirst();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirst();	  return    n.getNext();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
132	[BUG]  [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	5	None	add
133	[BUG]  [BUGGY]  return  n.getLastChild();  n  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  n  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    n  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	5	None	add
134	[BUG]  [BUGGY]  return  n.getLastChild();  n.getLastChild();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	5	None	add
135	[BUG]  [BUGGY]  return  n.getLastChild();  Node  n  =  curCfg.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  Node  n  =  curCfg.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    Node  n  =  curCfg.getLastChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	5	None	add
136	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  first  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  first);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    NodeUtil.removeChild(n,  first);	  	non-compiled	[CE]  cannot  find  symbol  first	10	None	add
137	[BUG]  [BUGGY]  return  n.cloneTree();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	10	None	add
138	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.removeFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.removeFirstChild();	  return    n.getLastChild();    	compilable	  [FE]  RuntimeException  	6	6	replace
139	[BUG]  [BUGGY]  return  n.removeFirstChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.removeFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.removeFirstChild();	  return    n.getLastChild();    	compilable	  [FE]  RuntimeException  	6	6	replace
140	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  1;  [CE]  incompatible  types  [FE]                    AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  1;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  1;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
141	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  null;  [CE]  incompatible  types  [FE]                      AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  null;	  return    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	12	None	replace
142	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);	  	non-compiled	[CE]  unreachable  statement	10	None	add
143	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node)  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    NodeTraversal.traverse(compiler,  n);	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node)	10	None	add
144	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.cloneTree();    NodeUtil.removeChild(n);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	10	None	add
145	[BUG]  [BUGGY]  return  n.cloneBlock();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.cloneBlock();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneBlock();	  return    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
146	[BUG]  [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
147	[BUG]  [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [CE]  >  expected  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  >  expected	13	None	add
148	[BUG]  [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n;  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]      List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	        List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n;	  	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	13	None	add
149	[BUG]  [BUGGY]  return  n.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLeadingUnconditionalBranch();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLeadingUnconditionalBranch();	  return    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
150	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
151	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	15	None	replace
152	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	7	None	add
153	[BUG]  [BUGGY]  return  n.getNext();  n.remove();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  n.remove();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    n.remove();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
154	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	7	None	add
155	[BUG]  [BUGGY]  return  n.getNext();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getNext();  n.setNext(n.getNext());  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getNext();    n.setNext(n.getNext());	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
156	[BUG]  [BUGGY]  return  n.getLastChild();  n.setLastChild();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  n.setLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    n.setLastChild();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
157	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeFirstChild();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  n.removeFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    n.removeFirstChild();	  	non-compiled	[CE]  unreachable  statement	5	None	add
158	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(first);  [CE]  cannot  find  symbol  first  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getLastChild();  n.removeChild(first);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getLastChild();    n.removeChild(first);	  	non-compiled	[CE]  cannot  find  symbol  first	5	None	add
159	[BUG]  [BUGGY]  return  nextCfgNode.clone();  [CE]  cannot  find  symbol  nextCfgNode  [FE]                AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  nextCfgNode.clone();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.clone();	  return    n.clone();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	9	None	replace
160	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	1	None	add
161	[BUG]  [BUGGY]  return  n.getFirstChild();  n  =  n.getLastChild();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  n  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    n  =  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	1	None	add
162	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    Node  nextCfgNode  =  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	1	None	add
163	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getFirstChild();    NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	1	None	add
164	[BUG]  [BUGGY]  return  n.getParent();  n  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  n  =  n.getFirstChild();  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    n  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	3	None	add
165	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]      RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	3	None	add
166	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)  [FE]        RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));	  	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)	3	None	add
167	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getParent();    NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
168	[BUG]  [BUGGY]  return  first;  [CE]  cannot  find  symbol  first  [FE]          AssertionFailedError    [CONTEXT]            if  (n  ==  null)  {    [BUGGY]  return  first;  [BUGGY]    }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first;	  return    nextCfgNode;    	non-compiled	[CE]  cannot  find  symbol  first	16	None	replace
