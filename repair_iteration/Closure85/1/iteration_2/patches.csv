bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  curCfg.cloneTree();  n  =  n.getDirectedGraphNode(curCfg);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  n  =  n.getDirectedGraphNode(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  n  =  n.getDirectedGraphNode(curCfg);	  return    n.cloneTree();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
2	[BUG]  [BUGGY]  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.cloneTree();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	137	None	replace
3	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  return    n.cloneTree();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  incompatible  types	137	None	replace
4	[BUG]  [BUGGY]  Node  curCfg  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfg  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfg  =  curCfg.getDirectedGraphNode(n);	  return    n.cloneTree();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
5	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
6	[BUG]  [BUGGY]  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
7	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
9	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
11	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
13	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
15	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getParent()!=  null);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
17	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
19	[BUG]  [BUGGY]  n  =  curCfg.getLastChild();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getLastChild();	  n    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
20	[BUG]  [BUGGY]  n  =  first.getLastChild();  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.getLastChild();	  n    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	62	None	replace
21	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getNext();	  n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	62	6	replace
22	[BUG]  [BUGGY]  n  =  n.getNext();  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getNext();	  n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	62	6	replace
23	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.removeFirstChild();	  n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	62	6	replace
24	[BUG]  [BUGGY]  n  =  n.removeFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.removeFirstChild();	  n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	62	6	replace
25	[BUG]  [BUGGY]  n  =  n.getLastChild();  n.setLastChild();  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getLastChild();  n.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
26	[BUG]  [BUGGY]  Node  n  =  n.getLastChild();  n.setLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  n.getLastChild();  n.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  n.getLastChild();  n.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	156	None	replace
27	[BUG]  [BUGGY]  lastChild  =  n.getLastChild();  lastChild.setLastChild();  [CE]  cannot  find  symbol  lastChild  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  lastChild  =  n.getLastChild();  lastChild.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	lastChild  =  n.getLastChild();  lastChild.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	156	None	replace
28	[BUG]  [BUGGY]  n.setLastChild();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
29	[BUG]  [BUGGY]  lastChild  =  n.getLastChild();  nextCfgNode.setLastChild();  [CE]  cannot  find  symbol  lastChild  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  lastChild  =  n.getLastChild();  nextCfgNode.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	lastChild  =  n.getLastChild();  nextCfgNode.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	156	None	replace
30	[BUG]  [BUGGY]  lastChild  =  n.getLastChild();  n.setLastChild();  [CE]  cannot  find  symbol  lastChild  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  lastChild  =  n.getLastChild();  n.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	lastChild  =  n.getLastChild();  n.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastChild	156	None	replace
31	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  firstCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  firstCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	47	6	replace
32	[BUG]  [BUGGY]  Node  firstCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  firstCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  firstCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	47	6	replace
33	[BUG]  [BUGGY]  Node  nextCfgNode  =  first.getNext();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  first.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	47	None	replace
34	[BUG]  [BUGGY]  Node  nextCfgNode  =  node.getNext();  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  node.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  node.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  node	47	None	replace
35	[BUG]  [BUGGY]  return  curCfgNode.getLastChild();  [CE]  cannot  find  symbol  curCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getLastChild();	  return    nextCfgNode.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	63	None	replace
36	[BUG]  [BUGGY]  return  firstCfgNode.getLastChild();  [CE]  cannot  find  symbol  firstCfgNode  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  firstCfgNode.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  firstCfgNode.getLastChild();	  return    nextCfgNode.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  firstCfgNode	63	None	replace
37	[BUG]  [BUGGY]  return  lastNode.getLastChild();  [CE]  cannot  find  symbol  lastNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  lastNode.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  lastNode.getLastChild();	  return    nextCfgNode.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  lastNode	63	None	replace
38	[BUG]  [BUGGY]  return  nextCfgNode.getFirst();  [CE]  cannot  find  symbol  nextCfgNode  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getFirst();	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	131	None	replace
39	[BUG]  [BUGGY]  return  n.getLast();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLast();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLast();	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
40	[BUG]  [BUGGY]  return  first.getFirst();  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getFirst();	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol  first	131	None	replace
41	[BUG]  [BUGGY]  return  curCfg.getFirst();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFirst();	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
42	[BUG]  [BUGGY]  return  lastNode.getFirst();  [CE]  cannot  find  symbol  lastNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  lastNode.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  lastNode.getFirst();	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol  lastNode	131	None	replace
43	[BUG]  [BUGGY]  return  nextNode.getFirst();  [CE]  cannot  find  symbol  nextNode  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextNode.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextNode.getFirst();	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol  nextNode	131	None	replace
44	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.NAME;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
45	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.NAME;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
46	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.NAME;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
47	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.NAME;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
48	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.NAME;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
49	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.NAME;  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  ';'  expected	95	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	48	None	replace
51	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	48	None	replace
52	[BUG]  [BUGGY]  return  compiler.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
53	[BUG]  [BUGGY]  node.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  node  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.cloneTree();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  node	48	None	replace
54	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  first);  [CE]  cannot  find  symbol  first  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  first);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	48	None	replace
55	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
56	[BUG]  [BUGGY]  n.removeFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
57	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getLastChild();  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
58	[BUG]  [BUGGY]  n  =  n.getLastChild();  n.removeFirstChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getLastChild();  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
59	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  nextCfgNode  =  n.getFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
60	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getFirstChild();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
61	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  nextCfgNode  =  n.getLastChild();  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
62	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n.removeFirstChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getLastChild();  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
63	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  parent.removeFirstChild();  [CE]  cannot  find  symbol  parent  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  parent.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getLastChild();  parent.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  parent	157	None	replace
64	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  noOpStatements.removeFirstChild();  [CE]  cannot  find  symbol  noOpStatements  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  noOpStatements.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getLastChild();  noOpStatements.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  noOpStatements	157	None	replace
65	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.cloneTree();	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
66	[BUG]  [BUGGY]  n  =  n.cloneTree();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.cloneTree();	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
67	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeChild(n);  n.removeChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n.removeChild(n);  n.removeChild(n);	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
68	[BUG]  [BUGGY]  n.removeChild(n);  n.removeChild(n);  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeChild(n);  n.removeChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.removeChild(n);  n.removeChild(n);	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
69	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n.removeChild(n);	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
70	[BUG]  [BUGGY]  n.removeChild(n);  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.removeChild(n);	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
71	[BUG]  [BUGGY]  n.remove();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.remove();	  return    n.cloneTree();    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
72	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getParent();	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
73	[BUG]  [BUGGY]  n  =  n.getParent();  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getParent();	  return    n.cloneTree();    n.cloneTree();    	compilable	  [FE]  RuntimeException  	49	6	replace
74	[BUG]  [BUGGY]  n  =  n.getNext();  n.remove();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getNext();  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getNext();  n.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
75	[BUG]  [BUGGY]  return  first.getNext();  n.remove();  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  n.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  cannot  find  symbol  first	153	None	replace
76	[BUG]  [BUGGY]  Node  first  =  n.getNext();  n.remove();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getNext();  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  n.getNext();  n.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
77	[BUG]  [BUGGY]  Node  n  =  first.getNext();  n.remove();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  first.getNext();  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  first.getNext();  n.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	153	None	replace
78	[BUG]  [BUGGY]  return  n.getParent();  n.remove();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  n.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
79	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.CALL;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incompatible  types	98	None	replace
80	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.CALL;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incompatible  types	98	None	replace
81	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.CALL;  [CE]  incompatible  types  [FE]                                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incompatible  types	98	None	replace
82	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CALL;  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  ';'  expected	98	None	replace
83	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.CALL;  [CE]  incompatible  types  [FE]                                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incompatible  types	98	None	replace
84	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.CALL;  [CE]  incompatible  types  [FE]                                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incompatible  types	98	None	replace
85	[BUG]  [BUGGY]  return  curCfg.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.cloneTree();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
86	[BUG]  [BUGGY]  node.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  node  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.cloneTree();  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.cloneTree();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  node	45	None	replace
87	[BUG]  [BUGGY]  n  =  compiler.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  compiler.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  compiler.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
88	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
89	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
90	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
91	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
92	[BUG]  [BUGGY]  n.removeChild(compiler);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeChild(compiler);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.removeChild(compiler);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  method  removeChild  in  class  Node  cannot  be  applied  to  given  types;	160	None	replace
93	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
95	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	106	None	replace
96	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getFirstChild()!=  null;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	106	None	replace
97	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getLastChild()!=  null;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getLastChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getLastChild()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	106	None	replace
98	[BUG]  [BUGGY]  return  first.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;  [CE]  cannot  find  symbol  first  [FE]                                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  cannot  find  symbol  first	106	None	replace
99	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null;  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  ';'  expected	106	None	replace
100	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newString(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newString(Token.NAME);	  return    curCfgNode;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	41	None	replace
101	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newNumber(0);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newNumber(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newNumber(0);	  return    curCfgNode;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	41	None	replace
102	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  nextCfgNode  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  nextCfgNode  :  Node.newString(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  nextCfgNode  :  Node.newString(Token.NAME);	  return    curCfgNode;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	41	None	replace
103	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newString(Token.NAME));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newString(Token.NAME));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION?  nextCfgNode  :  Node.newString(Token.NAME));	  return    curCfgNode;    	non-compiled	[CE]  ';'  expected	41	None	replace
104	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  nextCfgNode  :  Node.newString(Token.BLOCK);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  nextCfgNode  :  Node.newString(Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  nextCfgNode  :  Node.newString(Token.BLOCK);	  return    curCfgNode;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	41	None	replace
105	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  nextCfgNode  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  nextCfgNode  :  Node.newString(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  nextCfgNode  :  Node.newString(Token.NAME);	  return    curCfgNode;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	41	None	replace
106	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "____________________________________________________  [CE]  unclosed  string  literal  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "____________________________________________________  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "____________________________________________________	  return    fallThrough;    	non-compiled	[CE]  unclosed  string  literal	40	None	replace
107	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "___________________________________________________  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "___________________________________________________  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "___________________________________________________	  return    fallThrough;    	non-compiled	[CE]  unclosed  string  literal	40	None	replace
108	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "_____________________________________________________  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "_____________________________________________________  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "_____________________________________________________	  return    fallThrough;    	non-compiled	[CE]  unclosed  string  literal	40	None	replace
109	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "__________________________________________________  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "__________________________________________________  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "__________________________________________________	  return    fallThrough;    	non-compiled	[CE]  unclosed  string  literal	40	None	replace
110	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "______________________________________________________  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "______________________________________________________  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "______________________________________________________	  return    fallThrough;    	non-compiled	[CE]  unclosed  string  literal	40	None	replace
111	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "_________________________________________________  [CE]  unclosed  string  literal  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "_________________________________________________  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  Node.newString(Token.NAME):  Node.newString( "_________________________________________________	  return    fallThrough;    	non-compiled	[CE]  unclosed  string  literal	40	None	replace
112	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  first  =  n.getLastChild();	          Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	36	6	replace
113	[BUG]  [BUGGY]  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  n.getLastChild();	          Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	36	6	replace
114	[BUG]  [BUGGY]  Node  first  =  curCfg.getFirstChild();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  curCfg.getFirstChild();	          Node    first    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
115	[BUG]  [BUGGY]  Node  first  =  nextCfgNode.getFirstChild();  [CE]  cannot  find  symbol  nextCfgNode  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  nextCfgNode.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  nextCfgNode.getFirstChild();	          Node    first    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	36	None	replace
116	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  first  =  n.removeFirstChild();	          Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	36	6	replace
117	[BUG]  [BUGGY]  Node  first  =  n.removeFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  n.removeFirstChild();	          Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	36	6	replace
118	[BUG]  [BUGGY]  Node  first  =  node.getFirstChild();  [CE]  cannot  find  symbol  node  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  node.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  node.getFirstChild();	          Node    first    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  node	36	None	replace
119	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	17	None	replace
120	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  n);  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  first,  n);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	17	None	replace
121	[BUG]  [BUGGY]  return  compiler.getNext();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.getNext();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.getNext();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
122	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  null);  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  first,  null);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	17	None	replace
123	[BUG]  [BUGGY]  return  parent.getGrandparent();  [CE]  cannot  find  symbol  parent  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.getGrandparent();	  return    n.getGrandparent();    	non-compiled	[CE]  cannot  find  symbol  parent	114	None	replace
124	[BUG]  [BUGGY]  return  first.getGrandparent();  [CE]  cannot  find  symbol  first  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getGrandparent();	  return    n.getGrandparent();    	non-compiled	[CE]  cannot  find  symbol  first	114	None	replace
125	[BUG]  [BUGGY]  return  nextCfgNode.getGrandparent();  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getGrandparent();	  return    n.getGrandparent();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	114	None	replace
126	[BUG]  [BUGGY]  return  curCfg.getGrandparent();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getGrandparent();	  return    n.getGrandparent();    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
127	[BUG]  [BUGGY]  return  node.getGrandparent();  [CE]  cannot  find  symbol  node  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.getGrandparent();	  return    n.getGrandparent();    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
128	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [CE]  not  a  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  not  a  statement	70	None	add
129	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();	  	non-compiled	[CE]  not  a  statement	70	None	add
130	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	70	None	add
131	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    Node  n  =  n.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	70	None	add
132	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	70	None	add
133	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	70	None	add
134	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();  [CE]  not  a  statement  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();	  	non-compiled	[CE]  not  a  statement	70	None	add
135	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    n  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	70	None	add
136	[BUG]  [BUGGY]  return  curCfg.clone()?  null  :  curCfg.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.clone()?  null  :  curCfg.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.clone()?  null  :  curCfg.clone();	  return    curCfg.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	120	None	replace
137	[BUG]  [BUGGY]  n  =  curCfg.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.clone();	  return    curCfg.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	120	None	replace
138	[BUG]  [BUGGY]  return  curCfg.clone()  &&!removeNoOpStatements;  [CE]  clone()  has  protected  access  in  Object  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.clone()  &&!removeNoOpStatements;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.clone()  &&!removeNoOpStatements;	  return    curCfg.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	120	None	replace
139	[BUG]  [BUGGY]  return  curCfg.clone()  &&!cfgStack.isEmpty();  [CE]  clone()  has  protected  access  in  Object  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.clone()  &&!cfgStack.isEmpty();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.clone()  &&!cfgStack.isEmpty();	  return    curCfg.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	120	None	replace
140	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	NodeTraversal.traverse(compiler,  n,  null);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	13	6	replace
141	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  null);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	13	6	replace
142	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Traversal  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traversal.traverse(compiler,  n,  this);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Traversal	13	None	replace
143	[BUG]  [BUGGY]  node.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  node  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.traverse(compiler,  n,  this);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  node	13	None	replace
144	[BUG]  [BUGGY]  Traverse.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Traverse  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traverse.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traverse.traverse(compiler,  n,  this);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Traverse	13	None	replace
145	[BUG]  [BUGGY]  return  curCfgNode.getFirstChild();  [CE]  cannot  find  symbol  curCfgNode  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getFirstChild();	  return    nextCfgNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	116	None	replace
146	[BUG]  [BUGGY]  return  fallThrough.getFirstChild();  [CE]  cannot  find  symbol  fallThrough  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.getFirstChild();	  return    nextCfgNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  fallThrough	116	None	replace
147	[BUG]  [BUGGY]  return  curCfgNode.clone();  [CE]  cannot  find  symbol  curCfgNode  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.clone();	  return    nextCfgNode.clone();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	159	None	replace
148	[BUG]  [BUGGY]  return  firstCfgNode.clone();  [CE]  cannot  find  symbol  firstCfgNode  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  firstCfgNode.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  firstCfgNode.clone();	  return    nextCfgNode.clone();    	non-compiled	[CE]  cannot  find  symbol  firstCfgNode	159	None	replace
149	[BUG]  [BUGGY]  return  rootNode.clone();  [CE]  cannot  find  symbol  rootNode  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  rootNode.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  rootNode.clone();	  return    nextCfgNode.clone();    	non-compiled	[CE]  cannot  find  symbol  rootNode	159	None	replace
150	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  first  =  n.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  variable  first  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	35	None	add
151	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  first  =  n.getLastChild();  [CE]  variable  first  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  first  =  n.getLastChild();	  	non-compiled	[CE]  variable  first  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	35	None	add
152	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Node  next  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
153	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getLastChild();  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  next  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
154	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  second  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Node  second  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
155	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  second  =  n.getLastChild();  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  second  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  second  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
156	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  second  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Node  second  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
157	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  second  =  n.getFirstChild();  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  second  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  second  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
158	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  first  =  n.getNext();  [CE]  variable  first  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  first  =  n.getNext();	  	non-compiled	[CE]  variable  first  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	35	None	add
159	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Node  next  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	35	6	add
160	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getNext();  [FE]  RuntimeException  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  next  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	35	6	add
161	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    n  =  first.getFirstChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
162	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  n  =  first.getFirstChild();  [FE]  RuntimeException  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    n  =  first.getFirstChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
163	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n.getType()  ==  Token.CALL?  null  :  n.getParent();  [CE]  not  a  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n.getType()  ==  Token.CALL?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    n.getType()  ==  Token.CALL?  null  :  n.getParent();	  	non-compiled	[CE]  not  a  statement	1	None	add
164	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	1	None	add
165	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n.getType()  ==  Token.CALL  :  n.getParent();  [CE]  not  a  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n.getType()  ==  Token.CALL  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    n.getType()  ==  Token.CALL  :  n.getParent();	  	non-compiled	[CE]  not  a  statement	1	None	add
166	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
167	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n.getType()  ==  Token.CALL?  null  :  n.getNext();  [CE]  not  a  statement  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n.getType()  ==  Token.CALL?  null  :  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    n.getType()  ==  Token.CALL?  null  :  n.getNext();	  	non-compiled	[CE]  not  a  statement	1	None	add
168	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	1	None	add
169	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	1	None	add
170	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  n  =  curCfg.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  Node  n  =  curCfg.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    Node  n  =  curCfg.getParent();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	1	None	add
171	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	79	6	replace
172	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	79	6	replace
173	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.getFirstChild();  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.getFirstChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
174	[BUG]  [BUGGY]  Node  nextCfgNode  =  first.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  first.getFirstChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	79	None	replace
175	[BUG]  [BUGGY]  Node  nextCfgNode  =  node.getFirstChild();  [CE]  cannot  find  symbol  node  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  node.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  node.getFirstChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  node	79	None	replace
176	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getParent()!=  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getParent()!=  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getParent()!=  null);  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
177	[BUG]  [BUGGY]  node  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node  =  curCfg.getDirectedGraphNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  node	52	None	replace
178	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
179	[BUG]  [BUGGY]  return  curCfg,  n.cloneTree();  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg,  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg,  n.cloneTree();	  return    curCfg.cloneTree();    	non-compiled	[CE]  ';'  expected	129	None	replace
180	[BUG]  [BUGGY]  return  curCfg.getParent().cloneTree();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getParent().cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getParent().cloneTree();	  return    curCfg.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
181	[BUG]  [BUGGY]  return  curCfg.cloneTree(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree(n);	  return    curCfg.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
182	[BUG]  [BUGGY]  return  curCfg.cloneNoOpStatements();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneNoOpStatements();	  return    curCfg.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
183	[BUG]  [BUGGY]  return  curCfgNode.cloneTree();  [CE]  cannot  find  symbol  curCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.cloneTree();	  return    curCfg.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	129	None	replace
184	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n    =    n.getFirstChild();    n  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	66	6	add
185	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	66	6	add
186	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n    =    n.getFirstChild();    n  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	66	6	add
187	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getLastChild();  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	66	6	add
188	[BUG]  [BUGGY]  n  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    Node  n  =  n.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	66	None	add
189	[BUG]  [BUGGY]  n  =  n.getFirstChild();  Node  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    Node  n  =  n.getLastChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	66	None	add
190	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  curCfg.getFirstChild();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  curCfg.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
191	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n    =    n.getFirstChild();    n  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	66	6	add
192	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getNext();  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	66	6	add
193	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  first.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  first.getFirstChild();	  	non-compiled	[CE]  cannot  find  symbol  first	66	None	add
194	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  first.clone()  :  n.clone();  [CE]  cannot  find  symbol  first  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  first.clone()  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  first.clone()  :  n.clone();	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  cannot  find  symbol  first	82	None	replace
195	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  null;  [CE]  clone()  has  protected  access  in  Object  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.clone()  :  null;	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	82	None	replace
196	[BUG]  [BUGGY]  return  n.getType()!=  Token.NAME?  n.clone()  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.NAME?  n.clone()  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.NAME?  n.clone()  :  n.clone();	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	82	None	replace
197	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.clone(n.clone());  [CE]  clone()  has  protected  access  in  Object  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.clone(n.clone());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.clone(n.clone());	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	82	None	replace
198	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME  &&  n.clone()  :  n.clone();  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME  &&  n.clone()  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME  &&  n.clone()  :  n.clone();	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  ';'  expected	82	None	replace
199	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  first);  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  first);	          NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	34	None	replace
200	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  removeNoOpStatements);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,boolean)  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  removeNoOpStatements);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  removeNoOpStatements);	          NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,boolean)	34	None	replace
201	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  last);  [CE]  cannot  find  symbol  last  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  last);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  last);	          NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  last	34	None	replace
202	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [CE]  cannot  find  symbol  root  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  root);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  root);	          NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  root	34	None	replace
203	[BUG]  [BUGGY]  return  first.getNext();  n.getNext();  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  n.getNext();	  return    n.getNext();    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	109	None	replace
204	[BUG]  [BUGGY]  return  n.getFirstChild();  n.getNext();  [CE]  unreachable  statement  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  n.getNext();	  return    n.getNext();    n.getNext();    	non-compiled	[CE]  unreachable  statement	109	None	replace
205	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent()!=  null;  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	92	None	replace
206	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext()!=  null;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	92	None	replace
207	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent()!=  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	92	None	replace
208	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()!=  null;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent()!=    null;    	non-compiled	[CE]  ';'  expected	92	None	replace
209	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	94	None	replace
210	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	94	None	replace
211	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	94	None	replace
212	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	94	None	replace
213	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	94	None	replace
214	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	94	None	replace
215	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
216	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  null;  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
217	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getNext()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getNext()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
218	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getNext()  :  null;  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getNext()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getNext()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
219	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getFirstChild()  :  null;  [CE]  cannot  find  symbol  first  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  first.getFirstChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  first	73	None	replace
220	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
221	[BUG]  [BUGGY]  return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  null;  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
222	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  Integer.MAX_VALUE;  [CE]  incompatible  types  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  Integer.MAX_VALUE;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  Integer.MAX_VALUE;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	non-compiled	[CE]  incompatible  types	73	None	replace
223	[BUG]  [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.CALL?  null  :  n.clone();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	84	None	replace
224	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.CALL?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.CALL?  null  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.CALL?  null  :  n.clone();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	84	None	replace
225	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.NAME?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.NAME?  null  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.NAME?  null  :  n.clone();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	84	None	replace
226	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  null  :  n.cloneTree();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	compilable	  [FE]  RuntimeException  	84	6	replace
227	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.cloneTree();  [FE]  RuntimeException  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.cloneTree();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	compilable	  [FE]  RuntimeException  	84	6	replace
228	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.toString();  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.toString();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.toString();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	non-compiled	[CE]  incompatible  types	84	None	replace
229	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	NodeUtil.redeclareVarsInsideBranch(n);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	compilable	  [FE]  RuntimeException  	142	6	replace
230	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(n);  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.redeclareVarsInsideBranch(n);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	compilable	  [FE]  RuntimeException  	142	6	replace
231	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	compilable	  [FE]  RuntimeException  	142	6	replace
232	[BUG]  [BUGGY]  n  =  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n);  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	compilable	  [FE]  RuntimeException  	142	6	replace
233	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n,  outEdges);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	142	None	replace
234	[BUG]  [BUGGY]  n  =  NodeUtil.redeclareVarsInsideBranch(n);  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  NodeUtil.redeclareVarsInsideBranch(n);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	non-compiled	[CE]  incompatible  types	142	None	replace
235	[BUG]  [BUGGY]  NodeUtil.removeVarsInsideBranch(n);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeVarsInsideBranch(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeVarsInsideBranch(n);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
236	[BUG]  [BUGGY]  return  curCfgNode.cloneTree();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  curCfgNode  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.cloneTree();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.cloneTree();  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	50	None	replace
237	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  curCfgNode  =  n.cloneTree();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	50	6	replace
238	[BUG]  [BUGGY]  Node  curCfgNode  =  n.cloneTree();  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.cloneTree();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	50	6	replace
239	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.cloneTree();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.cloneTree();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
240	[BUG]  [BUGGY]  n  =  curCfg.cloneTree();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.cloneTree();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.cloneTree();  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
241	[BUG]  [BUGGY]  return  curCfg.cloneTree();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
242	[BUG]  [BUGGY]  Node  curCfgNode  =  n.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
243	[BUG]  [BUGGY]  return  curCfg.cloneFunction();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneFunction();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneFunction();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
244	[BUG]  [BUGGY]  return  n.cloneCfgNode();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneCfgNode();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneCfgNode();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
245	[BUG]  [BUGGY]  return  first.cloneFunction();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneFunction();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneFunction();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol  first	39	None	replace
246	[BUG]  [BUGGY]  return  n.cloneCfg();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneCfg();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneCfg();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
247	[BUG]  [BUGGY]  return  n.cloneStatement();  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneStatement();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
248	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
249	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
250	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
252	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
253	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
254	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
255	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
256	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
257	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
258	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getEndEdges();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getEndEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getEndEdges();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
259	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode(n);	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  incompatible  types	112	None	replace
260	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getExpressions();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getExpressions();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getExpressions();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
261	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode();  [CE]  no  suitable  method  found  for  getDirectedGraphNode()  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode()	112	None	replace
262	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getLastChild();  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	11	6	replace
263	[BUG]  [BUGGY]  n  =  n.getLastChild();  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getLastChild();  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	11	6	replace
264	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)	166	None	replace
265	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));  [CE]  unclosed  string  literal  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  unclosed  string  literal	166	None	replace
266	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "UnconditionalBranch "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "UnconditionalBranch "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "UnconditionalBranch "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)	166	None	replace
267	[BUG]  [BUGGY]  nodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [CE]  cannot  find  symbol  nodeTraversal  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  nodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	nodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  nodeTraversal	166	None	replace
268	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  new  RuntimeException( " "));  [CE]  cannot  find  symbol  Traversal  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traversal.traverse(compiler,  n,  new  RuntimeException( " "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traversal.traverse(compiler,  n,  new  RuntimeException( " "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  Traversal	166	None	replace
269	[BUG]  [BUGGY]  Traverse.traverse(compiler,  n,  new  RuntimeException( " "));  [CE]  cannot  find  symbol  Traverse  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traverse.traverse(compiler,  n,  new  RuntimeException( " "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traverse.traverse(compiler,  n,  new  RuntimeException( " "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  Traverse	166	None	replace
270	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n  =  nextCfgNode.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  nextCfgNode  =  n.getLastChild();  n  =  nextCfgNode.getFirstChild();	  return    n.getLastChild();    n    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	133	6	replace
271	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n  =  nextCfgNode.getFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n  =  nextCfgNode.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getLastChild();  n  =  nextCfgNode.getFirstChild();	  return    n.getLastChild();    n    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	133	6	replace
272	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n  =  firstCfgNode.getFirstChild();  [CE]  cannot  find  symbol  firstCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getLastChild();  n  =  firstCfgNode.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getLastChild();  n  =  firstCfgNode.getFirstChild();	  return    n.getLastChild();    n    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  firstCfgNode	133	None	replace
273	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  n.getFirstChild();	  return    n.getLastChild();    n    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	133	None	replace
274	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getUnconditionalBranch();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getUnconditionalBranch();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
275	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfgEdges();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfgEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfgEdges();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
276	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getInEdges();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getInEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getInEdges();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
277	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfg();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfg();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfg();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
278	[BUG]  [BUGGY]  return  nextCfgNode.getPrevious();  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	25	None	replace
279	[BUG]  [BUGGY]  return  first.getPrevious();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  cannot  find  symbol  first	25	None	replace
280	[BUG]  [BUGGY]  return  nextNode.getPrevious();  [CE]  cannot  find  symbol  nextNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextNode.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextNode.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  cannot  find  symbol  nextNode	25	None	replace
281	[BUG]  [BUGGY]  return  node.getPrevious();  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  cannot  find  symbol  node	25	None	replace
282	[BUG]  [BUGGY]  return  lastNode.getPrevious();  [CE]  cannot  find  symbol  lastNode  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  lastNode.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  lastNode.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  cannot  find  symbol  lastNode	25	None	replace
283	[BUG]  [BUGGY]  Node  n  =  curCfg.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  curCfg.getLastChild();	  return    n.getNext();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	19	None	replace
284	[BUG]  [BUGGY]  Node  first  =  curCfg.getLastChild();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  curCfg.getLastChild();	  return    n.getNext();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
285	[BUG]  [BUGGY]  node  =  curCfg.getLastChild();  [CE]  cannot  find  symbol  node  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node  =  curCfg.getLastChild();	  return    n.getNext();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	19	None	replace
286	[BUG]  [BUGGY]  Node  n  =  curCfg.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  curCfg.getFirstChild();	  return    n.getNext();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	19	None	replace
287	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
288	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
289	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getString()  :  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getString()  :  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT?  n.getString()  :  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
290	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
291	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getType()  :  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getType()  :  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT?  n.getType()  :  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
292	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  +  2;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  +  2;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  +  2;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
293	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	NodeUtil.removeChild(n,  n);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	compilable	  [FE]  RuntimeException  	144	6	replace
294	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  n);  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  n);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	compilable	  [FE]  RuntimeException  	144	6	replace
295	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  outEdges);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	144	None	replace
296	[BUG]  [BUGGY]  n  =  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	144	None	replace
297	[BUG]  [BUGGY]  NodeUtil.removeChild(n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	144	None	replace
298	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  noOpStatements);  [CE]  cannot  find  symbol  noOpStatements  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  noOpStatements);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  noOpStatements);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  noOpStatements	144	None	replace
299	[BUG]  [BUGGY]  n  =  n.cloneTree();  NodeUtil.removeChild(n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.cloneTree();  NodeUtil.removeChild(n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.cloneTree();  NodeUtil.removeChild(n,  outEdges);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	144	None	replace
300	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	138	None	add
301	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	138	None	add
302	[BUG]  [BUGGY]  return  n.removeFirstChild();  n.removeFirstChild();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    n.removeFirstChild();	  	non-compiled	[CE]  unreachable  statement	138	None	add
303	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	138	None	add
304	[BUG]  [BUGGY]  return  n.removeFirstChild();  n  =  n.removeFirstChild();  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  n  =  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    n  =  n.removeFirstChild();	  	non-compiled	[CE]  unreachable  statement	138	None	add
305	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	138	None	add
306	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	138	None	add
307	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeUtil.removeFirstChild(n);  [CE]  cannot  find  symbol  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  NodeUtil.removeFirstChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    NodeUtil.removeFirstChild(n);	  	non-compiled	[CE]  cannot  find  symbol	138	None	add
308	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  null  :  n.getNext();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
309	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getNext();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getNext();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
310	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  null  :  n.getLastChild();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
311	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getLastChild();  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getLastChild();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
312	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getChildCount();  [CE]  incompatible  types  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getChildCount();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getChildCount();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	non-compiled	[CE]  incompatible  types	2	None	replace
313	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.getParent()!=  null?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL  &&  n.getParent()!=  null?  null  :  n.getParent();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
314	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.getParent()!=  null?  null  :  n.getParent();  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.getParent()!=  null?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL  &&  n.getParent()!=  null?  null  :  n.getParent();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
315	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getName();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getName();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
316	[BUG]  [BUGGY]  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  n.getParent();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
317	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  Node  n  =  n.getParent();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
318	[BUG]  [BUGGY]  Node  n  =  n.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  n.getNext();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
319	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  n.getParent();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
320	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  n.getParent();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
321	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.getParent();  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.getParent();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	148	None	replace
322	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  n;  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  n;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  n;	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
323	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.outEdges;  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.outEdges;	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	148	None	replace
324	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.cloneTree();  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n.cloneTree();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	148	None	replace
325	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n  +  1;  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n  +  1;	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	148	None	replace
326	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getInEdges();  return  n;  [CE]  no  suitable  method  found  for  getInEdges()  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getInEdges();  return  n;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getInEdges();  return  n;	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  no  suitable  method  found  for  getInEdges()	148	None	replace
327	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  outEdges,  new  ControlFlowGraph());  [CE]  cannot  find  symbol  outEdges  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  outEdges,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  outEdges,  new  ControlFlowGraph());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol  outEdges	165	None	replace
328	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  null,  new  ControlFlowGraph());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	165	None	replace
329	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  this,  new  ControlFlowGraph());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	165	None	replace
330	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  first,  new  ControlFlowGraph());  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  first,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  first,  new  ControlFlowGraph());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol  first	165	None	replace
331	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  first,  new  ControlFlowGraph());  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  first,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  first,  new  ControlFlowGraph());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol  first	165	None	replace
332	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph  <  N>());  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph  <  N>());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph  <  N>());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
333	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	99	None	replace
334	[BUG]  [BUGGY]  node.getParent();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.getParent();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.getParent();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  node	99	None	replace
335	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  null,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  null,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  null,  outEdges);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	99	None	replace
336	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()!=  Token.CALL?  null  :  n.getFirstChild();	  return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	69	6	replace
337	[BUG]  [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.getFirstChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.CALL?  null  :  n.getFirstChild();	  return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	69	6	replace
338	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getLocalPart();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getLocalPart();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getLocalPart();	  return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
339	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getParent()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	103	None	replace
340	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getParent()!=  null;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getParent()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	103	None	replace
341	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getNext()  ==  null;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getNext()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getNext()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	103	None	replace
342	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getParent()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	103	None	replace
343	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traversal.traverse(compiler,  n,  new  ControlFlowGraph());	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	51	None	replace
344	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  curCfgNode  =  n.getFirstChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	77	6	replace
345	[BUG]  [BUGGY]  Node  curCfgNode  =  n.getFirstChild();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.getFirstChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	77	6	replace
346	[BUG]  [BUGGY]  return  curCfgNode.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  curCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getFirstChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	77	None	replace
347	[BUG]  [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
348	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION?  null  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.FUNCTION?  null  :  n.clone();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	86	None	replace
349	[BUG]  [BUGGY]  return  n.getType()!=  Token.FUNCTION?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.FUNCTION?  null  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.FUNCTION?  null  :  n.clone();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	86	None	replace
350	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME?  null  :  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME?  null  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME?  null  :  n.clone();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	86	None	replace
351	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent().clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent().clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent().clone();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	86	None	replace
352	[BUG]  [BUGGY]  return  curCfg.cloneNoOpStatement();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneNoOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneNoOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
353	[BUG]  [BUGGY]  return  nextCfgNode.cloneNoOpStatement();  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.cloneNoOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.cloneNoOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	130	None	replace
354	[BUG]  [BUGGY]  return  n.cloneOpStatement();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
355	[BUG]  [BUGGY]  return  curCfgNode.cloneNoOpStatement();  [CE]  cannot  find  symbol  curCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.cloneNoOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.cloneNoOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	130	None	replace
356	[BUG]  [BUGGY]  return  first.cloneNoOpStatement();  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneNoOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneNoOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol  first	130	None	replace
357	[BUG]  [BUGGY]  return  n.cloneNoOpStatement(removeNoOpStatements);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneNoOpStatement(removeNoOpStatements);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneNoOpStatement(removeNoOpStatements);	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
358	[BUG]  [BUGGY]  return  curCfg.getParent();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getParent();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getParent();  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getParent();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
359	[BUG]  [BUGGY]  return  curCfg.getParent();  n  =  n.getDirectedGraphNode(curCfg);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getParent();  n  =  n.getDirectedGraphNode(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getParent();  n  =  n.getDirectedGraphNode(curCfg);	  return    n.getParent();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
360	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getString()  :  null;  [CE]  incompatible  types  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getString()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getString()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    	non-compiled	[CE]  incompatible  types	4	None	replace
361	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getParent()  :  null;  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  first.getParent()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    	non-compiled	[CE]  cannot  find  symbol  first	4	None	replace
362	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getName()  :  null;  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getName()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getName()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
363	[BUG]  [BUGGY]  return  n.getNode();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNode();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNode();	  return    curCfg.getNode();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
364	[BUG]  [BUGGY]  return  curCfg.getNode(),  n;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNode(),  n;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNode(),  n;	  return    curCfg.getNode();    	non-compiled	[CE]  ';'  expected	43	None	replace
365	[BUG]  [BUGGY]  return  curCfg.getNode(),  n);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNode(),  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNode(),  n);	  return    curCfg.getNode();    	non-compiled	[CE]  ';'  expected	43	None	replace
366	[BUG]  [BUGGY]  return  curCfg.getNode(),  outEdges;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNode(),  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNode(),  outEdges;	  return    curCfg.getNode();    	non-compiled	[CE]  ';'  expected	43	None	replace
367	[BUG]  [BUGGY]  n  =  curCfg.getNode();  [CE]  method  getNode  in  class  LinkedDirectedGraph<N,E>  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getNode();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getNode();	  return    curCfg.getNode();    	non-compiled	[CE]  method  getNode  in  class  LinkedDirectedGraph<N,E>  cannot  be  applied  to  given  types;	43	None	replace
368	[BUG]  [BUGGY]  return  curCfg.getNode(),  outEdges);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNode(),  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNode(),  outEdges);	  return    curCfg.getNode();    	non-compiled	[CE]  ';'  expected	43	None	replace
369	[BUG]  [BUGGY]  return  curCfg.getNode(n);  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNode(n);	  return    curCfg.getNode();    	non-compiled	[CE]  incompatible  types	43	None	replace
370	[BUG]  [BUGGY]  return  curCfg.cloneBlock();  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
371	[BUG]  [BUGGY]  return  nextCfgNode.cloneBlock();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	145	None	replace
372	[BUG]  [BUGGY]  return  curCfgNode.cloneBlock();  [CE]  cannot  find  symbol  curCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	145	None	replace
373	[BUG]  [BUGGY]  return  first.cloneBlock();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol  first	145	None	replace
374	[BUG]  [BUGGY]  return  n.getParent().cloneBlock();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent().cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent().cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
375	[BUG]  [BUGGY]  return  node.cloneBlock();  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol  node	145	None	replace
376	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  [CE]  not  a  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    n.getType()  ==  Token.NAME?  n.getParent()  :  null;	  	non-compiled	[CE]  not  a  statement	3	None	add
377	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	3	None	add
378	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n.getType()  ==  Token.NAME?  n.getNext()  :  null;  [CE]  not  a  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n.getType()  ==  Token.NAME?  n.getNext()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    n.getType()  ==  Token.NAME?  n.getNext()  :  null;	  	non-compiled	[CE]  not  a  statement	3	None	add
379	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	3	None	add
380	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
381	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	3	None	add
382	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n  =  n.getParent();  [CE]  unreachable  statement  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    n  =  n.getParent();	  	non-compiled	[CE]  unreachable  statement	3	None	add
383	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getNext()!=  null;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getNext()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getNext()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	102	None	replace
384	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getParent()!=  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getParent()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	102	None	replace
385	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getParent()  :  Token.BLOCK;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getParent()  :  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK?  n.getParent()  :  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	102	None	replace
386	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  this,  fallThrough);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	27	None	replace
387	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  fallThrough,  this);  [CE]  cannot  find  symbol  fallThrough  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  fallThrough,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  fallThrough,  this);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	27	None	replace
388	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  getCfgStack());  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  getCfgStack());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  getCfgStack());	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
389	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  first,  this);  [CE]  cannot  find  symbol  first  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  first,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  first,  this);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  first	27	None	replace
390	[BUG]  [BUGGY]  NodeUtil.removeChild(curCfg,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(curCfg,  n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(curCfg,  n,  fallThrough);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	33	None	replace
391	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  curCfg);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  curCfg);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	33	None	replace
392	[BUG]  [BUGGY]  NodeUtil.removeChild(curCfg,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(curCfg,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(curCfg,  n,  outEdges);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	33	None	replace
393	[BUG]  [BUGGY]  NodeUtil.removeChild(compiler,  curCfg,  n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(compiler,  curCfg,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(compiler,  curCfg,  n);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	33	None	replace
394	[BUG]  [BUGGY]  NodeUtil.removeChild(curCfg,  n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(curCfg,  n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(curCfg,  n,  nextCfgNode);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	33	None	replace
395	[BUG]  [BUGGY]  NodeUtil.removeChild(curCfg,  n,  first);  [CE]  cannot  find  symbol  first  [FE]                            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(curCfg,  n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(curCfg,  n,  first);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  cannot  find  symbol  first	33	None	replace
396	[BUG]  [BUGGY]  NodeUtil.removeChild(curCfg,  n,  breakThrough);  [CE]  cannot  find  symbol  breakThrough  [FE]                              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(curCfg,  n,  breakThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(curCfg,  n,  breakThrough);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  cannot  find  symbol  breakThrough	33	None	replace
397	[BUG]  [BUGGY]  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	16	None	replace
398	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	16	None	replace
399	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  Node  n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	16	None	replace
400	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	16	None	replace
401	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	16	None	replace
402	[BUG]  [BUGGY]  n  =  first.getNext();  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	16	None	replace
403	[BUG]  [BUGGY]  n  =  curCfg.getFirstChild();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getFirstChild();	  n    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
404	[BUG]  [BUGGY]  n  =  first.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.getFirstChild();	  n    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	67	None	replace
405	[BUG]  [BUGGY]  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  curCfg.getDirectedGrandparentNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGrandparentNode(n);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	59	None	replace
406	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGrandparentNode(n);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGrandparentNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGrandparentNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGrandparentNode(n);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
407	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  Node  n  =  curCfg.getDirectedGrandparentNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGrandparentNode(n);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	59	None	replace
408	[BUG]  [BUGGY]  parentNode  =  curCfg.getDirectedGrandparentNode(n);  [CE]  cannot  find  symbol  parentNode  [FE]                            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  parentNode  =  curCfg.getDirectedGrandparentNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	parentNode  =  curCfg.getDirectedGrandparentNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGrandparentNode(n);    	non-compiled	[CE]  cannot  find  symbol  parentNode	59	None	replace
409	[BUG]  [BUGGY]  node  =  curCfg.getDirectedGrandparentNode(n);  [CE]  cannot  find  symbol  node  [FE]                              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node  =  curCfg.getDirectedGrandparentNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node  =  curCfg.getDirectedGrandparentNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGrandparentNode(n);    	non-compiled	[CE]  cannot  find  symbol  node	59	None	replace
410	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n    =    n.getLastChild();    n  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	61	6	add
411	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	61	6	add
412	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  [CE]  >  expected  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  >  expected	61	None	add
413	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	61	None	add
414	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  ==  outEdges  =  curCfg.getOutEdges();  [CE]  >  expected  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  ==  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  ==  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  >  expected	61	None	add
415	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();  [CE]  ']'  expected  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  ']'  expected	61	None	add
416	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch!=  outEdges  =  curCfg.getOutEdges();  [CE]  >  expected  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch!=  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch!=  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  >  expected	61	None	add
417	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getUnconditionalBranch();  [CE]  >  expected  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getUnconditionalBranch();	  	non-compiled	[CE]  >  expected	61	None	add
418	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getUnconditionalBranch();  [CE]  cannot  find  symbol  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getUnconditionalBranch();	  	non-compiled	[CE]  cannot  find  symbol	61	None	add
419	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	151	None	replace
420	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getLastChild()!=  null;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getLastChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getLastChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	151	None	replace
421	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	151	None	replace
422	[BUG]  [BUGGY]  return  first.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;  [CE]  cannot  find  symbol  first  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  cannot  find  symbol  first	151	None	replace
423	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  ';'  expected	151	None	replace
424	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  null;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	151	None	replace
425	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	122	None	replace
426	[BUG]  [BUGGY]  return  compiler.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
427	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  removeNoOpStatements);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,boolean)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  removeNoOpStatements);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  removeNoOpStatements);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,boolean)	122	None	replace
428	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  first,  outEdges);  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  first,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  NodeTraversal.traverse(compiler,  first,  outEdges);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	122	None	replace
429	[BUG]  [BUGGY]  noOpStatements  =  compiler.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  noOpStatements  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  noOpStatements  =  compiler.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	noOpStatements  =  compiler.traverse(compiler,  n,  this);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  noOpStatements	56	None	replace
430	[BUG]  [BUGGY]  node  =  compiler.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node  =  compiler.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node  =  compiler.traverse(compiler,  n,  this);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  node	56	None	replace
431	[BUG]  [BUGGY]  return  curCfg,  n.getLastChild();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg,  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg,  n.getLastChild();	  return    curCfg.getLastChild();    	non-compiled	[CE]  ';'  expected	64	None	replace
432	[BUG]  [BUGGY]  return  curCfg.getLastChild(),  n;  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getLastChild(),  n;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getLastChild(),  n;	  return    curCfg.getLastChild();    	non-compiled	[CE]  ';'  expected	64	None	replace
433	[BUG]  [BUGGY]  return  curCfg.getLastChild()  +  1;  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getLastChild()  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getLastChild()  +  1;	  return    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
434	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()!=  null);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
435	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()!=  null);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
436	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  first);  Node  first  =  n.getLastChild();  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  first);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()!=  first);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	78	None	replace
437	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  first);  Node  first  =  n.getLastChild();  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  first);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  first);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	78	None	replace
438	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getFirstChild();  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
439	[BUG]  [BUGGY]  n  =  n.getFirstChild();  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
440	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
441	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
442	[BUG]  [BUGGY]  return  nextCfgNode.getName();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getName();	  return    n.getName();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	115	None	replace
443	[BUG]  [BUGGY]  return  n.getName()  +  1;  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getName()  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getName()  +  1;	  return    n.getName();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
444	[BUG]  [BUGGY]  return  curCfg.getName();  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getName();	  return    n.getName();    	non-compiled	[CE]  incompatible  types	115	None	replace
445	[BUG]  [BUGGY]  return  n.getSimpleName();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getSimpleName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getSimpleName();	  return    n.getName();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
446	[BUG]  [BUGGY]  return  n.getLocalName();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLocalName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLocalName();	  return    n.getName();    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
447	[BUG]  [BUGGY]  Node  n  =  curCfg.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  curCfg.getNext();	  return    n.getNext();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	21	None	replace
448	[BUG]  [BUGGY]  Node  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  n.getLastChild();	  return    n.getLastChild();    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	8	None	replace
449	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getFirstChild();  n  =  first.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  first  =  n.getFirstChild();  n  =  first.getLastChild();	  return    n.getLastChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	8	6	replace
450	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild();  n  =  first.getLastChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getFirstChild();  n  =  first.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  n.getFirstChild();  n  =  first.getLastChild();	  return    n.getLastChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	8	6	replace
451	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent()  ==  null;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	126	None	replace
452	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent()  ==  null;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent()  ==  null;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	126	None	replace
453	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext()  ==  null;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext()  ==  null;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	126	None	replace
454	[BUG]  [BUGGY]  return  n.getNext();  n  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  n  =  n.getFirstChild();	  return    n.getParent();    n    =    n.getFirstChild();    	non-compiled	[CE]  unreachable  statement	164	None	replace
455	[BUG]  [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	132	None	replace
456	[BUG]  [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  first);  [CE]  cannot  find  symbol  first  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  first);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	132	None	replace
457	[BUG]  [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  first,  outEdges);  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  first,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  NodeTraversal.traverse(compiler,  first,  outEdges);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	132	None	replace
458	[BUG]  [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  first,  n);  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  first,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  NodeTraversal.traverse(compiler,  first,  n);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	132	None	replace
459	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [CE]  not  a  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();	  	non-compiled	[CE]  not  a  statement	68	None	add
460	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
461	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	68	None	add
462	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n.getType()  ==  Token.CALL  :  n.getFirstChild();  [CE]  not  a  statement  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n.getType()  ==  Token.CALL  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    n.getType()  ==  Token.CALL  :  n.getFirstChild();	  	non-compiled	[CE]  not  a  statement	68	None	add
463	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	68	None	add
464	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n.getType()  ==  Token.CALL?  null  :  n.getLastChild();  [CE]  not  a  statement  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n.getType()  ==  Token.CALL?  null  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    n.getType()  ==  Token.CALL?  null  :  n.getLastChild();	  	non-compiled	[CE]  not  a  statement	68	None	add
465	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	68	None	add
466	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  n  =  first.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	68	None	add
467	[BUG]  [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT  ||  curCfg.getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT  ||  curCfg.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getType()  ==  Token.EXPR_RESULT  ||  curCfg.getType()  ==  Token.EXPR_RESULT;	  return    curCfg.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
468	[BUG]  [BUGGY]  return  curCfg,  n.getType()  ==  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg,  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg,  n.getType()  ==  Token.EXPR_RESULT;	  return    curCfg.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	128	None	replace
469	[BUG]  [BUGGY]  return  curCfg.getType()!=  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getType()!=  Token.EXPR_RESULT;	  return    curCfg.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
470	[BUG]  [BUGGY]  return  curCfgNode.getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  curCfgNode  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getType()  ==  Token.EXPR_RESULT;	  return    curCfg.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	128	None	replace
471	[BUG]  [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT?  n.getParent()  :  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT?  n.getParent()  :  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getType()  ==  Token.EXPR_RESULT?  n.getParent()  :  Token.EXPR_RESULT;	  return    curCfg.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
472	[BUG]  [BUGGY]  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  first.getFirstChild();	  return    n.getLastChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	12	None	replace
473	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()!=  n);  Node  n  =  first.getFirstChild();	  return    n.getLastChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	12	None	replace
474	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  n);  Node  n  =  first.getFirstChild();	  return    n.getLastChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	12	None	replace
475	[BUG]  [BUGGY]  Node  n  =  first.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  first.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  first.getLastChild();	  return    n.getLastChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	12	None	replace
476	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()!=  first);  Node  n  =  first.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  first);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()!=  first);  Node  n  =  first.getFirstChild();	  return    n.getLastChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	12	None	replace
477	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getChildCount()  ==  1;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getChildCount()  ==  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getChildCount()  ==  1;	  return    n.getType()    ==    Token.BLOCK    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	140	None	replace
478	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  2;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  2;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  2;	  return    n.getType()    ==    Token.BLOCK    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	140	None	replace
479	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  >  1;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  >  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  >  1;	  return    n.getType()    ==    Token.BLOCK    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	140	None	replace
480	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()!=  1;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()!=  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()!=  1;	  return    n.getType()    ==    Token.BLOCK    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	140	None	replace
481	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getChildCount()  ==  1;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getChildCount()  ==  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getChildCount()  ==  1;	  return    n.getType()    ==    Token.BLOCK    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	140	None	replace
482	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  >=  1;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  >=  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  >=  1;	  return    n.getType()    ==    Token.BLOCK    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	140	None	replace
483	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.getLastChild();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.getLastChild();	  return    n.getLastChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
484	[BUG]  [BUGGY]  return  curCfgNode.getLastChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  curCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getLastChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	10	None	replace
485	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  curCfgNode  =  n.getLastChild();	  return    n.getLastChild();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	10	6	replace
486	[BUG]  [BUGGY]  Node  curCfgNode  =  n.getLastChild();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.getLastChild();	  return    n.getLastChild();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	10	6	replace
487	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getLastChild();	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
488	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  first  =  n.getLastChild();	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
489	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getLastChild();	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
490	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  first  =  n.getLastChild();	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
491	[BUG]  [BUGGY]  return  curCfg.getNext();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNext();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNext();  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getNext();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
492	[BUG]  [BUGGY]  return  curCfg.getNext();  n  =  n.getDirectedGraphNode(curCfg);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNext();  n  =  n.getDirectedGraphNode(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNext();  n  =  n.getDirectedGraphNode(curCfg);	  return    n.getNext();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
493	[BUG]  [BUGGY]  Node  first  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  curCfg.getDirectedGraphNode(n);	  return    n.getNext();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  incompatible  types	107	None	replace
494	[BUG]  [BUGGY]  return  curCfg.getParent();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getParent();	  return    curCfg;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
495	[BUG]  [BUGGY]  return  curCfg.getFunctionDeclaration();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFunctionDeclaration();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFunctionDeclaration();	  return    curCfg;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
496	[BUG]  [BUGGY]  return  curCfg,  n.getParent();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg,  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg,  n.getParent();	  return    curCfg;    	non-compiled	[CE]  ';'  expected	42	None	replace
497	[BUG]  [BUGGY]  return  curCfg.getSimpleName();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getSimpleName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getSimpleName();	  return    curCfg;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
498	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getInEdges();  [CE]  no  suitable  method  found  for  getInEdges()  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getInEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getInEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  no  suitable  method  found  for  getInEdges()	111	None	replace
499	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();  [CE]  ']'  expected  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  ']'  expected	111	None	replace
500	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  gNode.getOutEdges();  [CE]  cannot  find  symbol  gNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  gNode.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  gNode.getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol  gNode	111	None	replace
501	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.GETPROP;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
502	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.GETPROP;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
503	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.GETPROP;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
504	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.GETPROP;  [CE]  incompatible  types  [FE]                                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK?  n.getType()  :  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
505	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.GETPROP;  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
506	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  ';'  expected	97	None	replace
507	[BUG]  [BUGGY]  return  curCfgNode.cloneNoOpStatements();  [CE]  cannot  find  symbol  curCfgNode  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.cloneNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.cloneNoOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	37	None	replace
508	[BUG]  [BUGGY]  return  nextCfgNode.cloneNoOpStatements();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.cloneNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.cloneNoOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	37	None	replace
509	[BUG]  [BUGGY]  return  n.cloneOpStatements();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
510	[BUG]  [BUGGY]  return  n.cloneNoOpStatements()  ||  removeNoOpStatements();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneNoOpStatements()  ||  removeNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneNoOpStatements()  ||  removeNoOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
511	[BUG]  [BUGGY]  return  first.cloneNoOpStatements();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneNoOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol  first	37	None	replace
512	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	91	None	replace
513	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	91	None	replace
514	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getLastChild().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getLastChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getLastChild().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	91	None	replace
515	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	91	None	replace
516	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	91	None	replace
517	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild().getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	91	None	replace
518	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [CE]  not  a  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    n.getType()  ==  Token.CALL?  n.getParent()  :  null;	  	non-compiled	[CE]  not  a  statement	5	None	add
519	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	5	None	add
520	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n.getType()  ==  Token.CALL?  n.getNext()  :  null;  [CE]  not  a  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n.getType()  ==  Token.CALL?  n.getNext()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    n.getType()  ==  Token.CALL?  n.getNext()  :  null;	  	non-compiled	[CE]  not  a  statement	5	None	add
521	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
522	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	5	None	add
523	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n  =  n.getParent();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    n  =  n.getParent();	  	non-compiled	[CE]  unreachable  statement	5	None	add
524	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  n  =  curCfg.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  n  =  curCfg.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    Node  n  =  curCfg.getParent();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	5	None	add
525	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  nextCfgNode  =  n.getParent();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
526	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getParent();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getParent();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
527	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  nextCfgNode  =  null;	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
528	[BUG]  [BUGGY]  Node  nextCfgNode  =  null;  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  null;	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
529	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
530	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
531	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getLastChild()  :  n.getLastChild();  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getLastChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  first.getLastChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	71	None	replace
532	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
533	[BUG]  [BUGGY]  return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.NAME?  n.getFirstChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
534	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
535	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getFirstChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
536	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME  &&  n.getLastChild()  :  n.getLastChild();  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME  &&  n.getLastChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME  &&  n.getLastChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	non-compiled	[CE]  ';'  expected	71	None	replace
537	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getNext()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.getNext()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
538	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getNext()  :  n.getLastChild();  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getNext()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getNext()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
539	[BUG]  [BUGGY]  return  n.getNext();  n  =  n.getParent();  [CE]  unreachable  statement  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  n  =  n.getParent();	  return    n.getNext();    n    =    n.getNext();    	non-compiled	[CE]  unreachable  statement	22	None	replace
540	[BUG]  [BUGGY]  return  n.getType()  >=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  >=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  >=  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	88	None	replace
541	[BUG]  [BUGGY]  return  n.getType()  >>  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  >>  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  >>  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	88	None	replace
542	[BUG]  [BUGGY]  return  n.getType()  [Delete]  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  [Delete]  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  [Delete]  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	88	None	replace
543	[BUG]  [BUGGY]  return  first.getType()!=  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  first  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()!=  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol  first	88	None	replace
544	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  cfgStack);  [CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,Deque<ControlFlowGraph<Node>>)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  cfgStack);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  cfgStack);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,Deque<ControlFlowGraph<Node>>)	29	None	replace
545	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  outEdges);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	29	None	replace
546	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  cfg);  [CE]  cannot  find  symbol  cfg  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  cfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  cfg);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  cfg	29	None	replace
547	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	29	None	replace
548	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  null);  [CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,<null>)  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  null);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,<null>)	29	None	replace
549	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  fallThrough);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	29	None	replace
550	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	136	None	replace
551	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  fallThrough);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	136	None	replace
552	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(n,  nextCfgNode);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	136	None	replace
553	[BUG]  [BUGGY]  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.cloneTree();  NodeUtil.removeChild(n,  fallThrough);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	136	None	replace
554	[BUG]  [BUGGY]  return  first.cloneTree();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneTree();  NodeUtil.removeChild(n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneTree();  NodeUtil.removeChild(n,  first);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  first	136	None	replace
555	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  breakThrough);  [CE]  cannot  find  symbol  breakThrough  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  breakThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(n,  breakThrough);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  breakThrough	136	None	replace
556	[BUG]  [BUGGY]  return  fallThrough.cloneTree();  [CE]  cannot  find  symbol  fallThrough  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.cloneTree();	  return    first.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  fallThrough	38	None	replace
557	[BUG]  [BUGGY]  return  nextCfgNode.cloneTree();  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.cloneTree();	  return    first.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	38	None	replace
558	[BUG]  [BUGGY]  return  node.cloneTree();  [CE]  cannot  find  symbol  node  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.cloneTree();	  return    first.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  node	38	None	replace
559	[BUG]  [BUGGY]  return  nextNode.cloneTree();  [CE]  cannot  find  symbol  nextNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextNode.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextNode.cloneTree();	  return    first.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  nextNode	38	None	replace
560	[BUG]  [BUGGY]  return  n.getFirstChild();  n  =  n.getParent();  [CE]  unreachable  statement  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  n  =  n.getParent();	  return    n.getParent();    n    =    n.getParent();    	non-compiled	[CE]  unreachable  statement	53	None	replace
561	[BUG]  [BUGGY]  return  n.getFirstChild();  n.getLastChild();  [CE]  unreachable  statement  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  n.getLastChild();	  return    n.getLastChild();    n.getLastChild();    	non-compiled	[CE]  unreachable  statement	134	None	replace
562	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getFirstChild();  n.getLastChild();	  return    n.getLastChild();    n.getLastChild();    	compilable	  [FE]  RuntimeException  	134	6	replace
563	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n.getLastChild();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  n.getLastChild();	  return    n.getLastChild();    n.getLastChild();    	compilable	  [FE]  RuntimeException  	134	6	replace
564	[BUG]  [BUGGY]  Node  n  =  curCfg.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  curCfg.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  curCfg.getParent();	  return    n.getNext();    Node    n    =    curCfg.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	110	None	replace
565	[BUG]  [BUGGY]  n  =  curCfg.getParent();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getParent();	  return    n.getNext();    Node    n    =    curCfg.getParent();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
566	[BUG]  [BUGGY]  n  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getNext();	  return    n.getNext();    Node    n    =    curCfg.getParent();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
567	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getFirstChild();  n  =  nextCfgNode.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  nextCfgNode  =  n.getFirstChild();  n  =  nextCfgNode.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
568	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getFirstChild();  n  =  nextCfgNode.getLastChild();  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getFirstChild();  n  =  nextCfgNode.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getFirstChild();  n  =  nextCfgNode.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
569	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	89	None	replace
570	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getNext().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	89	None	replace
571	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	89	None	replace
572	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	89	None	replace
573	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent().getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  &&  n.getParent().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	89	None	replace
574	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent().getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent().getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getParent().getType()!=  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	89	None	replace
575	[BUG]  [BUGGY]  return  n.clone();  n  =  n.cloneTree();  [CE]  clone()  has  protected  access  in  Object  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.clone();  n  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.clone();  n  =  n.cloneTree();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	46	None	replace
576	[BUG]  [BUGGY]  Node  n  =  first.cloneTree();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  first.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  first.cloneTree();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	46	None	replace
577	[BUG]  [BUGGY]  return  n.cloneTree();  n  =  first.cloneTree();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  n  =  first.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  n  =  first.cloneTree();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  first	46	None	replace
578	[BUG]  [BUGGY]  return  fallThrough.getLastChild();  [CE]  cannot  find  symbol  fallThrough  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.getLastChild();	  return    first.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  fallThrough	60	None	replace
579	[BUG]  [BUGGY]  return  node.getLastChild();  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.getLastChild();	  return    first.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	60	None	replace
580	[BUG]  [BUGGY]  Return  n.getLastChild();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getLastChild();	  return    first.getLastChild();    	non-compiled	[CE]  ';'  expected	60	None	replace
581	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getNext()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  n.getNext()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
582	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getNext()  :  null;  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getNext()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getNext()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
583	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
584	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  null;  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
585	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
586	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  null;  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
587	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getGrandparent()  :  null;  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getGrandparent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getGrandparent()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
588	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getPar  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getPar  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL  &&  n.getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getPar	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	non-compiled	[CE]  ';'  expected	6	None	replace
589	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().get  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().get  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL  &&  n.getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().getParent().get	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	non-compiled	[CE]  ';'  expected	6	None	replace
590	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.BLOCK;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	96	None	replace
591	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.BLOCK;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getType()!=  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	96	None	replace
592	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	96	None	replace
593	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.BLOCK;  [CE]  incompatible  types  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getType()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	96	None	replace
594	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;  [CE]  incompatible  types  [FE]                                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	96	None	replace
595	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.BLOCK;  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getType()!=  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	96	None	replace
596	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node)	143	None	replace
597	[BUG]  [BUGGY]  TraverseTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  TraverseTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	TraverseTraversal.traverse(compiler,  n,  outEdges);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	143	None	replace
598	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n);  [CE]  cannot  find  symbol  Traversal  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traversal.traverse(compiler,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traversal.traverse(compiler,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol  Traversal	143	None	replace
599	[BUG]  [BUGGY]  Traverse.traverse(compiler,  n);  [CE]  cannot  find  symbol  Traverse  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traverse.traverse(compiler,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traverse.traverse(compiler,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol  Traverse	143	None	replace
600	[BUG]  [BUGGY]  TraverseTraversal.traverse(compiler,  n);  [CE]  cannot  find  symbol  TraverseTraversal  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  TraverseTraversal.traverse(compiler,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	TraverseTraversal.traverse(compiler,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol  TraverseTraversal	143	None	replace
601	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()!=  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	90	None	replace
602	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	90	None	replace
603	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  &&  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	90	None	replace
604	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	90	None	replace
605	[BUG]  [BUGGY]  return  n.getType()  >=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  >=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  >=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	90	None	replace
606	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
607	[BUG]  [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
608	[BUG]  [BUGGY]  return  first.getNext();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol  first	155	None	replace
609	[BUG]  [BUGGY]  return  n.getNext();  n.setNext(first.getNext());  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  n.setNext(first.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  n.setNext(first.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol  first	155	None	replace
610	[BUG]  [BUGGY]  n  =  n.getNext();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getNext();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getNext();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
611	[BUG]  [BUGGY]  n  =  first.getNext();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.getNext();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.getNext();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol  first	155	None	replace
612	[BUG]  [BUGGY]  Node  n  =  first.getNext();  n.setNext(n.getNext());  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  first.getNext();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  first.getNext();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	155	None	replace
613	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()  ==  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()    ==    null;    	non-compiled	[CE]  incompatible  types	141	None	replace
614	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getFirstChild()  ==  null;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  n.getFirstChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  n.getFirstChild()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()    ==    null;    	non-compiled	[CE]  incompatible  types	141	None	replace
615	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getLastChild()  ==  null;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getLastChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getLastChild()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()    ==    null;    	non-compiled	[CE]  incompatible  types	141	None	replace
616	[BUG]  [BUGGY]  return  first.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  null;  [CE]  cannot  find  symbol  first  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()    ==    null;    	non-compiled	[CE]  cannot  find  symbol  first	141	None	replace
617	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  first.getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  first  [FE]            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  first.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  first.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol  first	87	None	replace
618	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  fallThrough);  [CE]  clone()  has  protected  access  in  Object  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  fallThrough);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
619	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.clone()  :  Node.newString(Token.NAME);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.clone()  :  Node.newString(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL  &&  n.clone()  :  Node.newString(Token.NAME);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  ';'  expected	83	None	replace
620	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  first.clone()  :  Node.newString(Token.NAME);  [CE]  cannot  find  symbol  first  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  first.clone()  :  Node.newString(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  first.clone()  :  Node.newString(Token.NAME);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  cannot  find  symbol  first	83	None	replace
621	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  Node.newString(Token.NAME):  Node.newString(Token.NAME);  [CE]  no  suitable  method  found  for  newString(int)  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  Node.newString(Token.NAME):  Node.newString(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  Node.newString(Token.NAME):  Node.newString(Token.NAME);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int)	83	None	replace
622	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  nextCfgNode);  [CE]  clone()  has  protected  access  in  Object  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  nextCfgNode);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
623	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  first);  [CE]  clone()  has  protected  access  in  Object  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  first);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
624	[BUG]  [BUGGY]  return  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNext();	  return    nextCfgNode.getNext();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
625	[BUG]  [BUGGY]  return  curCfgNode.getNext();  [CE]  cannot  find  symbol  curCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getNext();	  return    nextCfgNode.getNext();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	24	None	replace
626	[BUG]  [BUGGY]  return  firstCfgNode.getNext();  [CE]  cannot  find  symbol  firstCfgNode  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  firstCfgNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  firstCfgNode.getNext();	  return    nextCfgNode.getNext();    	non-compiled	[CE]  cannot  find  symbol  firstCfgNode	24	None	replace
627	[BUG]  [BUGGY]  return  lastNode.getNext();  [CE]  cannot  find  symbol  lastNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  lastNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  lastNode.getNext();	  return    nextCfgNode.getNext();    	non-compiled	[CE]  cannot  find  symbol  lastNode	24	None	replace
628	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getLastChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	14	6	replace
629	[BUG]  [BUGGY]  n  =  n.getLastChild();  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getLastChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	14	6	replace
630	[BUG]  [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
631	[BUG]  [BUGGY]  node.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  node  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  node	123	None	replace
632	[BUG]  [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getDirectedGraphNode(curCfg);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getDirectedGraphNode(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getDirectedGraphNode(curCfg);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
633	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getDirectedGraphNode(curCfg);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getDirectedGraphNode(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getDirectedGraphNode(curCfg);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
634	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  NodeUtil.isFunctionDeclaration(n);  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  NodeUtil.isFunctionDeclaration(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
635	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  NodeUtil.isFunctionDeclaration(n);  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  &&  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  &&  NodeUtil.isFunctionDeclaration(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
636	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.isFunctionDeclaration(n);  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.isFunctionDeclaration(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
637	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n,  outEdges);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	105	None	replace
638	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  ';'  expected	105	None	replace
639	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  incompatible  types  [FE]                                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.mayHaveSideEffects(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
640	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getChildCount()  ==  1;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getChildCount()  ==  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getChildCount()  ==  1;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	150	None	replace
641	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  >  1;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  >  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  >  1;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	150	None	replace
642	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  2;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  2;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  2;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	150	None	replace
643	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()!=  1;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()!=  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()!=  1;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	150	None	replace
644	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  >=  1;  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  >=  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  >=  1;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	150	None	replace
645	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  ';'  expected	150	None	replace
646	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [CE]  not  a  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;	  	non-compiled	[CE]  not  a  statement	72	None	add
647	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  nextCfgNode  =  n.getNext();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  unreachable  statement	72	None	add
648	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  first  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    Node  first  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	72	None	add
649	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
650	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    Node  n  =  n.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	72	None	add
651	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  n  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    n  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	72	None	add
652	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	72	None	add
653	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  first  =  n.getLastChild();  [CE]  unreachable  statement  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    Node  first  =  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	72	None	add
654	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	26	6	add
655	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    NodeTraversal.traverse(compiler,  n,  this);	  	compilable	  [FE]  RuntimeException  	26	6	add
656	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.reportCodeChange();  [CE]  cannot  find  symbol  Context  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.reportCodeChange();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.reportCodeChange();	  	non-compiled	[CE]  cannot  find  symbol  Context	26	None	add
657	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Compiler.reportCodeChange();  [CE]  non-static  method  reportCodeChange()  cannot  be  referenced  from  a  static  context  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Compiler.reportCodeChange();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Compiler.reportCodeChange();	  	non-compiled	[CE]  non-static  method  reportCodeChange()  cannot  be  referenced  from  a  static  context	26	None	add
658	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Compiler.compile(compiler,  n,  this);  [CE]  no  suitable  method  found  for  compile(AbstractCompiler,Node,UnreachableCodeElimination)  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Compiler.compile(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Compiler.compile(compiler,  n,  this);	  	non-compiled	[CE]  no  suitable  method  found  for  compile(AbstractCompiler,Node,UnreachableCodeElimination)	26	None	add
659	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Deque  <  Node,  Branch>  cfg  =  compiler.getDeepestCfg(n);  [CE]  wrong  number  of  type  arguments;  required  1  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Deque  <  Node,  Branch>  cfg  =  compiler.getDeepestCfg(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Deque  <  Node,  Branch>  cfg  =  compiler.getDeepestCfg(n);	  	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	26	None	add
660	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  Context  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(n.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  cannot  find  symbol  Context	26	None	add
661	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.BLOCK);  [CE]  cannot  find  symbol  Context  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(n.getType()  ==  Token.BLOCK);	  	non-compiled	[CE]  cannot  find  symbol  Context	26	None	add
662	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Deque  <  Node,  Branch>  cfgStack  =  compiler.getDeepestCfgStack();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Deque  <  Node,  Branch>  cfgStack  =  compiler.getDeepestCfgStack();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Deque  <  Node,  Branch>  cfgStack  =  compiler.getDeepestCfgStack();	  	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	26	None	add
663	[BUG]  [BUGGY]  return  n.getType()  >=  Token.BLOCK;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  >=  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  >=  Token.BLOCK;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	93	None	replace
664	[BUG]  [BUGGY]  return  n.getType()  >>  Token.BLOCK;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  >>  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  >>  Token.BLOCK;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	93	None	replace
665	[BUG]  [BUGGY]  return  n.getType()  [Delete]  Token.BLOCK;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  [Delete]  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  [Delete]  Token.BLOCK;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	93	None	replace
666	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()!=  Token.BLOCK;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()!=  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getType()!=  Token.BLOCK;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	93	None	replace
667	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()!=  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getType()!=  Token.EXPR_RESULT;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	93	None	replace
668	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  curCfgNode  =  n.getParent();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	58	6	replace
669	[BUG]  [BUGGY]  Node  curCfgNode  =  n.getParent();  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.getParent();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	58	6	replace
670	[BUG]  [BUGGY]  return  curCfgNode.getParent();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  curCfgNode  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getParent();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getParent();  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	58	None	replace
671	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.getParent();  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.getParent();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
672	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  curCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	58	6	replace
673	[BUG]  [BUGGY]  Node  curCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	compilable	  [FE]  RuntimeException  	58	6	replace
674	[BUG]  [BUGGY]  Deque  <  Node,  Branch>  n  =  curCfg.getLastChild();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Deque  <  Node,  Branch>  n  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Deque  <  Node,  Branch>  n  =  curCfg.getLastChild();	  return    n.getLastChild();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	135	None	replace
675	[BUG]  [BUGGY]  return  n.getNoOpStatements();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNoOpStatements();	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
676	[BUG]  [BUGGY]  return  n.getFirstChild().remove();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild().remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild().remove();	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
677	[BUG]  [BUGGY]  return  first.remove();  [CE]  cannot  find  symbol  first  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.remove();	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol  first	121	None	replace
678	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
679	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
680	[BUG]  [BUGGY]  Node  first  =  node.getLastChild();  [CE]  cannot  find  symbol  node  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  node.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  node.getLastChild();	  return    n.getNext();    Node    first    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	20	None	replace
681	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
682	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
683	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.BLOCK);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
684	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
685	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n);  [CE]  unreachable  statement  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  unreachable  statement	158	None	replace
686	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n.next);  [CE]  next  is  not  public  in  Node;  cannot  be  accessed  from  outside  package  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n.next);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n.next);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  next  is  not  public  in  Node;  cannot  be  accessed  from  outside  package	158	None	replace
687	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n.nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n.nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n.nextCfgNode);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	158	None	replace
688	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n.first);  [CE]  first  has  private  access  in  Node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n.first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n.first);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  first  has  private  access  in  Node	158	None	replace
689	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(outEdges);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  cannot  find  symbol  outEdges	158	None	replace
690	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getLastChild();  n.removeChild(first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  first  =  n.getLastChild();  n.removeChild(first);	  return    n.getLastChild();    n.removeChild(first);    	compilable	  [FE]  RuntimeException  	158	6	replace
691	[BUG]  [BUGGY]  Node  first  =  n.getLastChild();  n.removeChild(first);  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  first  =  n.getLastChild();  n.removeChild(first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  first  =  n.getLastChild();  n.removeChild(first);	  return    n.getLastChild();    n.removeChild(first);    	compilable	  [FE]  RuntimeException  	158	6	replace
692	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(fallThrough);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	158	None	replace
693	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getLastChild()!=  n);  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getLastChild()!=  n);  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getLastChild()!=  n);  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
694	[BUG]  [BUGGY]  node.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  node	7	None	replace
695	[BUG]  [BUGGY]  return  curCfg.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getLastChild();  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
696	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getLastChild()  ==  n);  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getLastChild()  ==  n);  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getLastChild()  ==  n);  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
697	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  fallThrough,  new  ControlFlowGraph());  [CE]  cannot  find  symbol  fallThrough  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  fallThrough,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  fallThrough,  new  ControlFlowGraph());	          NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol  fallThrough	30	None	replace
698	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph(),  outEdges);  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph(),  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph(),  outEdges);	          NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	30	None	replace
699	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph(),  curCfg);  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph(),  curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph(),  curCfg);	          NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	30	None	replace
700	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  curCfg,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  curCfg,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  curCfg,  new  ControlFlowGraph());	          NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	30	None	replace
701	[BUG]  [BUGGY]  return  n.getFirstChild()  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild()  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild()  +  1;	  return    n.getLastChild()    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	65	None	replace
702	[BUG]  [BUGGY]  return  nextCfgNode.getLastChild()  +  1;  [CE]  cannot  find  symbol  nextCfgNode  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getLastChild()  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getLastChild()  +  1;	  return    n.getLastChild()    +    1;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	65	None	replace
703	[BUG]  [BUGGY]  return  first.getLastChild()  +  1;  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getLastChild()  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLastChild()  +  1;	  return    n.getLastChild()    +    1;    	non-compiled	[CE]  cannot  find  symbol  first	65	None	replace
704	[BUG]  [BUGGY]  return  node.getLastChild()  +  1;  [CE]  cannot  find  symbol  node  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.getLastChild()  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.getLastChild()  +  1;	  return    n.getLastChild()    +    1;    	non-compiled	[CE]  cannot  find  symbol  node	65	None	replace
705	[BUG]  [BUGGY]  return  n.removeLastChild();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.removeLastChild();	  return    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
706	[BUG]  [BUGGY]  return  n.removeOneChild();  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeOneChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.removeOneChild();	  return    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
707	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getNext();  [CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  nextCfgNode  =  n.getNext();	  	non-compiled	[CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
708	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  n  =  n.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  n  =  n.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
709	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  nextCfgNode  =  curCfg.getNext();	  	non-compiled	[CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
710	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  n  =  nextCfgNode.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  n  =  nextCfgNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  n  =  nextCfgNode.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
711	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  n  =  curCfg.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  n  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  n  =  curCfg.getNext();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
712	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getLastChild();  [CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  nextCfgNode  =  n.getLastChild();	  	non-compiled	[CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
713	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getPrevious();  [CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  nextCfgNode  =  n.getPrevious();	  	non-compiled	[CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
714	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getParent();  [CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  nextCfgNode  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  nextCfgNode  =  n.getParent();	  	non-compiled	[CE]  variable  nextCfgNode  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	31	None	add
715	[BUG]  [BUGGY]  return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newNumber(0);  [CE]  clone()  has  protected  access  in  Object  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newNumber(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newNumber(0);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
716	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.clone()  :  Node.newNumber(0);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL  &&  n.clone()  :  Node.newNumber(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL  &&  n.clone()  :  Node.newNumber(0);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  ';'  expected	85	None	replace
717	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(0);  [CE]  clone()  has  protected  access  in  Object  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(0);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
718	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(1);  [CE]  clone()  has  protected  access  in  Object  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(1);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(1);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
719	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  first.clone()  :  Node.newNumber(0);  [CE]  cannot  find  symbol  first  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  first.clone()  :  Node.newNumber(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  first.clone()  :  Node.newNumber(0);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  cannot  find  symbol  first	85	None	replace
720	[BUG]  [BUGGY]  return  node.getFirstChild();  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.getFirstChild();	  return    first.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  node	117	None	replace
721	[BUG]  [BUGGY]  Return  n.getFirstChild();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getFirstChild();	  return    first.getFirstChild();    	non-compiled	[CE]  ';'  expected	117	None	replace
722	[BUG]  [BUGGY]  node  =  curCfg.getFirstChild();  [CE]  cannot  find  symbol  node  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node  =  curCfg.getFirstChild();	  return    n.getFirstChild();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  node	124	None	replace
723	[BUG]  [BUGGY]  return  first.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  first  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol  first	149	None	replace
724	[BUG]  [BUGGY]  return  nextCfgNode.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	149	None	replace
725	[BUG]  [BUGGY]  return  curCfg.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
726	[BUG]  [BUGGY]  return  n.getLeadingUnconditionalBranch()  +  1;  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLeadingUnconditionalBranch()  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLeadingUnconditionalBranch()  +  1;	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
727	[BUG]  [BUGGY]  return  outEdges.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  outEdges  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  outEdges.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  outEdges.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol  outEdges	149	None	replace
728	[BUG]  [BUGGY]  return  node.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol  node	149	None	replace
729	[BUG]  [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	108	None	replace
730	[BUG]  [BUGGY]  n  =  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getNext();  NodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	108	None	replace
731	[BUG]  [BUGGY]  node.getNext();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  node  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.getNext();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.getNext();  NodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  node	108	None	replace
732	[BUG]  [BUGGY]  Return  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getNext();  NodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  ';'  expected	108	None	replace
733	[BUG]  [BUGGY]  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.getNext();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.getNext();  NodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	108	None	replace
734	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  nextCfgNode);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	113	None	replace
735	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  n.nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  n.nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  n.nextCfgNode);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	113	None	replace
736	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  breakThrough);  [CE]  cannot  find  symbol  breakThrough  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  breakThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  breakThrough);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  breakThrough	113	None	replace
737	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  n.cloneTree());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	NodeUtil.removeChild(n,  n.cloneTree());	          NodeUtil.removeChild(n,    first);    	compilable	  [FE]  RuntimeException  	113	6	replace
738	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  n.cloneTree());  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  n.cloneTree());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  n.cloneTree());	          NodeUtil.removeChild(n,    first);    	compilable	  [FE]  RuntimeException  	113	6	replace
739	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  n);  [CE]  cannot  find  symbol  parent  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(parent,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(parent,  n);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  parent	113	None	replace
740	[BUG]  [BUGGY]  NodeUtil.removeChild(first,  n);  [CE]  cannot  find  symbol  first  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(first,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(first,  n);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  first	113	None	replace
741	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.next();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.next();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.next();	          Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
742	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg,  n.getNext();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg,  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg,  n.getNext();	          Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  ';'  expected	28	None	replace
743	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.getNext(),  n.getParent();  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.getNext(),  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.getNext(),  n.getParent();	          Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  ';'  expected	28	None	replace
744	[BUG]  [BUGGY]  Node  nextCfgNode  =  curCfg.first.getNext();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  curCfg.first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  curCfg.first.getNext();	          Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	28	None	replace
745	[BUG]  [BUGGY]  return  curCfg.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getNext();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
746	[BUG]  [BUGGY]  node.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.getNext();  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getNext();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  node	15	None	replace
747	[BUG]  [BUGGY]  return  fallThrough.getNext();  [CE]  cannot  find  symbol  fallThrough  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.getNext();	  return    first.getNext();    	non-compiled	[CE]  cannot  find  symbol  fallThrough	23	None	replace
748	[BUG]  [BUGGY]  return  nextNode.getNext();  [CE]  cannot  find  symbol  nextNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextNode.getNext();	  return    first.getNext();    	non-compiled	[CE]  cannot  find  symbol  nextNode	23	None	replace
749	[BUG]  [BUGGY]  return  node.getNext();  [CE]  cannot  find  symbol  node  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.getNext();	  return    first.getNext();    	non-compiled	[CE]  cannot  find  symbol  node	23	None	replace
750	[BUG]  [BUGGY]  OutEdges  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [CE]  not  a  statement  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  OutEdges  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	OutEdges  <  Node,Branch  >>  outEdges  =  n.getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  not  a  statement	146	None	replace
751	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  n.getOutEdges();  [CE]  ']'  expected  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  n.getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  ']'  expected	146	None	replace
752	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  first.getFirstChild());  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  first.getFirstChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()!=  first.getFirstChild());	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	76	None	replace
753	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  first.getFirstChild());  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  first.getFirstChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  first.getFirstChild());	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	76	None	replace
754	[BUG]  [BUGGY]  n.remove();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.remove();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.remove();  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
755	[BUG]  [BUGGY]  return  compiler.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
756	[BUG]  [BUGGY]  Node  nextCfgNode  =  first.getLastChild();  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  first.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  first.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	162	None	replace
757	[BUG]  [BUGGY]  Node  nextCfgNode  =  node.getLastChild();  [CE]  cannot  find  symbol  node  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  node.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  node.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  node	162	None	replace
758	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  firstCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Node  firstCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
759	[BUG]  [BUGGY]  Node  firstCfgNode  =  n.getLastChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  firstCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  firstCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
760	[BUG]  [BUGGY]  return  fallThrough.clone();  [CE]  cannot  find  symbol  fallThrough  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.clone();	  return    first.clone();    	non-compiled	[CE]  cannot  find  symbol  fallThrough	119	None	replace
761	[BUG]  [BUGGY]  return  node.clone();  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  node.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  node.clone();	  return    first.clone();    	non-compiled	[CE]  cannot  find  symbol  node	119	None	replace
762	[BUG]  [BUGGY]  return  nextNode.clone();  [CE]  cannot  find  symbol  nextNode  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextNode.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextNode.clone();	  return    first.clone();    	non-compiled	[CE]  cannot  find  symbol  nextNode	119	None	replace
763	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  first.getNext();	  return    n.getParent();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	57	None	replace
764	[BUG]  [BUGGY]  return  curCfg,  n.getFirstChild();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg,  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg,  n.getFirstChild();	  return    curCfg.getFirstChild();    	non-compiled	[CE]  ';'  expected	118	None	replace
765	[BUG]  [BUGGY]  return  firstCfg.getFirstChild();  [CE]  cannot  find  symbol  firstCfg  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  firstCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  firstCfg.getFirstChild();	  return    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  firstCfg	118	None	replace
766	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
767	[BUG]  [BUGGY]  nodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  nodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	nodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
768	[BUG]  [BUGGY]  node  =  compiler.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node  =  compiler.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node  =  compiler.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol  node	167	None	replace
769	[BUG]  [BUGGY]  n  =  compiler.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  compiler.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  compiler.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
770	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Traversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Traversal.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
771	[BUG]  [BUGGY]  node.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
772	[BUG]  [BUGGY]  return  nextCfgNode.getNext();  n.remove();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getNext();  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getNext();  n.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	153	None	replace
773	[BUG]  [BUGGY]  return  curCfg.getNext();  n.remove();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNext();  n.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNext();  n.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
774	[BUG]  [BUGGY]  return  n.getNext();  gNode.remove();  [CE]  cannot  find  symbol  gNode  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  gNode.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  gNode.remove();	  return    n.getNext();    n.remove();    	non-compiled	[CE]  cannot  find  symbol  gNode	153	None	replace
775	[BUG]  [BUGGY]  return  curCfg.getPrevious();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
776	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent().getType()  ==  Token.GETPROP;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent().getType()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent().getType()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
777	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.GETPROP;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
778	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
779	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
780	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
781	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
782	[BUG]  [BUGGY]  return  compiler.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
783	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.BLOCK;  [CE]  incomparable  types:  Node  and  int  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incomparable  types:  Node  and  int	96	None	replace
784	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.BLOCK;  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	96	None	replace
785	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.BLOCK;  [CE]  incomparable  types:  Node  and  int  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.BLOCK;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.BLOCK;    	non-compiled	[CE]  incomparable  types:  Node  and  int	96	None	replace
786	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  Token.EXPR_RESULT;  [CE]  incomparable  types:  Node  and  int  [FE]            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incomparable  types:  Node  and  int	87	None	replace
787	[BUG]  [BUGGY]  return  curCfg.removeFirstChild();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.removeFirstChild();	  return    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
788	[BUG]  [BUGGY]  return  curCfg.firstChild();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.firstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.firstChild();	  return    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
789	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getParent()  ==  null;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  &&  n.getParent()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()    ==    null;    	non-compiled	[CE]  ';'  expected	103	None	replace
790	[BUG]  [BUGGY]  n  =  first.cloneTree();  n.cloneTree();  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.cloneTree();  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.cloneTree();  n.cloneTree();	  return    n.cloneTree();    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  first	49	None	replace
791	[BUG]  [BUGGY]  return  first.cloneTree();  n.cloneTree();  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneTree();  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneTree();  n.cloneTree();	  return    n.cloneTree();    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  first	49	None	replace
792	[BUG]  [BUGGY]  return  n.getTree();  n.cloneTree();  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getTree();  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getTree();  n.cloneTree();	  return    n.cloneTree();    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
793	[BUG]  [BUGGY]  return  first.cloneTree();  second.cloneTree();  [CE]  cannot  find  symbol  first  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneTree();  second.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneTree();  second.cloneTree();	  return    n.cloneTree();    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  first	49	None	replace
794	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDestination();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDestination();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDestination();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
795	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	52	None	replace
796	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	52	None	replace
797	[BUG]  [BUGGY]  return  first.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneTree();  Node  nextCfgNode  =  curCfg.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	50	None	replace
798	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	94	None	replace
799	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.EXPR_RESULT;  [CE]  incomparable  types:  Node  and  int  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incomparable  types:  Node  and  int	94	None	replace
800	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()  ==  null;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()  ==  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()    ==    null;    	non-compiled	[CE]  ';'  expected	141	None	replace
801	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getChildCount()  :  null;  [CE]  incompatible  types  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getChildCount()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getChildCount()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	non-compiled	[CE]  incompatible  types	6	None	replace
802	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getName()  :  null;  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getName()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getName()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
803	[BUG]  [BUGGY]  return  fallThrough.removeFirst();  [CE]  cannot  find  symbol  fallThrough  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.removeFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.removeFirst();	  return    first;    	non-compiled	[CE]  cannot  find  symbol  fallThrough	168	None	replace
804	[BUG]  [BUGGY]  return  fallThrough.next();  [CE]  cannot  find  symbol  fallThrough  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.next();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.next();	  return    first;    	non-compiled	[CE]  cannot  find  symbol  fallThrough	168	None	replace
805	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
806	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  n  =  n.getLastChild();  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
807	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
808	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getLastChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
809	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
810	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  n  =  n.getLastChild();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
811	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
812	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  n  =  n.getLastChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	161	6	replace
813	[BUG]  [BUGGY]  return  curCfg.remove();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.remove();	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
814	[BUG]  [BUGGY]  return  curCfg.remove(n);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.remove(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.remove(n);	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
815	[BUG]  [BUGGY]  return  outEdges.remove();  [CE]  cannot  find  symbol  outEdges  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  outEdges.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  outEdges.remove();	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol  outEdges	121	None	replace
816	[BUG]  [BUGGY]  return  nextCfgNode.remove();  [CE]  cannot  find  symbol  nextCfgNode  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.remove();	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	121	None	replace
817	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  cannot  find  symbol	61	None	add
818	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [CE]  >  expected  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  >  expected	61	None	add
819	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  n.getOutEdges();  [CE]  ']'  expected  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  ']'  expected	61	None	add
820	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(first,  n);  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(first,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(first,  n);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  first	144	None	replace
821	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(curCfg,  n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(curCfg,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(curCfg,  n);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	144	None	replace
822	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(outEdges);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	144	None	replace
823	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  this);  [CE]  cannot  find  symbol  first  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  first,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  first	152	None	replace
824	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	152	6	replace
825	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	152	6	replace
826	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  fallThrough,  this);  [CE]  cannot  find  symbol  fallThrough  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  fallThrough,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  fallThrough,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	152	None	replace
827	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getLastChild()  ==  n);  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	11	6	replace
828	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  n);  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	11	6	replace
829	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getLastChild()!=  n);  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	11	6	replace
830	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()!=  n);  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	11	6	replace
831	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  first);  Node  first  =  n.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  first);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  first);  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	11	None	replace
832	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()!=  first);  Node  first  =  n.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  first);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()!=  first);  Node  first  =  n.getFirstChild();	  return    n.getLastChild();    Node    first    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	11	None	replace
833	[BUG]  [BUGGY]  return  n.toString();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.toString();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.toString();	  return    curCfgNode;    	non-compiled	[CE]  incompatible  types	41	None	replace
834	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.clone(n);  [CE]  clone()  has  protected  access  in  Object  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.clone(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.clone(n);	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	82	None	replace
835	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.cloneNode(n);  [CE]  clone()  has  protected  access  in  Object  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.cloneNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.clone()  :  NodeUtil.cloneNode(n);	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	82	None	replace
836	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
837	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
838	[BUG]  [BUGGY]  return  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getDirectedGraphNode(n);	  return    curCfg.getNode();    	non-compiled	[CE]  incompatible  types	43	None	replace
839	[BUG]  [BUGGY]  return  curCfg.getDirectedGraphNode(n,  n);  [CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,Node)  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getDirectedGraphNode(n,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getDirectedGraphNode(n,  n);	  return    curCfg.getNode();    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,Node)	43	None	replace
840	[BUG]  [BUGGY]  return  curCfg.getDirectedGraphNode(n,  null);  [CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,<null>)  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getDirectedGraphNode(n,  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getDirectedGraphNode(n,  null);	  return    curCfg.getNode();    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,<null>)	43	None	replace
841	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n)  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(curCfg.getDirectedGraphNode(n)  ==  null);	  return    n.getNext();    Node    n    =    curCfg.getDirectedGraphNode(n);    	compilable	  [FE]  RuntimeException  	15	6	replace
842	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n)  ==  null);  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n)  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getDirectedGraphNode(n)  ==  null);	  return    n.getNext();    Node    n    =    curCfg.getDirectedGraphNode(n);    	compilable	  [FE]  RuntimeException  	15	6	replace
843	[BUG]  [BUGGY]  n  =  compiler.traverse(n,  n);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  compiler.traverse(n,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  compiler.traverse(n,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
844	[BUG]  [BUGGY]  return  compiler.traverse(n,  n);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.traverse(n,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.traverse(n,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
845	[BUG]  [BUGGY]  node  =  compiler.traverse(n,  n);  [CE]  cannot  find  symbol  node  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node  =  compiler.traverse(n,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node  =  compiler.traverse(n,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n);    	non-compiled	[CE]  cannot  find  symbol  node	143	None	replace
846	[BUG]  [BUGGY]  return  curCfg.getParent();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getParent();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getParent();  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
847	[BUG]  [BUGGY]  return  curCfgNode.getParent();  [CE]  cannot  find  symbol  curCfgNode  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getParent();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	58	None	replace
848	[BUG]  [BUGGY]  return  first.getParent();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  first  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getParent();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getParent();  Node  nextCfgNode  =  curCfg.getNext();	  return    n.getParent();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	58	None	replace
849	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getParent()!=  null;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  &&  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  &&  n.getParent()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()!=    null;    	non-compiled	[CE]  ';'  expected	102	None	replace
850	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getNext()!=  null;  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  &&  n.getNext()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  &&  n.getNext()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	102	None	replace
851	[BUG]  [BUGGY]  return  curCfg.getNext();  Node  n  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNext();  Node  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNext();  Node  n  =  n.getFirstChild();	  return    n.getNext();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
852	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  first.getFirstChild();	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	76	None	replace
853	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  n  =  first.getFirstChild();	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	76	None	replace
854	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  n  =  first.getFirstChild();	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	76	None	replace
855	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  first.getFirstChild();	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	76	None	replace
856	[BUG]  [BUGGY]  return  curCfg,  outEdges;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg,  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg,  outEdges;	  return    curCfg;    	non-compiled	[CE]  ';'  expected	42	None	replace
857	[BUG]  [BUGGY]  return  curCfg.getInitialValue();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getInitialValue();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getInitialValue();	  return    curCfg;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
858	[BUG]  [BUGGY]  return  first.getLastChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  first  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLastChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	14	None	replace
859	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	14	6	replace
860	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	14	6	replace
861	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	14	6	replace
862	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	14	6	replace
863	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(Token.NAME);  [CE]  clone()  has  protected  access  in  Object  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(Token.NAME);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
864	[BUG]  [BUGGY]  return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  fallThrough);  [CE]  clone()  has  protected  access  in  Object  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  fallThrough);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
865	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  outEdges);  [CE]  clone()  has  protected  access  in  Object  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  outEdges);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
866	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(outEdges);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	non-compiled	[CE]  cannot  find  symbol  outEdges	142	None	replace
867	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(n,  fallThrough);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	142	None	replace
868	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(curCfg);  [CE]  method  redeclareVarsInsideBranch  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.redeclareVarsInsideBranch(curCfg);	  return    n.cloneTree();    NodeUtil.redeclareVarsInsideBranch(n);    	non-compiled	[CE]  method  redeclareVarsInsideBranch  in  class  NodeUtil  cannot  be  applied  to  given  types;	142	None	replace
869	[BUG]  [BUGGY]  return  curCfg.getDirectedGraphNode(n).clone();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getDirectedGraphNode(n).clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getDirectedGraphNode(n).clone();	  return    curCfg.clone();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
870	[BUG]  [BUGGY]  return  curCfg.getFactory().clone();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFactory().clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFactory().clone();	  return    curCfg.clone();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
871	[BUG]  [BUGGY]  return  curCfg.getDirectedGraphNode();  [CE]  no  suitable  method  found  for  getDirectedGraphNode()  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getDirectedGraphNode();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getDirectedGraphNode();	  return    curCfg.clone();    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode()	120	None	replace
872	[BUG]  [BUGGY]  return  noOpStatement.cloneNoOpStatement();  [CE]  cannot  find  symbol  noOpStatement  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  noOpStatement.cloneNoOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  noOpStatement.cloneNoOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol  noOpStatement	130	None	replace
873	[BUG]  [BUGGY]  return  parent.cloneNoOpStatement();  [CE]  cannot  find  symbol  parent  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.cloneNoOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.cloneNoOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol  parent	130	None	replace
874	[BUG]  [BUGGY]  return  first.getLastChild();  n.getLastChild();  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getLastChild();  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLastChild();  n.getLastChild();	  return    n.getLastChild();    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	134	None	replace
875	[BUG]  [BUGGY]  return  first.getLastChild();  first.getLastChild();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getLastChild();  first.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLastChild();  first.getLastChild();	  return    n.getLastChild();    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	134	None	replace
876	[BUG]  [BUGGY]  return  n.getFirstChild();  n.removeFirstChild();  [CE]  unreachable  statement  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	non-compiled	[CE]  unreachable  statement	157	None	replace
877	[BUG]  [BUGGY]  return  cfgStack.cloneBlock();  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  cfgStack.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  cfgStack.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
878	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	72	None	add
879	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  nextCfgNode  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  Node  nextCfgNode  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    Node  nextCfgNode  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	72	None	add
880	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	68	None	add
881	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    n  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	68	None	add
882	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	68	None	add
883	[BUG]  [BUGGY]  return  first.removeFirstChild();  [CE]  cannot  find  symbol  first  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.removeFirstChild();	  return    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	139	None	replace
884	[BUG]  [BUGGY]  n  =  nextCfgNode.getFirstChild();  [CE]  cannot  find  symbol  nextCfgNode  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  nextCfgNode.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  nextCfgNode.getFirstChild();	  n    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	67	None	replace
885	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isVarDeclaration(n);  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isVarDeclaration(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isVarDeclaration(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
886	[BUG]  [BUGGY]  return  n.getFirst();  n  =  n.getNext();  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirst();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirst();  n  =  n.getNext();	  return    n.getNext();    n    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
887	[BUG]  [BUGGY]  return  first.getNext();  n  =  n.getNext();  [CE]  cannot  find  symbol  first  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  n  =  n.getNext();	  return    n.getNext();    n    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	22	None	replace
888	[BUG]  [BUGGY]  return  n.getFirstChild();  n  =  n.getNext();  [CE]  unreachable  statement  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  n  =  n.getNext();	  return    n.getNext();    n    =    n.getNext();    	non-compiled	[CE]  unreachable  statement	22	None	replace
889	[BUG]  [BUGGY]  return  n.getLastChild();  n  =  n.getNext();  [CE]  unreachable  statement  [FE]                            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n  =  n.getNext();	  return    n.getNext();    n    =    n.getNext();    	non-compiled	[CE]  unreachable  statement	22	None	replace
890	[BUG]  [BUGGY]  NodeUtil.removeChild(curCfg,  first,  n);  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(curCfg,  first,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(curCfg,  first,  n);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  cannot  find  symbol  first	33	None	replace
891	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
892	[BUG]  [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
893	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getLastChild();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
894	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
895	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getLastChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
896	[BUG]  [BUGGY]  return  n.getParent();  n.getNext();  [CE]  unreachable  statement  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  n.getNext();	  return    n.getNext();    n.getNext();    	non-compiled	[CE]  unreachable  statement	109	None	replace
897	[BUG]  [BUGGY]  return  n.getFirst();  n.getNext();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirst();  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirst();  n.getNext();	  return    n.getNext();    n.getNext();    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
898	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  nNode.getOutEdges();  [CE]  cannot  find  symbol  nNode  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  nNode.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  nNode.getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol  nNode	146	None	replace
899	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  node.getOutEdges();  [CE]  cannot  find  symbol  node  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  node.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  node.getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol  node	146	None	replace
900	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
901	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	3	None	add
902	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    if(n.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
903	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
904	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
905	[BUG]  [BUGGY]  Node  curCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  curCfg.getDirectedGraphNode(n);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  incompatible  types	123	None	replace
906	[BUG]  [BUGGY]  return  curCfgNode.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  curCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	123	None	replace
907	[BUG]  [BUGGY]  Node  curCfgNode  =  n.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.getDirectedGraphNode(n);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
908	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
909	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
910	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
911	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
912	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  n);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  n);  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
913	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  n);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  n);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  n);  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	81	6	replace
914	[BUG]  [BUGGY]  return  first.getType()!=  Token.BLOCK;  [CE]  cannot  find  symbol  first  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()!=  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()!=  Token.BLOCK;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  cannot  find  symbol  first	93	None	replace
915	[BUG]  [BUGGY]  return  n.getType()  [BUGGY]  Token.BLOCK;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  [BUGGY]  Token.BLOCK;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  [BUGGY]  Token.BLOCK;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	93	None	replace
916	[BUG]  [BUGGY]  return  first.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [CE]  cannot  find  symbol  first  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	71	None	replace
917	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME  &&  n.getLastChild()!=  n.getLastChild();  [CE]  incompatible  types  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME  &&  n.getLastChild()!=  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME  &&  n.getLastChild()!=  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	non-compiled	[CE]  incompatible  types	71	None	replace
918	[BUG]  [BUGGY]  return  compiler.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
919	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
920	[BUG]  [BUGGY]  node.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  node.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	node.getParent();  NodeTraversal.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol  node	167	None	replace
921	[BUG]  [BUGGY]  ReflectionTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  ReflectionTraversal.traverse(compiler,  n,  new  UnsupportedOperation());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	ReflectionTraversal.traverse(compiler,  n,  new  UnsupportedOperation());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    UnsupportedOperation());    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
922	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  collapse);  [CE]  cannot  find  symbol  collapse  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  collapse);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  collapse);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  collapse	113	None	replace
923	[BUG]  [BUGGY]  NodeUtil.removeChild(child,  n);  [CE]  cannot  find  symbol  child  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(child,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(child,  n);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  child	113	None	replace
924	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  root);  [CE]  cannot  find  symbol  root  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  root);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  root);	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  root	113	None	replace
925	[BUG]  [BUGGY]  return  curCfg.getType()  >>  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getType()  >>  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getType()  >>  Token.EXPR_RESULT;	  return    curCfg.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
926	[BUG]  [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT  ||  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT  ||  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getType()  ==  Token.EXPR_RESULT  ||  curCfg.getDirectedGraphNode(n);	  return    curCfg.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
927	[BUG]  [BUGGY]  return  n.getParent();  n  =  n.getLastChild();  [CE]  unreachable  statement  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  n  =  n.getLastChild();	  return    n.getParent();    n    =    n.getFirstChild();    	non-compiled	[CE]  unreachable  statement	164	None	replace
928	[BUG]  [BUGGY]  return  n.getType()  >>  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  >>  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  >>  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
929	[BUG]  [BUGGY]  return  n.getType()  >=  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  >=  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  >=  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
930	[BUG]  [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getType()  ==  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getType()  ==  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
931	[BUG]  [BUGGY]  return  first.getType()  ==  Token.EXPR_RESULT  +  1;  [CE]  cannot  find  symbol  first  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  cannot  find  symbol  first	127	None	replace
932	[BUG]  [BUGGY]  n  =  nextCfgNode.getLastChild();  [CE]  cannot  find  symbol  nextCfgNode  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  nextCfgNode.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  nextCfgNode.getLastChild();	  n    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	62	None	replace
933	[BUG]  [BUGGY]  return  first.cloneTree();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneTree();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneTree();  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	47	None	replace
934	[BUG]  [BUGGY]  n  =  first.cloneTree();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.cloneTree();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.cloneTree();  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	47	None	replace
935	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.cloneTree()!=  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.cloneTree()!=  null);  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	47	6	replace
936	[BUG]  [BUGGY]  Preconditions.checkState(n.cloneTree()!=  null);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.cloneTree()!=  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.cloneTree()!=  null);  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	47	6	replace
937	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.cloneTree()  ==  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.cloneTree()  ==  null);  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	47	6	replace
938	[BUG]  [BUGGY]  Preconditions.checkState(n.cloneTree()  ==  null);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.cloneTree()  ==  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.cloneTree()  ==  null);  Node  nextCfgNode  =  n.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	47	6	replace
939	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().getLastChild());  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().getLastChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  n.getFirstChild().getLastChild());	  return    fallThrough;    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	40	None	replace
940	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  n.getLastChild());  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getLastChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  n.getLastChild());	  return    fallThrough;    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	40	None	replace
941	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().getString());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  Node.newString(Token.NAME,  n.getFirstChild().getString());	  return    fallThrough;    	compilable	  [FE]  RuntimeException  	40	6	replace
942	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().getString());  [FE]  RuntimeException  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().getString());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  n.getFirstChild().getString());	  return    fallThrough;    	compilable	  [FE]  RuntimeException  	40	6	replace
943	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getLastChild().getString());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  Node.newString(Token.NAME,  n.getLastChild().getString());	  return    fallThrough;    	compilable	  [FE]  RuntimeException  	40	6	replace
944	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  n.getLastChild().getString());  [FE]  RuntimeException  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getLastChild().getString());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  n.getLastChild().getString());	  return    fallThrough;    	compilable	  [FE]  RuntimeException  	40	6	replace
945	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild());  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  n.getFirstChild());	  return    fallThrough;    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	40	None	replace
946	[BUG]  [BUGGY]  return  curCfg.cloneTree();  n  =  n.cloneTree();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  n  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  n  =  n.cloneTree();	  return    n.cloneTree();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
947	[BUG]  [BUGGY]  return  curCfg.cloneTree();  n  =  n.getDirectedGraphNode(cfg);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  n  =  n.getDirectedGraphNode(cfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  n  =  n.getDirectedGraphNode(cfg);	  return    n.cloneTree();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
948	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getLastChild();	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
949	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  Node  first  =  n.getLastChild();	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
950	[BUG]  [BUGGY]  return  collapsedThrough.clone();  [CE]  cannot  find  symbol  collapsedThrough  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  collapsedThrough.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  collapsedThrough.clone();	  return    first.clone();    	non-compiled	[CE]  cannot  find  symbol  collapsedThrough	119	None	replace
951	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	70	None	add
952	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();	  	non-compiled	[CE]  unreachable  statement	70	None	add
953	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	70	None	add
954	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  firstCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Node  firstCfgNode  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	31	6	add
955	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  firstCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Node  firstCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Node  firstCfgNode  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	31	6	add
956	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.NAME);	  	compilable	  [FE]  RuntimeException  	31	6	add
957	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.NAME);	  	compilable	  [FE]  RuntimeException  	31	6	add
958	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    n  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	31	6	add
959	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  n  =  n.getNext();  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    n  =  n.getNext();	  	compilable	  [FE]  RuntimeException  	31	6	add
960	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getNext()!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getNext()!=  null);	  	compilable	  [FE]  RuntimeException  	31	6	add
961	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getNext()!=  null);  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getNext()!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getNext()!=  null);	  	compilable	  [FE]  RuntimeException  	31	6	add
962	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  RuntimeException  	31	6	add
963	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.GETPROP);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.GETPROP);	  	compilable	  [FE]  RuntimeException  	31	6	add
964	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  RuntimeException  	31	6	add
965	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [FE]  RuntimeException  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.FUNCTION);	  	compilable	  [FE]  RuntimeException  	31	6	add
966	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.CALL;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incompatible  types	98	None	replace
967	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.CALL;  [CE]  incomparable  types:  Node  and  int  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incomparable  types:  Node  and  int	98	None	replace
968	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.CALL;  [CE]  incomparable  types:  Node  and  int  [FE]                                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incomparable  types:  Node  and  int	98	None	replace
969	[BUG]  [BUGGY]  return  compiler.getNext();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.getNext();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.getNext();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
970	[BUG]  [BUGGY]  return  n.getParent();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  first  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeUtil.removeChild(n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeUtil.removeChild(n,  first);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  first	108	None	replace
971	[BUG]  [BUGGY]  return  n.getParent();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	108	None	replace
972	[BUG]  [BUGGY]  return  n.getNext();  nodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  nodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  nodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  fallThrough	108	None	replace
973	[BUG]  [BUGGY]  return  nextCfgNode.getNext();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getNext();  NodeUtil.removeChild(n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getNext();  NodeUtil.removeChild(n,  first);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	108	None	replace
974	[BUG]  [BUGGY]  return  first.getNext();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  NodeUtil.removeChild(n,  fallThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  first	108	None	replace
975	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(last);  [CE]  cannot  find  symbol  last  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(last);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(last);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  cannot  find  symbol  last	158	None	replace
976	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getParent()!=  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
977	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()!=  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()!=  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
978	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getParent()  ==  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
979	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()  ==  null);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
980	[BUG]  [BUGGY]  return  first.getParent();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getParent();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getParent();  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	55	None	replace
981	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
982	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
983	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	compilable	  [FE]  RuntimeException  	86	6	replace
984	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent();  [FE]  RuntimeException  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION?  null  :  n.getParent();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	compilable	  [FE]  RuntimeException  	86	6	replace
985	[BUG]  [BUGGY]  return  first.getType()  ==  Token.FUNCTION?  null  :  n.clone();  [CE]  cannot  find  symbol  first  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.FUNCTION?  null  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.FUNCTION?  null  :  n.clone();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	non-compiled	[CE]  cannot  find  symbol  first	86	None	replace
986	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  fallThrough,  new  RuntimeException( " "));  [CE]  cannot  find  symbol  fallThrough  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  fallThrough,  new  RuntimeException( " "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  n,  fallThrough,  new  RuntimeException( " "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  fallThrough	166	None	replace
987	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  first,  new  RuntimeException( " "));  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  first,  new  RuntimeException( " "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  first,  new  RuntimeException( " "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  first	166	None	replace
988	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  first,  new  RuntimeException( " "));  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  first,  new  RuntimeException( " "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  first,  new  RuntimeException( " "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  first	166	None	replace
989	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "),  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "),  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "),  outEdges);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  cannot  find  symbol  outEdges	166	None	replace
990	[BUG]  [BUGGY]  return  curCfg.cloneTree();  Node  n  =  n.getDirectedGraphNode(curCfg);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  Node  n  =  n.getDirectedGraphNode(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  Node  n  =  n.getDirectedGraphNode(curCfg);	  return    n.cloneTree();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
991	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges(n);	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    	compilable	  [FE]  RuntimeException  	111	6	replace
992	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges(n);  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges(n);	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    	compilable	  [FE]  RuntimeException  	111	6	replace
993	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  null,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  null,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  NodeTraversal.traverse(compiler,  null,  outEdges);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	122	None	replace
994	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getNext()!=  null;  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getNext()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getNext()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent()!=    null;    	non-compiled	[CE]  incompatible  types	92	None	replace
995	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  nextCfgNode);	          NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	34	None	replace
996	[BUG]  [BUGGY]  return  lastNode.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  lastNode  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  lastNode.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  lastNode.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol  lastNode	149	None	replace
997	[BUG]  [BUGGY]  return  getCfgStack().cloneTree();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  getCfgStack().cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  getCfgStack().cloneTree();	  return    first.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
998	[BUG]  [BUGGY]  Return  n.cloneTree();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.cloneTree();	  return    first.cloneTree();    	non-compiled	[CE]  ';'  expected	38	None	replace
999	[BUG]  [BUGGY]  return  first.getLastChild();  n  =  n.getLastChild();  [CE]  cannot  find  symbol  first  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getLastChild();  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLastChild();  n  =  n.getLastChild();	  return    n.getLastChild();    n    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	8	None	replace
1000	[BUG]  [BUGGY]  return  first.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  first  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol  first	91	None	replace
1001	[BUG]  [BUGGY]  return  curCfgNode.cloneFunction();  [CE]  cannot  find  symbol  curCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.cloneFunction();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.cloneFunction();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	39	None	replace
1002	[BUG]  [BUGGY]  return  n.getFirstChild();  Node  n  =  curCfg.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  Node  n  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  Node  n  =  curCfg.getLastChild();	  return    n.getLastChild();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	135	None	replace
1003	[BUG]  [BUGGY]  Preconditions.checkState(curCfg!=  null);  Node  n  =  curCfg.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg!=  null);  Node  n  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg!=  null);  Node  n  =  curCfg.getLastChild();	  return    n.getLastChild();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	135	None	replace
1004	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  null;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  null;	  return    n.getType()!=    Token.BLOCK    ||    n.getParent()    ==    null;    	non-compiled	[CE]  ';'  expected	104	None	replace
1005	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  root);  [CE]  cannot  find  symbol  root  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  root);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  root);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  root	29	None	replace
1006	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  false);  [CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,boolean)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  false);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  false);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,boolean)	29	None	replace
1007	[BUG]  [BUGGY]  return  compiler.getLastChild();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.getLastChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.getLastChild();  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
1008	[BUG]  [BUGGY]  return  first.getNext();  Node  n  =  curCfg.getLastChild();  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  Node  n  =  curCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  Node  n  =  curCfg.getLastChild();	  return    n.getNext();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	19	None	replace
1009	[BUG]  [BUGGY]  return  curCfg.getNext();  Node  n  =  n.getLastChild();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNext();  Node  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNext();  Node  n  =  n.getLastChild();	  return    n.getNext();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1010	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  if(n.getType()  ==  Token.CALL)  {  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  }  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  if(n.getType()  ==  Token.CALL)  {  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    if(n.getType()  ==  Token.CALL)  {  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
1011	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	5	None	add
1012	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  Node  n  =  curCfg.getDirectedGraphNode(n);  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    Node  n  =  curCfg.getDirectedGraphNode(n);  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	5	None	add
1013	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	1	None	add
1014	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [CE]  cannot  find  symbol  fallThrough  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  NodeTraversal.traverse(compiler,  n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    NodeTraversal.traverse(compiler,  n,  fallThrough);	  	non-compiled	[CE]  cannot  find  symbol  fallThrough	1	None	add
1015	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n  =  n.getParent();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    n  =  n.getParent();	  	non-compiled	[CE]  unreachable  statement	1	None	add
1016	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	1	None	add
1017	[BUG]  [BUGGY]  return  curCfg.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  NodeUtil.removeChild(n,  fallThrough);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1018	[BUG]  [BUGGY]  return  curCfg.cloneTree();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.cloneTree();  NodeUtil.removeChild(n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.cloneTree();  NodeUtil.removeChild(n,  first);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1019	[BUG]  [BUGGY]  Return  n  =  curCfg.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n  =  curCfg.cloneTree();  NodeUtil.removeChild(n,  fallThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n  =  curCfg.cloneTree();  NodeUtil.removeChild(n,  fallThrough);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1020	[BUG]  [BUGGY]  Return  n  =  curCfg.cloneTree();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n  =  curCfg.cloneTree();  NodeUtil.removeChild(n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n  =  curCfg.cloneTree();  NodeUtil.removeChild(n,  first);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
1021	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(parent,  n);  [CE]  cannot  find  symbol  parent  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(parent,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(parent,  n);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  parent	136	None	replace
1022	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Node  next  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
1023	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getFirstChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  next  =  n.getFirstChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
1024	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  last  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Node  last  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
1025	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  last  =  n.getLastChild();  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  last  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  last  =  n.getLastChild();	  	compilable	  [FE]  RuntimeException  	35	6	add
1026	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getNextChild();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Node  next  =  n.getNextChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Node  next  =  n.getNextChild();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
1027	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(first!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Preconditions.checkState(first!=  null);	  	compilable	  [FE]  RuntimeException  	35	6	add
1028	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(first!=  null);  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(first!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Preconditions.checkState(first!=  null);	  	compilable	  [FE]  RuntimeException  	35	6	add
1029	[BUG]  [BUGGY]  n  =  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getFirstChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1030	[BUG]  [BUGGY]  Node  firstChild  =  curCfg.getFirstChild();  Node  nextCfgNode  =  nextCfgNode.getNext();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  firstChild  =  curCfg.getFirstChild();  Node  nextCfgNode  =  nextCfgNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  firstChild  =  curCfg.getFirstChild();  Node  nextCfgNode  =  nextCfgNode.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1031	[BUG]  [BUGGY]  Node  firstChild  =  curCfg.getFirstChild();  Node  nextCfgNode  =  lastCfgNode.getNext();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  firstChild  =  curCfg.getFirstChild();  Node  nextCfgNode  =  lastCfgNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  firstChild  =  curCfg.getFirstChild();  Node  nextCfgNode  =  lastCfgNode.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1032	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  first.getFirstChild());  [CE]  cannot  find  symbol  first  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  first.getFirstChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  first.getFirstChild());	  return    n.getLastChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	12	None	replace
1033	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  first);  Node  n  =  first.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  first);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  first);  Node  n  =  first.getFirstChild();	  return    n.getLastChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	12	None	replace
1034	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  Node  n  =  n.getParent();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
1035	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  nextCfgNode.getFirstChild()  :  null;  [CE]  cannot  find  symbol  nextCfgNode  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  nextCfgNode.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  nextCfgNode.getFirstChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	73	None	replace
1036	[BUG]  [BUGGY]  return  first.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  first	73	None	replace
1037	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  outEdges);  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  first,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  first,  outEdges);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	17	None	replace
1038	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  first);  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  n,  first);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	17	None	replace
1039	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  null,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  null,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  null,  outEdges);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	17	None	replace
1040	[BUG]  [BUGGY]  return  fallThrough.getFirst();  [CE]  cannot  find  symbol  fallThrough  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  fallThrough.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  fallThrough.getFirst();	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol  fallThrough	131	None	replace
1041	[BUG]  [BUGGY]  return  first.getParent();  n  =  n.getNext();  [CE]  cannot  find  symbol  first  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getParent();  n  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getParent();  n  =  n.getNext();	  return    n.getParent();    n    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	100	None	replace
1042	[BUG]  [BUGGY]  return  n.getParent();  n  =  n.getChildCount();  [CE]  incompatible  types  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  n  =  n.getChildCount();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  n  =  n.getChildCount();	  return    n.getParent();    n    =    n.getNext();    	non-compiled	[CE]  incompatible  types	100	None	replace
1043	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	66	None	add
1044	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  [CE]  >  expected  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  >  expected	66	None	add
1045	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();  [CE]  ']'  expected  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  [Delete]  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  ']'  expected	66	None	add
1046	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
1047	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  ==  outEdges  =  curCfg.getOutEdges();  [CE]  >  expected  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  ==  outEdges  =  curCfg.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  ==  outEdges  =  curCfg.getOutEdges();	  	non-compiled	[CE]  >  expected	66	None	add
1048	[BUG]  [BUGGY]  n  =  n.getFirstChild();  ((  ControlFlowGraph  <  Node,  Branch>)n).removeChild(curCfg.getDirectedGraphNode(n));  n  =  n.getFirstChild();  [CE]  wrong  number  of  type  arguments;  required  1  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  ((  ControlFlowGraph  <  Node,  Branch>)n).removeChild(curCfg.getDirectedGraphNode(n));  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    ((  ControlFlowGraph  <  Node,  Branch>)n).removeChild(curCfg.getDirectedGraphNode(n));  n  =  n.getFirstChild();	  	non-compiled	[CE]  wrong  number  of  type  arguments;  required  1	66	None	add
1049	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n;  [CE]  no  suitable  method  found  for  getOutEdges()  [FE]                RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getOutEdges();  return  n;	  	non-compiled	[CE]  no  suitable  method  found  for  getOutEdges()	66	None	add
1050	[BUG]  [BUGGY]  Preconditions.checkState(n.getNext()  ==  first.getNext());  [CE]  cannot  find  symbol  first  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getNext()  ==  first.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getNext()  ==  first.getNext());	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	16	None	replace
1051	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getChildCount()  ==  1;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  &&  n.getChildCount()  ==  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  &&  n.getChildCount()  ==  1;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	150	None	replace
1052	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getDestination();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getDestination();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getDestination();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1053	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  cannot  find  symbol  Context  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(n.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  cannot  find  symbol  Context	26	None	add
1054	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(outEdges!=  null);  [CE]  cannot  find  symbol  outEdges  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(outEdges!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(outEdges!=  null);	  	non-compiled	[CE]  cannot  find  symbol  outEdges	26	None	add
1055	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.NAME);  [CE]  cannot  find  symbol  Context  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(n.getType()  ==  Token.NAME);	  	non-compiled	[CE]  cannot  find  symbol  Context	26	None	add
1056	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getParent()!=  null);  [CE]  cannot  find  symbol  Context  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getParent()!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(n.getParent()!=  null);	  	non-compiled	[CE]  cannot  find  symbol  Context	26	None	add
1057	[BUG]  [BUGGY]  return  first.getNext();  Node  n  =  curCfg.getParent();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  Node  n  =  curCfg.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  Node  n  =  curCfg.getParent();	  return    n.getNext();    Node    n    =    curCfg.getParent();    	non-compiled	[CE]  cannot  find  symbol  first	110	None	replace
1058	[BUG]  [BUGGY]  return  n,  curCfg.getName();  [CE]  ';'  expected  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n,  curCfg.getName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n,  curCfg.getName();	  return    n.getName();    	non-compiled	[CE]  ';'  expected	115	None	replace
1059	[BUG]  [BUGGY]  return  outEdges.getName();  [CE]  cannot  find  symbol  outEdges  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  outEdges.getName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  outEdges.getName();	  return    n.getName();    	non-compiled	[CE]  cannot  find  symbol  outEdges	115	None	replace
1060	[BUG]  [BUGGY]  return  first.getName();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getName();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getName();	  return    n.getName();    	non-compiled	[CE]  cannot  find  symbol  first	115	None	replace
1061	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent().getType()  ==  Token.NAME;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent().getType()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent().getType()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
1062	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.NAME;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
1063	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getName()  ==  Token.NAME;  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getName()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getName()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
1064	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(1);  [CE]  clone()  has  protected  access  in  Object  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(1);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(1);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
1065	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(2);  [CE]  clone()  has  protected  access  in  Object  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(2);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(2);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
1066	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(first);  [CE]  clone()  has  protected  access  in  Object  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newNumber(first);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
1067	[BUG]  [BUGGY]  return  n.getParent();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1068	[BUG]  [BUGGY]  return  nextCfgNode.getNext();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  nextCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getNext();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getNext();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	155	None	replace
1069	[BUG]  [BUGGY]  return  next.getNext();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  next  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  next.getNext();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  next.getNext();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol  next	155	None	replace
1070	[BUG]  [BUGGY]  return  curCfgNode.getGrandparent();  [CE]  cannot  find  symbol  curCfgNode  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfgNode.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfgNode.getGrandparent();	  return    n.getGrandparent();    	non-compiled	[CE]  cannot  find  symbol  curCfgNode	114	None	replace
1071	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  first);  [CE]  cannot  find  symbol  first  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  n,  first);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	99	None	replace
1072	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  first,  n);  [CE]  cannot  find  symbol  first  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  first,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  first,  n);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	99	None	replace
1073	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  first,  n);  [CE]  cannot  find  symbol  first  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  first,  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeTraversal.traverse(compiler,  first,  n);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	48	None	replace
1074	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  root);  [CE]  cannot  find  symbol  root  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  root);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  root);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  root	48	None	replace
1075	[BUG]  [BUGGY]  Return  n.getNext();  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getNext();	  return    first.getNext();    	non-compiled	[CE]  ';'  expected	23	None	replace
1076	[BUG]  [BUGGY]  return  n.getLastChild();  n  =  n.getParent();  [CE]  unreachable  statement  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n  =  n.getParent();	  return    n.getParent();    n    =    n.getParent();    	non-compiled	[CE]  unreachable  statement	53	None	replace
1077	[BUG]  [BUGGY]  return  compiler.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1078	[BUG]  [BUGGY]  return  curCfg.first.getLastChild();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.first.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.first.getLastChild();	  return    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	64	None	replace
1079	[BUG]  [BUGGY]  return  curCfg.nextChild();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.nextChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.nextChild();	  return    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1080	[BUG]  [BUGGY]  return  first.getLastChild();  n.setLastChild();  [CE]  cannot  find  symbol  first  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getLastChild();  n.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getLastChild();  n.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	156	None	replace
1081	[BUG]  [BUGGY]  return  curCfg.getLastChild();  n.setLastChild();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getLastChild();  n.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getLastChild();  n.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1082	[BUG]  [BUGGY]  return  n.getFirstChild();  n.setLastChild();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  n.setLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  n.setLastChild();	  return    n.getLastChild();    n.setLastChild();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1083	[BUG]  [BUGGY]  return  first.getNext();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  cannot  find  symbol  first  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getNext();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getNext();  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getNext();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  first	107	None	replace
1084	[BUG]  [BUGGY]  return  parent.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  parent  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.getType()  ==  Token.EXPR_RESULT  ||  n.getParent().getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent().getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol  parent	89	None	replace
1085	[BUG]  [BUGGY]  return  first.cloneTree();  n  =  n.cloneTree();  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.cloneTree();  n  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.cloneTree();  n  =  n.cloneTree();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  first	46	None	replace
1086	[BUG]  [BUGGY]  return  n.cloneNoOpStatements();  n  =  n.cloneTree();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneNoOpStatements();  n  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneNoOpStatements();  n  =  n.cloneTree();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1087	[BUG]  [BUGGY]  return  n.cloneChildren();  n  =  n.cloneChildren();  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneChildren();  n  =  n.cloneChildren();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneChildren();  n  =  n.cloneChildren();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1088	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  &&  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  ';'  expected	151	None	replace
1089	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
1090	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NEW);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
1091	[BUG]  [BUGGY]  return  first.getType()  ==  Token.CALL?  null  :  first.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  first.getType()  ==  Token.CALL?  null  :  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  first.getType()  ==  Token.CALL?  null  :  first.getFirstChild();	  return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  first	69	None	replace
1092	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode(n);  return  n;  [CE]  incompatible  types  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode(n);  return  n;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getDirectedGraphNode(n);  return  n;	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  incompatible  types	148	None	replace
1093	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  return  n;  [CE]  >  expected  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  return  n;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  curCfg.getOutEdges();  return  n;	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    curCfg.getOutEdges();    return    n;    	non-compiled	[CE]  >  expected	148	None	replace
1094	[BUG]  [BUGGY]  n  =  compiler.traverse(n,  null,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  compiler.traverse(n,  null,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  compiler.traverse(n,  null,  new  ControlFlowGraph());	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	51	None	replace
1095	[BUG]  [BUGGY]  ReflectionTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  ReflectionTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	ReflectionTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	51	None	replace
1096	[BUG]  [BUGGY]  n  =  compiler.traverse(n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  compiler.traverse(n,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  compiler.traverse(n,  new  ControlFlowGraph());	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	51	None	replace
1097	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent().clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent().clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getParent().clone();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	84	None	replace
1098	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.removeNoOpStatements();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.removeNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.removeNoOpStatements();	  return    n.getType()    ==    Token.CALL?    null    :    n.clone();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1099	[BUG]  [BUGGY]  return  curCfg.getLastChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getLastChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1100	[BUG]  [BUGGY]  lastChild  =  n.getLastChild();  Node  nextCfgNode  =  curCfg.getNext();  [CE]  cannot  find  symbol  lastChild  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  lastChild  =  n.getLastChild();  Node  nextCfgNode  =  curCfg.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	lastChild  =  n.getLastChild();  Node  nextCfgNode  =  curCfg.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol  lastChild	10	None	replace
1101	[BUG]  [BUGGY]  n  =  curCfg.getLastChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getLastChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getLastChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getLastChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1102	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGrandparentNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()  ==  null);  Node  n  =  curCfg.getDirectedGrandparentNode(n);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGrandparentNode(n);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	59	None	replace
1103	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  Node  n  =  curCfg.getDirectedGraphNode(n);  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  Node  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  n);  Node  n  =  curCfg.getDirectedGraphNode(n);	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	7	None	replace
1104	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()!=  curCfg.getDirectedGraphNode(n);  [CE]  ')'  expected  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()!=  curCfg.getDirectedGraphNode(n);	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  ')'  expected	7	None	replace
1105	[BUG]  [BUGGY]  ReflectionTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  ReflectionTraversal  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  ReflectionTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	ReflectionTraversal.traverse(compiler,  n,  this);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  ReflectionTraversal	44	None	replace
1106	[BUG]  [BUGGY]  return  compiler.traverse(n,  n,  this);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  compiler.traverse(n,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  compiler.traverse(n,  n,  this);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1107	[BUG]  [BUGGY]  return  n.removeFirstChild();  n  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  n  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    n  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	138	None	add
1108	[BUG]  [BUGGY]  return  n.removeFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  	non-compiled	[CE]  incompatible  types	138	None	add
1109	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeUtil.removeChild(n);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  NodeUtil.removeChild(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    NodeUtil.removeChild(n);	  	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	138	None	add
1110	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getGrandparent()  :  null;  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getGrandparent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getGrandparent()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
1111	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirst();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getFirst();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
1112	[BUG]  [BUGGY]  Node  nextCfgNode  =  n.getFirst();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  n.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  n.getFirst();	          Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1113	[BUG]  [BUGGY]  return  noOpStatements.cloneNoOpStatements();  [CE]  cannot  find  symbol  noOpStatements  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  noOpStatements.cloneNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  noOpStatements.cloneNoOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol  noOpStatements	37	None	replace
1114	[BUG]  [BUGGY]  return  parent.cloneNoOpStatements();  [CE]  cannot  find  symbol  parent  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.cloneNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.cloneNoOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol  parent	37	None	replace
1115	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getLastChild()  ==  n);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getLastChild()  ==  n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getLastChild()  ==  n);	  return    n.getNext();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1116	[BUG]  [BUGGY]  return  n.cloneTree();  Node  nextCfgNode  =  first.getNext();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  Node  nextCfgNode  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  Node  nextCfgNode  =  first.getNext();	  return    n.cloneTree();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	47	None	replace
1117	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.mayHaveSideEffects(n);  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.mayHaveSideEffects(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
1118	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isExpressionNode(n);  [CE]  incompatible  types  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  NodeUtil.isExpressionNode(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
1119	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  NodeUtil.isFunctionDeclaration(n);	  return    n.getType()    ==    Token.BLOCK    ||    NodeUtil.isFunctionDeclaration(n);    	non-compiled	[CE]  incompatible  types	105	None	replace
1120	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	138	None	add
1121	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeUtil.removeChild(n,  first);  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  NodeUtil.removeChild(n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    NodeUtil.removeChild(n,  first);	  	non-compiled	[CE]  cannot  find  symbol  first	138	None	add
1122	[BUG]  [BUGGY]  return  n.removeFirstChild();  NodeUtil.copyCurrentStatement(n);  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeFirstChild();  NodeUtil.copyCurrentStatement(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.removeFirstChild();    NodeUtil.copyCurrentStatement(n);	  	non-compiled	[CE]  cannot  find  symbol	138	None	add
1123	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getGrandparent();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getGrandparent();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
1124	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()!=  Token.CALL?  null  :  n.getParent();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
1125	[BUG]  [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.getParent();  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.CALL?  null  :  n.getParent();	  return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    	compilable	  [FE]  RuntimeException  	2	6	replace
1126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "RemoveUnconditionalBranch "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "RemoveUnconditionalBranch "));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "RemoveUnconditionalBranch "));	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)	166	None	replace
1127	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getLastChild());  [CE]  no  suitable  method  found  for  checkState(DiGraphNode<Node,Branch>,Node)  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getLastChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getLastChild());	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  checkState(DiGraphNode<Node,Branch>,Node)	7	None	replace
1128	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getFirstChild());  [CE]  no  suitable  method  found  for  checkState(DiGraphNode<Node,Branch>,Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getFirstChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getFirstChild());	  return    n.getLastChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  checkState(DiGraphNode<Node,Branch>,Node)	7	None	replace
1129	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getParent()!=  null;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getParent()!=  null;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	93	None	replace
1130	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null);	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  ';'  expected	93	None	replace
1131	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getFirstChild()  ==  null;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getFirstChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getFirstChild()  ==  null;	  return    n.getType()!=    Token.BLOCK;    	non-compiled	[CE]  incompatible  types	93	None	replace
1132	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  n  =  first.getFirstChild();	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	76	None	replace
1133	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  first.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  first.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  first.getFirstChild();	  return    n.getFirstChild();    Node    n    =    first.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	76	None	replace
1134	[BUG]  [BUGGY]  return  n,  curCfg.getLeadingUnconditionalBranch();  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n,  curCfg.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n,  curCfg.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  ';'  expected	149	None	replace
1135	[BUG]  [BUGGY]  return  parent.getLeadingUnconditionalBranch();  [CE]  cannot  find  symbol  parent  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.getLeadingUnconditionalBranch();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.getLeadingUnconditionalBranch();	  return    n.getLeadingUnconditionalBranch();    	non-compiled	[CE]  cannot  find  symbol  parent	149	None	replace
1136	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	48	None	replace
1137	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  last);  [CE]  cannot  find  symbol  last  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  last);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  last);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  last	48	None	replace
1138	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  n  =  curCfg.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  n  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  n  =  curCfg.getFirstChild();	  return    n.getFirstChild();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	124	None	replace
1139	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  curCfg.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  curCfg.getFirstChild();	  return    n.getFirstChild();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	124	None	replace
1140	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  curCfg.getFirstChild());  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  curCfg.getFirstChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  curCfg.getFirstChild());	  return    n.getFirstChild();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1141	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getType()  ==  Token.BLOCK);  Node  n  =  curCfg.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getType()  ==  Token.BLOCK);  Node  n  =  curCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getType()  ==  Token.BLOCK);  Node  n  =  curCfg.getFirstChild();	  return    n.getFirstChild();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
1142	[BUG]  [BUGGY]  return  curCfg.getFunctionDeclarations().clone();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFunctionDeclarations().clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFunctionDeclarations().clone();	  return    curCfg.clone();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1143	[BUG]  [BUGGY]  return  curCfg.getFunctionDeclaration().clone();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFunctionDeclaration().clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFunctionDeclaration().clone();	  return    curCfg.clone();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1144	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  3;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  3;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getChildCount()  ==  3;	  return    n.getType()    ==    Token.BLOCK    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	140	None	replace
1145	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getFirstChild();	  return    n.getLastChild();    n    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	133	6	replace
1146	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  n  =  n.getFirstChild();	  return    n.getLastChild();    n    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	133	6	replace
1147	[BUG]  [BUGGY]  Context.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  cannot  find  symbol  Context  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Context.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Context.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol  Context	165	None	replace
1148	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild()).toString();  [CE]  no  suitable  method  found  for  newString(int,Node)  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild()).toString();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  n.getFirstChild()).toString();	  return    fallThrough;    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node)	40	None	replace
1149	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  Token.NAME);  [CE]  no  suitable  method  found  for  newString(int,int)  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  Token.NAME);	  return    fallThrough;    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,int)	40	None	replace
1150	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().toString());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  Node.newString(Token.NAME,  n.getFirstChild().toString());	  return    fallThrough;    	compilable	  [FE]  RuntimeException  	40	6	replace
1151	[BUG]  [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().toString());  [FE]  RuntimeException  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  Node.newString(Token.NAME,  n.getFirstChild().toString());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  Node.newString(Token.NAME,  n.getFirstChild().toString());	  return    fallThrough;    	compilable	  [FE]  RuntimeException  	40	6	replace
1152	[BUG]  [BUGGY]  return  n.getValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getValue();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getValue();	  return    curCfgNode;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
1153	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [CE]  not  a  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    Node  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  n.getLastChild();	  	non-compiled	[CE]  not  a  statement	70	None	add
1154	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [CE]  not  a  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  Node  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    Node  return  n.getType()  ==  Token.NAME?  n.getLastChild()  :  n.getLastChild();	  	non-compiled	[CE]  not  a  statement	70	None	add
1155	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
1156	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  n.getLastChild();  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  n.getLastChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	compilable	  [FE]  RuntimeException  	71	6	replace
1157	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getLastChild()  :  n.getFirstChild();  [CE]  cannot  find  symbol  first  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  first.getLastChild()  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  first.getLastChild()  :  n.getFirstChild();	  return    n.getType()    ==    Token.NAME?    n.getLastChild()    :    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	71	None	replace
1158	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getFirstChild().getString()  :  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getFirstChild().getString()  :  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT?  n.getFirstChild().getString()  :  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
1159	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getParent()  :  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getParent()  :  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT?  n.getParent()  :  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
1160	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getFirstChild().getNext()  :  Token.EXPR_RESULT  +  1;  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT?  n.getFirstChild().getNext()  :  Token.EXPR_RESULT  +  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT?  n.getFirstChild().getNext()  :  Token.EXPR_RESULT  +  1;	  return    n.getType()    ==    Token.EXPR_RESULT    +    1;    	non-compiled	[CE]  incompatible  types	127	None	replace
1161	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  null);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1162	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  n.removeFirstChild();  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1163	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getLastChild()  ==  n);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1164	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  n.removeFirstChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  n);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  n);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1165	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()!=  null);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1166	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  n.removeFirstChild();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()!=  null);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1167	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getLastChild()!=  n);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1168	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  n.removeFirstChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  n);  n.removeFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()!=  n);  n.removeFirstChild();	  return    n.getLastChild();    n.removeFirstChild();    	compilable	  [FE]  RuntimeException  	157	6	replace
1169	[BUG]  [BUGGY]  return  n.removeNoOpStatements();  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeNoOpStatements();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.removeNoOpStatements();	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1170	[BUG]  [BUGGY]  return  n.cloneNoOpStatements(removeNoOpStatements);  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneNoOpStatements(removeNoOpStatements);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneNoOpStatements(removeNoOpStatements);	  return    n.cloneNoOpStatements();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1171	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  nextCfgNode.getFirstChild()!=  null;  [CE]  cannot  find  symbol  nextCfgNode  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  nextCfgNode.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  nextCfgNode.getFirstChild()!=  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	151	None	replace
1172	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  null;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getFirstChild()!=    null;    	non-compiled	[CE]  incompatible  types	151	None	replace
1173	[BUG]  [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  output);  [CE]  cannot  find  symbol  output  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  NodeTraversal.traverse(compiler,  n,  output);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  NodeTraversal.traverse(compiler,  n,  output);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  output	99	None	replace
1174	[BUG]  [BUGGY]  return  n.getParent();  nodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent();  nodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();  nodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	99	None	replace
1175	[BUG]  [BUGGY]  n  =  n.cloneTree();  NodeUtil.removeChild(n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.cloneTree();  NodeUtil.removeChild(n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.cloneTree();  NodeUtil.removeChild(n,  nextCfgNode);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	144	None	replace
1176	[BUG]  [BUGGY]  n.removeChild(first);  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeChild(first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.removeChild(first);	  return    n.cloneTree();    NodeUtil.removeChild(n);    	non-compiled	[CE]  cannot  find  symbol  first	144	None	replace
1177	[BUG]  [BUGGY]  return  last.clone();  [CE]  cannot  find  symbol  last  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  last.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  last.clone();	  return    nextCfgNode.clone();    	non-compiled	[CE]  cannot  find  symbol  last	159	None	replace
1178	[BUG]  [BUGGY]  return  root.clone();  [CE]  cannot  find  symbol  root  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  root.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  root.clone();	  return    nextCfgNode.clone();    	non-compiled	[CE]  cannot  find  symbol  root	159	None	replace
1179	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  getCfgNode());  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(n,  getCfgNode());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(n,  getCfgNode());	          NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1180	[BUG]  [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  lastCfgNode.getNext();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFirstChild();  Node  nextCfgNode  =  lastCfgNode.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFirstChild();  Node  nextCfgNode  =  lastCfgNode.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getNext();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1181	[BUG]  [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeUtil.removeChild(n,  nextCfgNode);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	108	None	replace
1182	[BUG]  [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  breakThrough);  [CE]  cannot  find  symbol  breakThrough  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeUtil.removeChild(n,  breakThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeUtil.removeChild(n,  breakThrough);	  return    n.getNext();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  breakThrough	108	None	replace
1183	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  mNode.getOutEdges();  [CE]  cannot  find  symbol  mNode  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  mNode.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  mNode.getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >>    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol  mNode	146	None	replace
1184	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    return  n.getType()  ==  Token.CALL?  n.getParent()  :  null;	  	non-compiled	[CE]  unreachable  statement	5	None	add
1185	[BUG]  [BUGGY]  return  curCfg.getFunctionDeclaration().cloneTree();  [CE]  cannot  find  symbol  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getFunctionDeclaration().cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getFunctionDeclaration().cloneTree();	  return    curCfg.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1186	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
1187	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  null;  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.removeFirstChild()  :  null;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	compilable	  [FE]  RuntimeException  	73	6	replace
1188	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  Collections  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  Collections.EMPTY_LIST;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  Collections.EMPTY_LIST;	  return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	73	None	replace
1189	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);  Node  n  =  n.getParent();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
1190	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  n.getParent();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  n.getParent();	  return    n.getParent();    Node    n    =    n.getParent();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	101	None	replace
1191	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
1192	[BUG]  [BUGGY]  n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
1193	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
1194	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	160	6	replace
1195	[BUG]  [BUGGY]  Context.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Context.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Context.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	160	None	replace
1196	[BUG]  [BUGGY]  return  this.nextCfgNode.cloneTree();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  this.nextCfgNode.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  this.nextCfgNode.cloneTree();	  return    first.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	38	None	replace
1197	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  1  :  n.getFirstChild();  [CE]  incompatible  types  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  1  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  1  :  n.getFirstChild();	  return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    	non-compiled	[CE]  incompatible  types	69	None	replace
1198	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  3;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  3;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getChildCount()  ==  3;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getChildCount()    ==    1;    	non-compiled	[CE]  incompatible  types	150	None	replace
1199	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  this,  outEdges);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  outEdges	27	None	replace
1200	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  breakThrough);  [CE]  cannot  find  symbol  breakThrough  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  breakThrough);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  this,  breakThrough);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  breakThrough	27	None	replace
1201	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,UnreachableCodeElimination,<null>)  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  this,  null);	          NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,UnreachableCodeElimination,<null>)	27	None	replace
1202	[BUG]  [BUGGY]  return  nextCfgNode.getParent();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfgNode.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode.getParent();	  return    nextCfgNode.getNext();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	24	None	replace
1203	[BUG]  [BUGGY]  return  n.removeOneOpStatement();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeOneOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.removeOneOpStatement();	  return    n.removeFirstChild();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1204	[BUG]  [BUGGY]  n  =  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	132	None	replace
1205	[BUG]  [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	132	None	replace
1206	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.hasDirectedGraphNode(n));  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.hasDirectedGraphNode(n));  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.hasDirectedGraphNode(n));	  return    n.getFirstChild();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
1207	[BUG]  [BUGGY]  return  n.getParent().remove();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getParent().remove();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent().remove();	  return    n.remove();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
1208	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.EXPR_RESULT;  [CE]  incomparable  types:  Node  and  int  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incomparable  types:  Node  and  int	94	None	replace
1209	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	94	None	replace
1210	[BUG]  [BUGGY]  return  n.getName()!=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getName()!=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getName()!=  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1211	[BUG]  [BUGGY]  removeNoOpStatements();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  removeNoOpStatements();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	removeNoOpStatements();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1212	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  output);  [CE]  cannot  find  symbol  output  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  output);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  n,  output);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  output	17	None	replace
1213	[BUG]  [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  last);  [CE]  cannot  find  symbol  last  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getNext();  NodeTraversal.traverse(compiler,  n,  last);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();  NodeTraversal.traverse(compiler,  n,  last);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  last	17	None	replace
1214	[BUG]  [BUGGY]  n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  outEdges);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  outEdges	122	None	replace
1215	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  nextCfgNode);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	122	None	replace
1216	[BUG]  [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  first);  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  first);	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  first	122	None	replace
1217	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
1218	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getLastChild();  [FE]  RuntimeException  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
1219	[BUG]  [BUGGY]  n  =  first.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();  [CE]  cannot  find  symbol  first  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.getFirstChild();  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	162	None	replace
1220	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
1221	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getLastChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()!=  null);  Node  nextCfgNode  =  n.getLastChild();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	162	6	replace
1222	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  null;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getParent()  ==  null;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getParent()    ==    null;    	non-compiled	[CE]  ';'  expected	125	None	replace
1223	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  curCfg.getLastChild());  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()  ==  curCfg.getLastChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()  ==  curCfg.getLastChild());	  return    n.getLastChild();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1224	[BUG]  [BUGGY]  Preconditions.checkState(n.getLastChild()!=  curCfg.getLastChild());  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getLastChild()!=  curCfg.getLastChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getLastChild()!=  curCfg.getLastChild());	  return    n.getLastChild();    Node    n    =    curCfg.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1225	[BUG]  [BUGGY]  n  =  first.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [CE]  cannot  find  symbol  first  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.getFirstChild();  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.getFirstChild();  Node  nextCfgNode  =  n.getNext();	  return    n.getFirstChild();    Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  first	81	None	replace
1226	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  n.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()!=  Token.CALL?  n.getParent()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
1227	[BUG]  [BUGGY]  return  n.getType()!=  Token.CALL?  n.getParent()  :  null;  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  n.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.CALL?  n.getParent()  :  null;	  return    n.getType()    ==    Token.CALL?    n.getParent()    :    null;    	compilable	  [FE]  RuntimeException  	6	6	replace
1228	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  first);  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  first);	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  first	9	None	replace
1229	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  null);	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
1230	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);	  return    n.getLastChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	9	6	replace
1231	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.NAME;  [CE]  incomparable  types:  Node  and  int  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incomparable  types:  Node  and  int	95	None	replace
1232	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.NAME;  [CE]  incompatible  types  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.NAME;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.NAME;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.NAME;    	non-compiled	[CE]  incompatible  types	95	None	replace
1233	[BUG]  [BUGGY]  return  parent.getLastChild();  [CE]  cannot  find  symbol  parent  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.getLastChild();	  return    nextCfgNode.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  parent	63	None	replace
1234	[BUG]  [BUGGY]  return  last.getLastChild();  [CE]  cannot  find  symbol  last  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  last.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  last.getLastChild();	  return    nextCfgNode.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  last	63	None	replace
1235	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.CALL;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.CALL;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.CALL;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.CALL;    	non-compiled	[CE]  incompatible  types	98	None	replace
1236	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n.getFirstChild());  [CE]  unreachable  statement  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n.getFirstChild());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n.getFirstChild());	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  unreachable  statement	158	None	replace
1237	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n.cloneTree());  [CE]  unreachable  statement  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n.cloneTree());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n.cloneTree());	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  unreachable  statement	158	None	replace
1238	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n.getParent());  [CE]  unreachable  statement  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n.getParent());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n.getParent());	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  unreachable  statement	158	None	replace
1239	[BUG]  [BUGGY]  return  n.getLastChild();  n.removeChild(n.parent);  [CE]  parent  has  private  access  in  Node  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getLastChild();  n.removeChild(n.parent);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();  n.removeChild(n.parent);	  return    n.getLastChild();    n.removeChild(first);    	non-compiled	[CE]  parent  has  private  access  in  Node	158	None	replace
1240	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  null,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  null,  new  ControlFlowGraph());	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	51	None	replace
1241	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.VAR);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	152	6	replace
1242	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	152	6	replace
1243	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.CALL);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	152	6	replace
1244	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.CALL);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getNext();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	152	6	replace
1245	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  n  =  compiler.getNodeForCodeInsertion(this);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  n  =  compiler.getNodeForCodeInsertion(this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    n  =  compiler.getNodeForCodeInsertion(this);	  	non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	26	None	add
1246	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getParent()  ==  null);  [CE]  cannot  find  symbol  Context  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  Context.checkState(n.getParent()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    Context.checkState(n.getParent()  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  Context	26	None	add
1247	[BUG]  [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  n  =  compiler.getNodeForCodeInsertion(n);  [CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          NodeTraversal.traverse(compiler,  n,  this);  n  =  compiler.getNodeForCodeInsertion(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                NodeTraversal.traverse(compiler,    n,    this);    n  =  compiler.getNodeForCodeInsertion(n);	  	non-compiled	[CE]  method  getNodeForCodeInsertion  in  class  AbstractCompiler  cannot  be  applied  to  given  types;	26	None	add
1248	[BUG]  [BUGGY]  return  nextCfg.getLastChild();  [CE]  cannot  find  symbol  nextCfg  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfg.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfg.getLastChild();	  return    first.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfg	60	None	replace
1249	[BUG]  [BUGGY]  n  =  n.getfirstChild();  [CE]  cannot  find  symbol  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getfirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getfirstChild();	  n    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1250	[BUG]  [BUGGY]  return  nextCfg.getFirstChild();  [CE]  cannot  find  symbol  nextCfg  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  nextCfg.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfg.getFirstChild();	  return    first.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfg	117	None	replace
1251	[BUG]  [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  this,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  this,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeTraversal.traverse(compiler,  n,  this,  outEdges);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  outEdges	44	None	replace
1252	[BUG]  [BUGGY]  TraverseTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  TraverseTraversal  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  TraverseTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	TraverseTraversal.traverse(compiler,  n,  this);	  return    n.cloneTree();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  TraverseTraversal	44	None	replace
1253	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.remove()  :  n.clone();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.remove()  :  n.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.NAME?  n.remove()  :  n.clone();	  return    n.getType()    ==    Token.NAME?    n.clone()    :    n.clone();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1254	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  first);  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  first);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  first);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  first	29	None	replace
1255	[BUG]  [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  this);  [CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,UnreachableCodeElimination)  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  curCfg.getDirectedGraphNode(n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  curCfg.getDirectedGraphNode(n,  this);	          n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,UnreachableCodeElimination)	29	None	replace
1256	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges;  [CE]  >  expected  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges;	  	non-compiled	[CE]  >  expected	66	None	add
1257	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >>  outEdges;  [CE]  '('  or  '['  expected  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >>  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >>  outEdges;	  	non-compiled	[CE]  '('  or  '['  expected	66	None	add
1258	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [CE]  >  expected  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  >  expected	66	None	add
1259	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  outEdges;  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  outEdges;	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
1260	[BUG]  [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  [Delete]  [CE]  ']'  expected  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  [Delete]  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getFirstChild();    n  =  n.getFirstChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  [Delete]	  	non-compiled	[CE]  ']'  expected	66	None	add
1261	[BUG]  [BUGGY]  Node  nextCfgNode  =  last.getNext();  [CE]  cannot  find  symbol  last  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  nextCfgNode  =  last.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  nextCfgNode  =  last.getNext();	          Node    nextCfgNode    =    n.getNext();    	non-compiled	[CE]  cannot  find  symbol  last	32	None	replace
1262	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
1263	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
1264	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
1265	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getNext();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.CALL);  Node  first  =  n.getNext();	  return    n.getNext();    Node    first    =    n.getNext();    	compilable	  [FE]  RuntimeException  	18	6	replace
1266	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges;  [CE]  >  expected  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges;	  	non-compiled	[CE]  >  expected	61	None	add
1267	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  outEdges;  [CE]  cannot  find  symbol  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  outEdges;	  	non-compiled	[CE]  cannot  find  symbol	61	None	add
1268	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >>  outEdges;  [CE]  '('  or  '['  expected  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >>  outEdges;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >>  outEdges;	  	non-compiled	[CE]  '('  or  '['  expected	61	None	add
1269	[BUG]  [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges  [CE]  >  expected  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getLastChild();  n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n    =    n.getLastChild();    n  =  n.getLastChild();  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  return  new  ArrayList  <  DiGraphEdge  <  Node,Branch  >=  outEdges	  	non-compiled	[CE]  >  expected	61	None	add
1270	[BUG]  [BUGGY]  return  n,  curCfg.getGrandparent();  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n,  curCfg.getGrandparent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n,  curCfg.getGrandparent();	  return    n.getGrandparent();    	non-compiled	[CE]  ';'  expected	114	None	replace
1271	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getParent()  ==  null);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getParent()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getParent()  ==  null);	  return    n.getNext();    Node    n    =    curCfg.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1272	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.FUNCTION?  null  :  n.getFirstChild();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	compilable	  [FE]  RuntimeException  	86	6	replace
1273	[BUG]  [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getFirstChild();  [FE]  RuntimeException  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.FUNCTION?  null  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.FUNCTION?  null  :  n.getFirstChild();	  return    n.getType()    ==    Token.FUNCTION?    null    :    n.clone();    	compilable	  [FE]  RuntimeException  	86	6	replace
1274	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getAllEdges();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getAllEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getAllEdges();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1275	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfg().getOutEdges();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfg().getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getCfg().getOutEdges();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    n.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1276	[BUG]  [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()!=  null;	  return    n.getType()    ==    Token.BLOCK    ||    n.getFirstChild()    ==    null;    	non-compiled	[CE]  ';'  expected	141	None	replace
1277	[BUG]  [BUGGY]  Preconditions.checkState(n.getNext()  ==  null);  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getNext()  ==  null);  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getNext()  ==  null);  Node  n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	16	None	replace
1278	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  first.getNext();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  first.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  n  =  first.getNext();	  return    n.getNext();    Node    n    =    first.getNext();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	16	None	replace
1279	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  1);  [CE]  clone()  has  protected  access  in  Object  [FE]                      AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  1);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.clone()  :  Node.newString(Token.NAME,  1);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
1280	[BUG]  [BUGGY]  return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newString(Token.NAME);  [CE]  clone()  has  protected  access  in  Object  [FE]                        AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newString(Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.CALL?  n.clone()  :  Node.newString(Token.NAME);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newString(Token.NAME);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	83	None	replace
1281	[BUG]  [BUGGY]  n  =  first.cloneTree();  [CE]  cannot  find  symbol  first  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  first.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  first.cloneTree();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  first	46	None	replace
1282	[BUG]  [BUGGY]  return  n.cloneStatement();  n  =  n.cloneTree();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneStatement();  n  =  n.cloneTree();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneStatement();  n  =  n.cloneTree();	  return    n.cloneTree();    n    =    n.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1283	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  Token.EXPR_RESULT;  [CE]  incomparable  types:  Node  and  int  [FE]            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  Token.EXPR_RESULT;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild()  ==  Token.EXPR_RESULT;	  return    n.getType()    ==    Token.EXPR_RESULT    ||    n.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  incomparable  types:  Node  and  int	87	None	replace
1284	[BUG]  [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getAllEdges();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getAllEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  curCfg.getAllEdges();	          List    <    DiGraphEdge    <    Node,Branch    >=    outEdges    =    curCfg.getOutEdges();    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1285	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
1286	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getFirstChild();  [FE]  RuntimeException  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getFirstChild();	  return    n.getFirstChild();    Node    first    =    n.getFirstChild();    	compilable	  [FE]  RuntimeException  	74	6	replace
1287	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getLastChild();	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
1288	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  first  =  n.getLastChild();	  return    n.getNext();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	20	6	replace
1289	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getDirectedGrandparentNode(n)  ==  null);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getDirectedGrandparentNode(n)  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getDirectedGrandparentNode(n)  ==  null);	  return    n.getParent();    Node    n    =    curCfg.getDirectedGrandparentNode(n);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1290	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
1291	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  null);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  null);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
1292	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  n);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getFirstChild()  ==  n);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
1293	[BUG]  [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  n);  Node  first  =  n.getLastChild();  [FE]  RuntimeException  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getFirstChild()  ==  n);  Node  first  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getFirstChild()  ==  n);  Node  first  =  n.getLastChild();	  return    n.getFirstChild();    Node    first    =    n.getLastChild();    	compilable	  [FE]  RuntimeException  	78	6	replace
1294	[BUG]  [BUGGY]  n.removeFirstChild();  n.removeLastChild();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n.removeFirstChild();  n.removeLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n.removeFirstChild();  n.removeLastChild();	  return    n.getLastChild();    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1295	[BUG]  [BUGGY]  NodeUtil.removeChild(curCfg,  n,  this);  [CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeUtil.removeChild(curCfg,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeUtil.removeChild(curCfg,  n,  this);	          NodeUtil.removeChild(curCfg,    n);    	non-compiled	[CE]  method  removeChild  in  class  NodeUtil  cannot  be  applied  to  given  types;	33	None	replace
1296	[BUG]  [BUGGY]  Context.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  cannot  find  symbol  Context  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Context.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Context.checkState(n.getFirstChild()  ==  null);  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  cannot  find  symbol  Context	163	None	replace
1297	[BUG]  [BUGGY]  n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  new  ControlFlowGraph());	  return    n.getFirstChild();    NodeTraversal.traverse(compiler,    n,    new    ControlFlowGraph());    	non-compiled	[CE]  constructor  ControlFlowGraph  in  class  ControlFlowGraph<N>  cannot  be  applied  to  given  types;	163	None	replace
1298	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()!=  null;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()!=  null;	  return    n.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	88	None	replace
1299	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  ||  n.getChildCount()  ==  1;	  return    n.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  incompatible  types	88	None	replace
1300	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()  ==  null);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  ||  n.getParent()  ==  null);	  return    n.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  ';'  expected	88	None	replace
1301	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild().clone()  :  Node.newNumber(1);  [CE]  clone()  has  protected  access  in  Object  [FE]                          AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild().clone()  :  Node.newNumber(1);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getFirstChild().clone()  :  Node.newNumber(1);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
1302	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild().clone()  :  Node.newNumber(0);  [CE]  clone()  has  protected  access  in  Object  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild().clone()  :  Node.newNumber(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.getFirstChild().clone()  :  Node.newNumber(0);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	85	None	replace
1303	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.cloneTree()  :  Node.newNumber(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getType()  ==  Token.CALL?  n.cloneTree()  :  Node.newNumber(0);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	compilable	  [FE]  RuntimeException  	85	6	replace
1304	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.cloneTree()  :  Node.newNumber(0);  [FE]  RuntimeException  [FE]                              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  n.cloneTree()  :  Node.newNumber(0);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.CALL?  n.cloneTree()  :  Node.newNumber(0);	  return    n.getType()    ==    Token.CALL?    n.clone()    :    Node.newNumber(0);    	compilable	  [FE]  RuntimeException  	85	6	replace
1305	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
1306	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  nextCfgNode  =  n.getNext();  [FE]  RuntimeException  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  nextCfgNode  =  n.getNext();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getType()  ==  Token.VAR);  Node  nextCfgNode  =  n.getNext();	  return    n.getParent();    Node    nextCfgNode    =    n.getNext();    	compilable	  [FE]  RuntimeException  	55	6	replace
1307	[BUG]  [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [CE]  incompatible  types  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  incompatible  types	123	None	replace
1308	[BUG]  [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);  [CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,Node)  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  n  =  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	n  =  n.getFirstChild();  Node  nextCfgNode  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  getDirectedGraphNode(Node,Node)	123	None	replace
1309	[BUG]  [BUGGY]  Node  curCfgNode  =  n.getDirectedGraphNode(curCfg);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  curCfgNode  =  n.getDirectedGraphNode(curCfg);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  curCfgNode  =  n.getDirectedGraphNode(curCfg);	  return    n.getFirstChild();    Node    nextCfgNode    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1310	[BUG]  [BUGGY]  removeNoOpStatements();  n.setNext(n.getNext());  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  removeNoOpStatements();  n.setNext(n.getNext());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	removeNoOpStatements();  n.setNext(n.getNext());	  return    n.getNext();    n.setNext(n.getNext());    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1311	[BUG]  [BUGGY]  return  n,  outEdges.cloneBlock();  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n,  outEdges.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n,  outEdges.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  ';'  expected	145	None	replace
1312	[BUG]  [BUGGY]  return  this.nextCfgNode.cloneBlock();  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  this.nextCfgNode.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  this.nextCfgNode.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	145	None	replace
1313	[BUG]  [BUGGY]  return  parent.cloneBlock();  [CE]  cannot  find  symbol  parent  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.cloneBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.cloneBlock();	  return    n.cloneBlock();    	non-compiled	[CE]  cannot  find  symbol  parent	145	None	replace
1314	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	68	None	add
1315	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    NodeTraversal.traverse(compiler,  n,  this);	  	non-compiled	[CE]  unreachable  statement	68	None	add
1316	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  n.getFirstChild();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  nextCfgNode  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  nextCfgNode  =  n.getFirstChild();	  	non-compiled	[CE]  unreachable  statement	68	None	add
1317	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  if(n.getType()  ==  Token.CALL)  {  return  n;  }  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  if(n.getType()  ==  Token.CALL)  {  return  n;  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    if(n.getType()  ==  Token.CALL)  {  return  n;  }	  	non-compiled	[CE]  unreachable  statement	68	None	add
1318	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  if(n.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  if(n.getType()  ==  Token.CALL)  {  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    if(n.getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
1319	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]              RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  Node  n  =  n.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getFirstChild();    Node  n  =  n.getFirstChild();	  	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	68	None	add
1320	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.GETPROP;  [CE]  incomparable  types:  Node  and  int  [FE]                                AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getParent()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incomparable  types:  Node  and  int	97	None	replace
1321	[BUG]  [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;  [CE]  incompatible  types  [FE]                                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incompatible  types	97	None	replace
1322	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.GETPROP;  [CE]  incomparable  types:  Node  and  int  [FE]                                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.GETPROP;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK  ||  n.getFirstChild()  ==  Token.GETPROP;	  return    n.getType()    ==    Token.BLOCK    ||    n.getType()    ==    Token.GETPROP;    	non-compiled	[CE]  incomparable  types:  Node  and  int	97	None	replace
1323	[BUG]  [BUGGY]  return  n,  curCfg.getFirst();  [CE]  ';'  expected  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n,  curCfg.getFirst();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n,  curCfg.getFirst();	  return    n.getFirst();    	non-compiled	[CE]  ';'  expected	131	None	replace
1324	[BUG]  [BUGGY]  return  n.getFirst()  ||  nextCfgNode.getFirst()!=  null;  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirst()  ||  nextCfgNode.getFirst()!=  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirst()  ||  nextCfgNode.getFirst()!=  null;	  return    n.getFirst();    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1325	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;	  	non-compiled	[CE]  unreachable  statement	3	None	add
1326	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >>  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
1327	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [CE]  >  expected  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getParent()    :    null;    if(n.getType()  ==  Token.NAME)  {  return  n.getType()  ==  Token.NAME?  n.getParent()  :  null;  }  else  {  List  <  DiGraphEdge  <  Node,Branch  >=  outEdges  =  n.getOutEdges();	  	non-compiled	[CE]  >  expected	3	None	add
1328	[BUG]  [BUGGY]  return  n.cloneSyntheticBlock();  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneSyntheticBlock();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneSyntheticBlock();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1329	[BUG]  [BUGGY]  return  n.cloneSyntheticFunction();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneSyntheticFunction();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneSyntheticFunction();	  return    n.cloneFunction();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1330	[BUG]  [BUGGY]  Context.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Context.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Context.checkState(n.getFirstChild()!=  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getLastChild();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	13	None	replace
1331	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  outEdges);  [CE]  cannot  find  symbol  outEdges  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  outEdges);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(n,  outEdges);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  outEdges	136	None	replace
1332	[BUG]  [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  this.nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  NodeUtil.removeChild(n,  this.nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  NodeUtil.removeChild(n,  this.nextCfgNode);	  return    n.cloneTree();    NodeUtil.removeChild(n,    first);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	136	None	replace
1333	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  RuntimeException  	31	6	add
1334	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  RuntimeException  	31	6	add
1335	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  RuntimeException  	31	6	add
1336	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  RuntimeException  	31	6	add
1337	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.CALL);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.CALL);	  	compilable	  [FE]  RuntimeException  	31	6	add
1338	[BUG]  [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.CALL);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  nextCfgNode  =  n.getNext();  Preconditions.checkState(n.getType()  ==  Token.CALL);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    nextCfgNode    =    n.getNext();    Preconditions.checkState(n.getType()  ==  Token.CALL);	  	compilable	  [FE]  RuntimeException  	31	6	add
1339	[BUG]  [BUGGY]  return  n,  curCfg.getPrevious();  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n,  curCfg.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n,  curCfg.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  ';'  expected	25	None	replace
1340	[BUG]  [BUGGY]  return  parent.getPrevious();  [CE]  cannot  find  symbol  parent  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.getPrevious();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.getPrevious();	  return    n.getPrevious();    	non-compiled	[CE]  cannot  find  symbol  parent	25	None	replace
1341	[BUG]  [BUGGY]  return  curCfg.getNode()  -  1;  [CE]  method  getNode  in  class  LinkedDirectedGraph<N,E>  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getNode()  -  1;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getNode()  -  1;	  return    curCfg.getNode();    	non-compiled	[CE]  method  getNode  in  class  LinkedDirectedGraph<N,E>  cannot  be  applied  to  given  types;	43	None	replace
1342	[BUG]  [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getNext()  ==  null;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()!=  Token.EXPR_RESULT  ||  n.getNext()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()!=  Token.EXPR_RESULT  ||  n.getNext()  ==  null;	  return    n.getType()!=    Token.EXPR_RESULT    ||    n.getParent()    ==    null;    	non-compiled	[CE]  incompatible  types	126	None	replace
1343	[BUG]  [BUGGY]  Node  n  =  first.getFirstChild();  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Node  n  =  first.getFirstChild();  n  =  n.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Node  n  =  first.getFirstChild();  n  =  n.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  tryRemoveUnconditionalBranching(Node)	161	None	replace
1344	[BUG]  [BUGGY]  return  n.getFirstChild();  n  =  nextCfgNode.getLastChild();  [CE]  cannot  find  symbol  nextCfgNode  [FE]            RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getFirstChild();  n  =  nextCfgNode.getLastChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();  n  =  nextCfgNode.getLastChild();	  return    n.getFirstChild();    n    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	161	None	replace
1345	[BUG]  [BUGGY]  return  n.cloneTree();  n  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);  [CE]  cannot  find  symbol  nextCfgNode  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.cloneTree();  n  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();  n  =  curCfg.getDirectedGraphNode(n,  nextCfgNode);	  return    n.cloneTree();    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	137	None	replace
1346	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getParent()!=  null);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getParent()!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getParent()!=  null);	  return    n.getNext();    Node    n    =    curCfg.getParent();    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
1347	[BUG]  [BUGGY]  return  parent.getFirstChild();  [CE]  cannot  find  symbol  parent  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  parent.getFirstChild();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  parent.getFirstChild();	  return    nextCfgNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  parent	116	None	replace
1348	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    return  n.getType()  ==  Token.CALL?  null  :  n.getParent();	  	non-compiled	[CE]  unreachable  statement	1	None	add
1349	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  if(n.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  if(n.getType()  ==  Token.CALL)  {  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    if(n.getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
1350	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  if(n.getType()  ==  Token.CALL)  {  return  n;  }  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getParent();  if(n.getType()  ==  Token.CALL)  {  return  n;  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.CALL?    null    :    n.getParent();    if(n.getType()  ==  Token.CALL)  {  return  n;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
1351	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  RuntimeException  	35	6	add
1352	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	  	compilable	  [FE]  RuntimeException  	35	6	add
1353	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.NAME);	  	compilable	  [FE]  RuntimeException  	35	6	add
1354	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.NAME);	  	compilable	  [FE]  RuntimeException  	35	6	add
1355	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getFirstChild()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getFirstChild()  ==  null);	  	compilable	  [FE]  RuntimeException  	35	6	add
1356	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getFirstChild()  ==  null);  [FE]  RuntimeException  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getFirstChild()  ==  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getFirstChild()  ==  null);	  	compilable	  [FE]  RuntimeException  	35	6	add
1357	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  RuntimeException  	35	6	add
1358	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [FE]  RuntimeException  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.BLOCK);	  	compilable	  [FE]  RuntimeException  	35	6	add
1359	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getFirstChild()!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getFirstChild()!=  null);	  	compilable	  [FE]  RuntimeException  	35	6	add
1360	[BUG]  [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getFirstChild()!=  null);  [FE]  RuntimeException  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]          Node  first  =  n.getFirstChild();  Preconditions.checkState(n.getFirstChild()!=  null);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	                Node    first    =    n.getFirstChild();    Preconditions.checkState(n.getFirstChild()!=  null);	  	compilable	  [FE]  RuntimeException  	35	6	add
1361	[BUG]  [BUGGY]  return  curCfg.getValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  curCfg.getValue();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  curCfg.getValue();	  return    curCfg;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
1362	[BUG]  [BUGGY]  Return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Return  n.getType()!=  Token.BLOCK  ||  n.getParent()  ==  null;	  return    n.getType()!=    Token.BLOCK    ||    n.getParent()    ==    null;    	non-compiled	[CE]  ';'  expected	104	None	replace
1363	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  second);  [CE]  cannot  find  symbol  second  [FE]                    RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  second);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	NodeTraversal.traverse(compiler,  n,  second);	          NodeTraversal.traverse(compiler,    n,    fallThrough);    	non-compiled	[CE]  cannot  find  symbol  second	34	None	replace
1364	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	Preconditions.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	56	6	replace
1365	[BUG]  [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [FE]  RuntimeException  [FE]                RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    this);    	compilable	  [FE]  RuntimeException  	56	6	replace
1366	[BUG]  [BUGGY]  Context.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [CE]  cannot  find  symbol  Context  [FE]                  RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Context.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Context.checkState(n.getParent()  ==  null);  NodeTraversal.traverse(compiler,  n,  this);	  return    n.getParent();    NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  cannot  find  symbol  Context	56	None	replace
1367	[BUG]  [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getParent());  [CE]  no  suitable  method  found  for  checkState(DiGraphNode<Node,Branch>,Node)  [FE]        RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getParent());  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	Preconditions.checkState(curCfg.getDirectedGraphNode(n),  n.getParent());	  return    n.getParent();    Node    n    =    curCfg.getDirectedGraphNode(n);    	non-compiled	[CE]  no  suitable  method  found  for  checkState(DiGraphNode<Node,Branch>,Node)	52	None	replace
1368	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [CE]  unreachable  statement  [FE]    RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;	  	non-compiled	[CE]  unreachable  statement	72	None	add
1369	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n;  }  [CE]  unreachable  statement  [FE]      RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n;  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    if(n.getType()  ==  Token.NAME)  {  return  n;  }	  	non-compiled	[CE]  unreachable  statement	72	None	add
1370	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  null)  {  return  n;  }  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  null)  {  return  n;  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  null)  {  return  n;  }	  	non-compiled	[CE]  unreachable  statement	72	None	add
1371	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null)  {  return  n;  }  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null)  {  return  n;  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null)  {  return  n;  }	  	non-compiled	[CE]  unreachable  statement	72	None	add
1372	[BUG]  [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getFirstChild();  }  [CE]  unreachable  statement  [FE]            RuntimeException    [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.getType()  ==  Token.NAME?  n.getFirstChild()  :  null;  if(n.getType()  ==  Token.NAME)  {  return  n.getFirstChild();  }  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return    n.getType()    ==    Token.NAME?    n.getFirstChild()    :    null;    if(n.getType()  ==  Token.NAME)  {  return  n.getFirstChild();  }	  	non-compiled	[CE]  unreachable  statement	72	None	add
1373	[BUG]  [BUGGY]  return  n.removeNoOpStatement();  [CE]  cannot  find  symbol  [FE]          RuntimeException      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  n.removeNoOpStatement();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.removeNoOpStatement();	  return    n.cloneNoOpStatement();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1374	[BUG]  [BUGGY]  return  this.nextCfgNode.clone();  [CE]  cannot  find  symbol  nextCfgNode  [FE]                    AssertionFailedError      [CONTEXT]              if  (n  ==  null)  {      [BUGGY]  return  this.nextCfgNode.clone();  [BUGGY]      }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  this.nextCfgNode.clone();	  return    first.clone();    	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	119	None	replace
