bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getFirstChild();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getFirstChild();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
2	[BUG]  [BUGGY]  return  n.getFirstChild();  [FE]  RuntimeException  [FE]    AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getFirstChild();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getFirstChild();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
3	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getParent();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getParent();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
4	[BUG]  [BUGGY]  return  n.getParent();  [FE]  RuntimeException  [FE]      AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getParent();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getParent();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
5	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getLastChild();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getLastChild();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
6	[BUG]  [BUGGY]  return  n.getLastChild();  [FE]  RuntimeException  [FE]        AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getLastChild();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getLastChild();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
7	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getNext();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.getNext();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
8	[BUG]  [BUGGY]  return  n.getNext();  [FE]  RuntimeException  [FE]          AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getNext();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getNext();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
9	[BUG]  [BUGGY]  return  n.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]            AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.clone();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.clone();	return  n;  	non-compiled	[CE]  clone()  has  protected  access  in  Object	1	None	replace
10	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.cloneTree();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	return  n.cloneTree();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
11	[BUG]  [BUGGY]  return  n.cloneTree();  [FE]  RuntimeException  [FE]              AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.cloneTree();  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.cloneTree();	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
12	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK;  [CE]  incompatible  types  [FE]                AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getType()  ==  Token.BLOCK;  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.BLOCK;	return  n;  	non-compiled	[CE]  incompatible  types	1	None	replace
13	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                  AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]    [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	add	  	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
14	[BUG]  [BUGGY]    [FE]  RuntimeException  [FE]                  AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]    [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	  	return  n;  	compilable	  [FE]  RuntimeException  	1	6	replace
15	[BUG]  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT;  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  n.getType()  ==  Token.EXPR_RESULT;	return  n;  	non-compiled	[CE]  incompatible  types	1	None	replace
16	[BUG]  [BUGGY]  return  nextCfgNode;  [CE]  cannot  find  symbol  nextCfgNode  [FE]      AssertionFailedError  [CONTEXT]          if  (n  ==  null)  {  [BUGGY]  return  nextCfgNode;  [BUGGY]  }  DiGraphNode<Node,  Branch>  gNode  =  curCfg.getDirectedGraphNode(n);  if  (gNode  ==  null)  {  return  n;  }  if  (n.getParent()  ==  null)  {  List<DiGraphEdge<Node,Branch>>  outEdges  =  gNode.getOutEdges();  [CLASS]  UnreachableCodeElimination  [METHOD]  tryRemoveUnconditionalBranching  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  AbstractCompiler  compiler  DiGraphNode  gNode  boolean  removeNoOpStatements  ControlFlowGraph  curCfg  Node  fallThrough  first  n  nextCfgNode  List  outEdges  Logger  logger  Deque  cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.5773502691896258	144	144	2	replace	return  nextCfgNode;	return  n;  	non-compiled	[CE]  cannot  find  symbol  nextCfgNode	1	None	replace
