bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
9	[BUG] [BUGGY] if (outEdges.size() == 1 && // If there is a next node, there is no chance this jump is useless.  (n.getNext() == null || n.getNext().getType() == Token.FUNCTION)) { [FE] AssertionFailedError [CONTEXT] if (n.hasChildren()) { break; } case Token.BREAK: case Token.CONTINUE:    List<DiGraphEdge<Node,Branch>> outEdges = gNode.getOutEdges(); [BUGGY] if (outEdges.size() == 1 &&   // If there is a next node, there is no chance this jump is useless.      (n.getNext() == null || n.getNext().getType() == Token.FUNCTION)) { [BUGGY]  (n.getNext() == null || n.getNext().getType() == Token.FUNCTION)) { Preconditions.checkState(outEdges.get(0).getValue() == Branch.UNCOND); Node fallThrough = tryRemoveUnconditionalBranching(computeFollowing(n)); Node nextCfgNode = outEdges.get(0).getDestination().getValue(); if (nextCfgNode == fallThrough) { removeDeadExprStatementSafely(n); return fallThrough; } [CLASS] UnreachableCodeElimination [METHOD] tryRemoveUnconditionalBranching [RETURN_TYPE] Node  Node n [VARIABLES] AbstractCompiler compiler DiGraphNode gNode boolean removeNoOpStatements ControlFlowGraph curCfg Node fallThrough first n nextCfgNode List outEdges Logger logger Deque cfgStack  	projects/Closure85/src/com/google/javascript/jscomp/UnreachableCodeElimination.java	0.4472135954999579	178	180	2	replace	
