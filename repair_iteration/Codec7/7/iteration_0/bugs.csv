bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
13	[BUG] [BUGGY] this.encodeSize = 4 + lineSeparator.length; [FE] ComparisonFailure [CONTEXT] public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) { if (lineSeparator == null) { lineLength = 0;// disable chunk-separating lineSeparator = CHUNK_SEPARATOR;// this just gets ignored } this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0; this.lineSeparator = new byte[lineSeparator.length]; System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length); if (lineLength > 0) { [BUGGY] this.encodeSize = 4 + lineSeparator.length; [BUGGY] } else { this.encodeSize = 4; } this.decodeSize = this.encodeSize - 1; if (containsBase64Byte(lineSeparator)) { String sep = StringUtils.newStringUtf8(lineSeparator); throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]"); } this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE; } [CLASS] Base64 [METHOD] <init> [RETURN_TYPE] Base64(int,byte[],boolean)  int lineLength byte[] lineSeparator boolean urlSafe [VARIABLES] byte[] CHUNK_SEPARATOR DECODE_TABLE STANDARD_ENCODE_TABLE URL_SAFE_ENCODE_TABLE buffer encodeTable lineSeparator boolean eof urlSafe String sep byte PAD int DEFAULT_BUFFER_RESIZE_FACTOR DEFAULT_BUFFER_SIZE MASK_6BITS MASK_8BITS MIME_CHUNK_SIZE PEM_CHUNK_SIZE currentLinePos decodeSize encodeSize lineLength modulus pos readPos x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.42640143271122083	341	341	2	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure [CONTEXT] public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) { if (lineSeparator == null) { lineLength = 0;// disable chunk-separating lineSeparator = CHUNK_SEPARATOR;// this just gets ignored } this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0; this.lineSeparator = new byte[lineSeparator.length]; System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length); if (lineLength > 0) { [BUGGY] [BUGGY] this.encodeSize = 4 + lineSeparator.length; } else { this.encodeSize = 4; } this.decodeSize = this.encodeSize - 1; if (containsBase64Byte(lineSeparator)) { String sep = StringUtils.newStringUtf8(lineSeparator); throw new IllegalArgumentException("lineSeperator must not contain base64 characters: [" + sep + "]"); } this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE; } [CLASS] Base64 [METHOD] <init> [RETURN_TYPE] Base64(int,byte[],boolean)  int lineLength byte[] lineSeparator boolean urlSafe [VARIABLES] byte[] CHUNK_SEPARATOR DECODE_TABLE STANDARD_ENCODE_TABLE URL_SAFE_ENCODE_TABLE buffer encodeTable lineSeparator boolean eof urlSafe String sep byte PAD int DEFAULT_BUFFER_RESIZE_FACTOR DEFAULT_BUFFER_SIZE MASK_6BITS MASK_8BITS MIME_CHUNK_SIZE PEM_CHUNK_SIZE currentLinePos decodeSize encodeSize lineLength modulus pos readPos x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.42640143271122083	341	341	2	add	
