bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  0));  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  0));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  0));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
2	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray)+  1);  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray)+  1);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray)+  1);	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
3	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  null));  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  null));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  null));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray),  0);  [CE]  ';'  expected  [FE]          ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray),  0);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray),  0);	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
5	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  0,  0));  [CE]  ';'  expected  [FE]            ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  0,  0));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  0,  0));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
6	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  32));  [CE]  ';'  expected  [FE]              ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  32));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  32));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
7	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  2));  [CE]  ';'  expected  [FE]                ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  2));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  2));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
8	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  0,  pArray.length));  [CE]  ';'  expected  [FE]                  ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  0,  pArray.length));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  0,  pArray.length));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
9	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	  	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
10	[BUG]  [BUGGY]    StringUtils.newStringUtf8(encode(pArray));  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    StringUtils.newStringUtf8(encode(pArray));  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    StringUtils.newStringUtf8(encode(pArray));		non-compiled	[CE]  ';'  expected	4	None	add
11	[BUG]  [BUGGY]    if(pArray  ==  null)  {  if(pArray.length  >  0)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  if(pArray.length  >  0)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  if(pArray.length  >  0)  {  return  StringUtils.newStringUtf8(encode(pArray));  }		non-compiled	[CE]  ';'  expected	4	None	add
12	[BUG]  [BUGGY]    if(pArray!=  null)  {  if(pArray.length  >  0)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  if(pArray.length  >  0)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  if(pArray.length  >  0)  {  return  StringUtils.newStringUtf8(encode(pArray));  }		non-compiled	[CE]  ';'  expected	4	None	add
13	[BUG]  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char  c  =  pArray[i];  }  [CE]  ';'  expected  [FE]          ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char  c  =  pArray[i];  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char  c  =  pArray[i];  }		non-compiled	[CE]  ';'  expected	4	None	add
14	[BUG]  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char  c  =  pArray[i];  }  [CE]  ';'  expected  [FE]            ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char  c  =  pArray[i];  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char  c  =  pArray[i];  }		non-compiled	[CE]  ';'  expected	4	None	add
15	[BUG]  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  }  [CE]  ';'  expected  [FE]              ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  }		non-compiled	[CE]  ';'  expected	4	None	add
16	[BUG]  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[len  +  1];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]                ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[len  +  1];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[len  +  1];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
17	[BUG]  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  }  [CE]  ';'  expected  [FE]                  ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  }		non-compiled	[CE]  ';'  expected	4	None	add
18	[BUG]  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  System.arraycopy(p,  0,  c,  0,  c);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  System.arraycopy(p,  0,  c,  0,  c);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  for(int  i  =  0;  i  <  pArray.length;  i++)  {  char  c  =  pArray[i];  System.arraycopy(p,  0,  c,  0,  c);  }		non-compiled	[CE]  ';'  expected	4	None	add
19	[BUG]  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[len  +  1];  System.arraycopy(p,  0,  p,  0,  pArray,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]                      ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[len  +  1];  System.arraycopy(p,  0,  p,  0,  pArray,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[len  +  1];  System.arraycopy(p,  0,  p,  0,  pArray,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
20	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray),  base64);  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray),  base64);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray),  base64);	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
21	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  base64));  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  base64));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  base64));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
22	[BUG]  [BUGGY]  return  StringUtils.newStringUtf9(encode(pArray));  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf9(encode(pArray));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf9(encode(pArray));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
23	[BUG]  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);		non-compiled	[CE]  ';'  expected	4	None	add
24	[BUG]  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
25	[BUG]  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
26	[BUG]  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]          ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
27	[BUG]  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]            ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
28	[BUG]  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [CE]  ';'  expected  [FE]              ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }		non-compiled	[CE]  ';'  expected	4	None	add
29	[BUG]  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [CE]  ';'  expected  [FE]                ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }		non-compiled	[CE]  ';'  expected	4	None	add
30	[BUG]  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  }  [CE]  ';'  expected  [FE]                  ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
31	[BUG]  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  }  [CE]  ';'  expected  [FE]                    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  return  StringUtils.newStringUtf8(encode(pArray));  }  else  {  System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
32	[BUG]  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
33	[BUG]  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0;  i  <  pArray.length;  ++i)  {  return  StringUtils.newStringUtf8(encode(pArray[i]));  }  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0;  i  <  pArray.length;  ++i)  {  return  StringUtils.newStringUtf8(encode(pArray[i]));  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  for(int  i  =  0;  i  <  pArray.length;  ++i)  {  return  StringUtils.newStringUtf8(encode(pArray[i]));  }		non-compiled	[CE]  ';'  expected	4	None	add
34	[BUG]  [BUGGY]    byte[]  pArray  =  System.getProperty( "line.separator ");  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    byte[]  pArray  =  System.getProperty( "line.separator ");  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    byte[]  pArray  =  System.getProperty( "line.separator ");		non-compiled	[CE]  ';'  expected	4	None	add
35	[BUG]  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  return  StringUtils.newStringUtf8(encode(pArray));  }  [CE]  ';'  expected  [FE]          ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  return  StringUtils.newStringUtf8(encode(pArray));  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  return  StringUtils.newStringUtf8(encode(pArray));  }		non-compiled	[CE]  ';'  expected	4	None	add
36	[BUG]  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[lenientPos];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]            ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[lenientPos];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[lenientPos];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
37	[BUG]  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[lenientPos];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }  [CE]  ';'  expected  [FE]              ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[lenientPos];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray  ==  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  char[]  p  =  new  char[lenientPos];  System.arraycopy(p,  0,  p,  0,  pArray.length);  }		non-compiled	[CE]  ';'  expected	4	None	add
38	[BUG]  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  outPos  +=  pArray.length;  }  [CE]  ';'  expected  [FE]                ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  outPos  +=  pArray.length;  }  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray));  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	    if(pArray!=  null)  {  for(int  i  =  0,  len  =  pArray.length;  i  <  len;  ++i)  {  System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  outPos  +=  pArray.length;  }		non-compiled	[CE]  ';'  expected	4	None	add
39	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray)+  1,  pArray.length);  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray)+  1,  pArray.length);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray)+  1,  pArray.length);	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
40	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  pArray.length));  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray,  pArray.length));  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray,  pArray.length));	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
41	[BUG]  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray),  pArray.length);  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  String  encodeToString(byte[]  pArray)  {  [BUGGY]  return  StringUtils.newStringUtf8(encode(pArray),  pArray.length);  [BUGGY]  }  [CLASS]  Base64  [METHOD]  encodeToString  [RETURN_TYPE]  String  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  	projects/Codec7/src/java/org/apache/commons/codec/binary/Base64.java	0.7071067811865475	934	934	2	replace	return  StringUtils.newStringUtf8(encode(pArray),  pArray.length);	return  StringUtils.newStringUtf8(encode(pArray));  	non-compiled	[CE]  ';'  expected	3	None	replace
