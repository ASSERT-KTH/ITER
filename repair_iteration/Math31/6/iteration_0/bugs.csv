bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
11	[BUG] [BUGGY] q1 = q2; [FE] AssertionError [CONTEXT] } if (FastMath.abs(deltaN - 1.0) < epsilon) { break; } dPrev = q1; cPrev = cN / q2; p0 = hPrev; hPrev = cN; [BUGGY] q1 = q2; [BUGGY] n++; } if (n >= maxIterations) { throw new MaxCountExceededException(LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION, maxIterations, x); } return hN; } [CLASS] ContinuedFraction [METHOD] evaluate [RETURN_TYPE] double  double x double epsilon int maxIterations [VARIABLES] double DEFAULT_EPSILON a b cN cPrev dPrev deltaN epsilon hN hPrev lastScaleFactor p0 q1 q2 scale scaleFactor small x int i maxIterations maxPower n boolean  	projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java	0.4082482904638631	189	189	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } if (FastMath.abs(deltaN - 1.0) < epsilon) { break; } dPrev = q1; cPrev = cN / q2; p0 = hPrev; hPrev = cN; [BUGGY] [BUGGY] q1 = q2; n++; } if (n >= maxIterations) { throw new MaxCountExceededException(LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION, maxIterations, x); } return hN; } [CLASS] ContinuedFraction [METHOD] evaluate [RETURN_TYPE] double  double x double epsilon int maxIterations [VARIABLES] double DEFAULT_EPSILON a b cN cPrev dPrev deltaN epsilon hN hPrev lastScaleFactor p0 q1 q2 scale scaleFactor small x int i maxIterations maxPower n boolean  	projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java	0.4082482904638631	189	189	2	add	
