projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,cN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(dPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n++;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(dPrev,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(dPrev,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.abs(dPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p1/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(dPrev/dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=dPrev/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,hN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(cPrev,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(p0,dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(dPrev,cN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(cPrev,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(cN,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(cPrev,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(cN,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(cPrev,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(cN,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;p0=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;intp0=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;P0=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;p0=p0;}
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=cN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=p0/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=cN/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=q1/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=q1/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p1/dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p1/cN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(cPrev/dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(dPrev*dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(cN/dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(dPrev/cN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=p0.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=cN.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=dPrev.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=1;n=1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=1;intn=1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=1;n=2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=1;doublen=1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(cN,dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(cN,dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,cN+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=dPrev.abs(dPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=cN.abs(dPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=p0.abs(dPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=dPrev/q2;dPrev=dPrev/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=dPrev/q2;dPrev=dPrev/q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=dPrev/q2;dPrev=dPrev/q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=dPrev/q2;dPrev=dPrev/q2,;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(cPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(cN-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(dPrev-cN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(x,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(dPrev,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,q1,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=hPrev/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.abs(dPrev-p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.abs(cN-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.abs(dPrev/dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.abs(p0-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=1;intn=2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=3;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,q1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(x,hN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(x,epsilon+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=q2/dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;(p0=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(dPrev,q1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(dPrev,hN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=this.scaleFactor.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,cN*epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(cN,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;p1=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;p0=p1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(x,epsilon,maxPower);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=cN/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=dPrev/q2;dPrev=dPrev/q2+1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=dPrev;
