projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,cN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(dPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n++;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(dPrev,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.min(dPrev,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.evaluate(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.max(dPrev,q2);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=scaleFactor.abs(dPrev-dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190p0=p1/q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190n=Math.abs(dPrev/dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java190dPrev=dPrev/q2;
