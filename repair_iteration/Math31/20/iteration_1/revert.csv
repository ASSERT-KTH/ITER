projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublen=small.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139intx=getX(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=hN*cPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon.maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxPower){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=hN*q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*q0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+c*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&small.equals(cN)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=dPrev*hN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=cN*hN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=cN*hPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){while(n<0){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublea=getA(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublex=getA(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublen=getA(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublex=getA(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139intx=getX(n,cN);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139intx=getX(n,cPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublex=getX(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139intx=getX(n,p0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=small;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=size;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+c*hN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*cN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*hN+b*q0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<=0){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n>0){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=cN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=n*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){while(n<epsilon){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){finaldoublea=getA(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){finaldoublex=getA(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){intn=getA(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){finaldoublea=getA(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=dPrev*q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=n*q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=cN*q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&cN.equals(small)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&scale.equals(cN)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&epsilon.equals(cN)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<=epsilon){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*hN+b*q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*cN+b*q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<cN){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<dPrev){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon.maxPower){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublen=small.doubleValue()+1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublen=scaleFactor.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublen=scale.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+cN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+hN*cPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+cPrev*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<small.maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<size.maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<scale.maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*cPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*hN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=dPrev*hN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=p0*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN*p0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN*q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<hN){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<q1){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&epsilon.equals(small)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&scale.equals(small)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&dPrev.equals(small)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n>=0){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=a*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=q1*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*cPrev+hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=p0*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){finaldoublea=getB(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=d0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublea=getA(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublea=getB(n,x);finaldoubleb=getB(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*cN+b*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*hN+b*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*cPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139intx=getX(n,q1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon&&small<=0){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN*DEFAULT_EPSILON;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=DEFAULT_EPSILON;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN+1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublen=this.small.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublea=getA(n,x);finaldoubleb=getB(n,y);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){finaldoublea=getA(n,x);finaldoubleb=getC(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*cN+hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&dPrev.equals(cN)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&cN.equals(hN)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){if(n<epsilon){finaldoublea=getA(n,x);finaldoubleb=getB(n,x);doublecN=a*hPrev+b*dPrev;if(Double.isInfinite(cN)||Double.isInfinite(
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){if(n<epsilon){finaldoublea=getA(n,x);finaldoubleb=getB(n,x);doublecN=a*hPrev+b*dPrev;if(Double.isInfinite(cN)||Double.isInfinite(cN)
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){if(n<epsilon){finaldoublea=getA(n,x);finaldoubleb=getB(n,x);doublecN=a*hPrev+b*dPrev;if(Double.isInfinite(cN)||Double.isInfinite
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<=epsilon.maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<1){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139intx=getX(n,dPrev);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN*dPrev+1;
