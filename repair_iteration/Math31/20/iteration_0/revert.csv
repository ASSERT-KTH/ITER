projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublen=small.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139intx=getX(n,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=hN*cPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<0){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon.maxIterations){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<epsilon){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxPower){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=hN*q1;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*q2;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*q0;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+b*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doublecN=hN*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139doubleq2=a*q1+c*dPrev;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java139while(n<maxIterations&&small.equals(cN)){
