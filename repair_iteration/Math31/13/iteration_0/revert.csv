projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128doubledPrev=getScaleFactor(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128doubledPrev=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128doubledPrev=getDistance(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128doubledPrev=getScaleFactor(x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128intn=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(Precision.equals(hPrev,0.0,small)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(!Precision.equals(small,0.0,hPrev)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(DECIMAL.equals(small,0.0,hPrev)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(cPrev.equals(small,0.0,hPrev)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(dPrev.equals(small,0.0,hPrev)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128intsmall=epsilon+maxIterations;
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128intsmall=epsilon.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128intsmall=epsilon+getScaleFactor(x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128intn=getScaleFactor(x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128intsmall=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(small.equals(hPrev,0.0,prev)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(small.equals(hPrev,0.0,epsilon)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(DECIMAL.equals(x,epsilon,maxIterations)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128if(x.equals(hPrev,0.0,small)){
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128doubledPrev=getD(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128doubleb=getB(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128inti=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java128doubledPrev=getD(x,epsilon);
