projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doubledPrev=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getW(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getX(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor().evaluate(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublecN=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor().evaluate(x,small,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor().evaluate(small,x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doubledPrev=getA(0,x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doubledPrev=getA(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doubledPrev=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);doublehPrev=getA(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);DoublehPrev=getA(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);doublehPrev=getA(0,x+1));
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);hPrev=getA(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,small);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(1,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0.0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(x,epsilon+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,n+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublecN=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublecN=getA(0,x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublecN=getA(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getW(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getW(small,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doubleepsilon=getW(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getW(short,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,n);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,y);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=epsilon.doubleValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=epsilon.intValue();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=epsilon.getMaximumScale();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=size();
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(small,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(x,small);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(x,scaleFactor);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getB(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(0,x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(0,x,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(x,epsilon,maxIterations,scaleFactor);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(x,epsilon,maxIterations,DEFAULT_EPSILON);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(x,epsilon,maxIterations,small);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(0,x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);doublehPrev=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);DoublehPrev=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);intepsilon=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);hPrev=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(0);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA0(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(small,x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125DoublehPrev=getA(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(x,small,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor(small,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor(small,x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor(short,x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getX(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getX(0,x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getX(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getY(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getW(x,epsilon+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125DoublehPrev=getW(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(1,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(x,epsilon,maxIterations,size);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor().evaluate(x,scaleFactor,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getX(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);doublehPrev=getB(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);doublex=getA(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublecPrev=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=scaleFactor.evaluate(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=scaleFactor.calculate(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=scaleFactor.equals(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=scaleFactor.equals(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor(short,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);doubleepsilon=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);doublehPrev=getB(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125DoublehPrev=getScaleFactor(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125Doublen=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125floatn=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(a,x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getX(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(0,x),epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=scaleFactor.calculateScale(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,x),epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doubledPrev=getA(0,x+1);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);intn=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(0,x+1,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=calculateW(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublecN=getA(1,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(x,epsilon+maxIterations);
