projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getScaleFactor(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublen=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doubledPrev=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublex=getA(0,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getW(x,epsilon);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getX(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor().evaluate(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getScaleFactor(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125intn=getA(x,epsilon,maxIterations);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublecN=getA(0,x);
projects/Math31/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java125doublehPrev=getA(0,x+1);
