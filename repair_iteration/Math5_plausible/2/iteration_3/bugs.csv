bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  real  =  super.toString();  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  super.toString();  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  super.toString();	          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(       "       ");    }    if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  missing  return  statement	4	None	replace
2	[BUG]  [BUGGY]  String  real  =  getDivisor(),  imaginary.toString();  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDivisor(),  imaginary.toString();  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDivisor(),  imaginary.toString();	  String    real    =    getINF(),    imaginary.toString();    	non-compiled	[CE]  ';'  expected	13	None	replace
3	[BUG]  [BUGGY]  String  real  =  getDenominator().toString()  + "n ";  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDenominator().toString()  + "n ";  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDenominator().toString()  + "n ";	  String    real    =    getDenominator().toString();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
4	[BUG]  [BUGGY]  String  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }	  if(isInfinite    ||    isNaN)    {    double    real    =    real.doubleValue();    if(imaginary!=    null)    {    return    valueOf(real);    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ". ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	add	                if(isNaN        ||        isInfinite)        {        throw        new        IllegalArgumentException(       "       ");        }        if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ". ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
6	[BUG]  [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ". ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ". ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	                if(isNaN        ||        isInfinite)        {        throw        new        IllegalArgumentException(       "       ");        }        if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ". ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
7	[BUG]  [BUGGY]  String  realPart  =  getDenominator().toString(divisor);  [CE]  cannot  find  symbol  divisor  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator().toString(divisor);  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator().toString(divisor);	  String    realPart    =    getDenominator().toString(imaginary);    	non-compiled	[CE]  cannot  find  symbol  divisor	15	None	replace
8	[BUG]  [BUGGY]  String  realPart  =  getDenominator().toString(realPart);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator().toString(realPart);  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator().toString(realPart);	  String    realPart    =    getDenominator().toString(imaginary);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
9	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(    NaN  [FE]    java.lang.AssertionError:  expected:<(  NaN    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    return     "(     "    +    real    +         ",     "    +    imaginary    +         ")     ";    }    if(isNaN  ||  isInfinite)  {  return     "(     "  +  real  +     ",     "  +  imaginary  +     ")   ";  }  if(isNaN  ||  isInfinite)  {  return   "(   "  +  real  + ",   "  +  imaginary  +   ") ";  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	add	                if(isNaN        ||        isInfinite)        {        return       "(       "        +        real        +               ",       "        +        imaginary        +               ")       ";        }        if(isNaN    ||    isInfinite)    {    return       "(       "    +    real    +       ",       "    +    imaginary    +       ")   ";    }    if(isNaN  ||  isInfinite)  {  return   "(   "  +  real  + ",   "  +  imaginary  +   ") ";  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(      NaN  	1	1	add
10	[BUG]  [BUGGY]          if(isNaN    ||    isInfinite)    {    return     "(     "    +    real    +         ",     "    +    imaginary    +         ")     ";    }    if(isNaN  ||  isInfinite)  {  return     "(     "  +  real  +     ",     "  +  imaginary  +     ")   ";  }  if(isNaN  ||  isInfinite)  {  return   "(   "  +  real  + ",   "  +  imaginary  +   ") ";  }  [FE]  java.lang.AssertionError:  expected:<(    NaN  [FE]    java.lang.AssertionError:  expected:<(  NaN    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    return     "(     "    +    real    +         ",     "    +    imaginary    +         ")     ";    }    if(isNaN  ||  isInfinite)  {  return     "(     "  +  real  +     ",     "  +  imaginary  +     ")   ";  }  if(isNaN  ||  isInfinite)  {  return   "(   "  +  real  + ",   "  +  imaginary  +   ") ";  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	                if(isNaN        ||        isInfinite)        {        return       "(       "        +        real        +               ",       "        +        imaginary        +               ")       ";        }        if(isNaN    ||    isInfinite)    {    return       "(       "    +    real    +       ",       "    +    imaginary    +       ")   ";    }    if(isNaN  ||  isInfinite)  {  return   "(   "  +  real  + ",   "  +  imaginary  +   ") ";  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(      NaN  	1	1	add
11	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   "     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	add	                if(isNaN        ||        isInfinite)        {        throw        new        IllegalArgumentException(       "       ");        }        if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "       ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
12	[BUG]  [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   "     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   "     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	                if(isNaN        ||        isInfinite)        {        throw        new        IllegalArgumentException(       "       ");        }        if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "       ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
13	[BUG]  [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   "     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  Il  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   "     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  Il  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	                if(isNaN        ||        isInfinite)        {        throw        new        IllegalArgumentException(       "       ");        }        if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   "       ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  Il	  	non-compiled	[CE]  	3	None	add
14	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  isDenominator)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  isDenominator  [FE]        IllegalArgumentException      [CONTEXT]      public  String  toString()  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  isDenominator)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	if(isInfinite  ||  isNaN  ||  isDenominator)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  isDenominator	10	None	replace
15	[BUG]  [BUGGY]  String  realPart  =  getDenominator(),  imaginaryPart.toString()  + "n ";  [CE]  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator(),  imaginaryPart.toString()  + "n ";  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator(),  imaginaryPart.toString()  + "n ";	  String    realPart    =    getDenominator(),    imaginaryPart.toString();    	non-compiled	[CE]  	12	None	replace
16	[BUG]  [BUGGY]  String  realPart  =  getDenominator().toString()  + ",  imaginary  part ";  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator().toString()  + ",  imaginary  part ";  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator().toString()  + ",  imaginary  part ";	  String    realPart    =    getDenominator().toString()    +   "n   ";    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
17	[BUG]  [BUGGY]  String  realPart  =  getDenominator().toString()  + "  imaginary  part ";  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator().toString()  + "  imaginary  part ";  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator().toString()  + "  imaginary  part ";	  String    realPart    =    getDenominator().toString()    +   "n   ";    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
18	[BUG]  [BUGGY]  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      public  String  toString()  {      [BUGGY]  ||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	||  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isInfinite)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  String  real  =  getDivisor().toString()  + "n ";  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDivisor().toString()  + "n ";  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDivisor().toString()  + "n ";	  String    real    =    getDivisor().toString();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
20	[BUG]  [BUGGY]  Real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [CE]  cannot  find  symbol  Real  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  Real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	Real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }	  if(isNaN    ||    isInfinite)    {    real    =    real.doubleValue();    if(imaginary!=    null)    {    return    valueOf(real);    }    	non-compiled	[CE]  cannot  find  symbol  Real	14	None	replace
21	[BUG]  [BUGGY]  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [CE]  cannot  assign  a  value  to  final  variable  real  [FE]                  java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }	  if(isNaN    ||    isInfinite)    {    real    =    real.doubleValue();    if(imaginary!=    null)    {    return    valueOf(real);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  real	14	None	replace
22	[BUG]  [BUGGY]  Class  <?>  real  =  getReal();  [CE]  incompatible  types  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]  Class  <?>  real  =  getReal();  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	Class  <?>  real  =  getReal();	          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(       "       ");    }    if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  incompatible  types	19	None	replace
23	[BUG]  [BUGGY]  String  real  =  getDivisor(),  imaginaryPart.toString();  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDivisor(),  imaginaryPart.toString();  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDivisor(),  imaginaryPart.toString();	  String    real    =    getINF(),    imaginaryPart.toString();    	non-compiled	[CE]  ';'  expected	17	None	replace
24	[BUG]  [BUGGY]  String  realPart  =  getDenominator().toString(imaginary,  factor);  [CE]  cannot  find  symbol  factor  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator().toString(imaginary,  factor);  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator().toString(imaginary,  factor);	  String    realPart    =    getDenominator().toString(imaginary);    	non-compiled	[CE]  cannot  find  symbol  factor	15	None	replace
25	[BUG]  [BUGGY]  if(isNaN)  {  return "( "  +  real  + ", "  +  imaginary  +   ") ";  }  [CE]  missing  return  statement  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  if(isNaN)  {  return "( "  +  real  + ", "  +  imaginary  +   ") ";  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	if(isNaN)  {  return "( "  +  real  + ", "  +  imaginary  +   ") ";  }	  if(isInfinite)    {    return   "(   "    +    real    +   ",   "    +    imaginary    +       ")   ";    }    	non-compiled	[CE]  missing  return  statement	7	None	replace
26	[BUG]  [BUGGY]  if(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]  if(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	if(isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(       "       ");    }    if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  missing  return  statement	19	None	replace
27	[BUG]  [BUGGY]  if(isInfinite  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]      IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]  if(isInfinite  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	if(isInfinite  ||  isInfinite)  {  throw  new  IllegalArgumentException( " ");  }	          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(       "       ");    }    if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  missing  return  statement	19	None	replace
28	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]        IllegalArgumentException      [CONTEXT]      public  String  toString()  {      [BUGGY]  if(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	if(isInfinite  &&  isNaN)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  missing  return  statement	10	None	replace
29	[BUG]  [BUGGY]  if(isInfinite  &&  isNaN)  {  double  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [CE]  reached  end  of  file  while  parsing  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  if(isInfinite  &&  isNaN)  {  double  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	if(isInfinite  &&  isNaN)  {  double  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }	  if(isInfinite    ||    isNaN)    {    double    real    =    real.doubleValue();    if(imaginary!=    null)    {    return    valueOf(real);    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
30	[BUG]  [BUGGY]  double  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [CE]  double  cannot  be  dereferenced  [FE]                  java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  double  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	double  real  =  real.doubleValue();  if(imaginary!=  null)  {  return  valueOf(real);  }	  if(isInfinite    ||    isNaN)    {    double    real    =    real.doubleValue();    if(imaginary!=    null)    {    return    valueOf(real);    }    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
31	[BUG]  [BUGGY]  String  real  =  getDenominator().toString()  + "  imaginary2 ";  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDenominator().toString()  + "  imaginary2 ";  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDenominator().toString()  + "  imaginary2 ";	  String    real    =    getDenominator().toString();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
32	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	add	                if(isNaN        ||        isInfinite)        {        throw        new        IllegalArgumentException(       "       ");        }        if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
33	[BUG]  [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  String  toString()  {      [BUGGY]          if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(     "     ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException(   ".     ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	                if(isNaN        ||        isInfinite)        {        throw        new        IllegalArgumentException(       "       ");        }        if(isNaN    ||    isInfinite)    {    throw    new    IllegalArgumentException(   ".       ");    }    if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( "   ");  }  if(isNaN  ||  isInfinite)  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	18	1	add
34	[BUG]  [BUGGY]  String  realPart  =  getDenominator().toString()  + "  imaginary   ";  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator().toString()  + "  imaginary   ";  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator().toString()  + "  imaginary   ";	  String    realPart    =    getDenominator().toString()    +   "n   ";    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
35	[BUG]  [BUGGY]  String  realPart  =  getDenominator(),  imaginaryPart.toString()  +  1;  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  realPart  =  getDenominator(),  imaginaryPart.toString()  +  1;  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  realPart  =  getDenominator(),  imaginaryPart.toString()  +  1;	  String    realPart    =    getDenominator(),    imaginaryPart.toString();    	non-compiled	[CE]  ';'  expected	12	None	replace
36	[BUG]  [BUGGY]  String  real  =  getDivisor().valueToString();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDivisor().valueToString();  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDivisor().valueToString();	  String    real    =    getDivisor().toString();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
37	[BUG]  [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]        IllegalArgumentException      [CONTEXT]      public  String  toString()  {      [BUGGY]  if(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	if(isInfinite  ||  isNaN  ||  imaginary)  {  throw  new  IllegalArgumentException( " ");  }	  if(isInfinite    ||    isNaN)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	10	None	replace
38	[BUG]  [BUGGY]  String  real  =  getNaN(),  imaginary.toString();  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getNaN(),  imaginary.toString();  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getNaN(),  imaginary.toString();	  String    real    =    getINF(),    imaginary.toString();    	non-compiled	[CE]  ';'  expected	13	None	replace
39	[BUG]  [BUGGY]  String  real  =  getNaN(),  imaginaryPart.toString();  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getNaN(),  imaginaryPart.toString();  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getNaN(),  imaginaryPart.toString();	  String    real    =    getINF(),    imaginaryPart.toString();    	non-compiled	[CE]  ';'  expected	17	None	replace
40	[BUG]  [BUGGY]  String  real  =  getDivisor().toString(imaginary);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDivisor().toString(imaginary);  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDivisor().toString(imaginary);	  String    real    =    getDivisor().toString();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
41	[BUG]  [BUGGY]  String  real  =  getDenominator().toString(imaginary);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  String  toString()  {      [BUGGY]  String  real  =  getDenominator().toString(imaginary);  [BUGGY]      return       "(     "  +  real  +       ",       "  +  imaginary  +       ")     ";  }  [CLASS]  Complex  [METHOD]  toString  [RETURN_TYPE]  String  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  expReal  factor  imaginary  imaginary2  imaginaryPart  innerPart  nthPhi  nthRootOfAbs  q  real  real2  realPart  scale  slice  subtrahend  t  x  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  factor  subtrahend  x  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	1228	1228	1	replace	String  real  =  getDenominator().toString(imaginary);	  String    real    =    getDenominator().toString();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
