bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    return    isNaN;    }    if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }	  	non-compiled	[CE]  ';'  expected	43	None	add
2	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  if(!(other  instanceof  Simple))  {  if(other  instanceof  Simple)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  if(!(other  instanceof  Simple))  {  if(other  instanceof  Simple)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    return    isNaN;    }    if(!(other  instanceof  Simple))  {  if(other  instanceof  Simple)  {  return  isNaN;  }	  	non-compiled	[CE]  ';'  expected	43	None	add
3	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  java.lang.AssertionError)  {  if(!(other  instanceof  java.lang.AssertionError))  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  instanceof  java.lang.AssertionError)  {  if(!(other  instanceof  java.lang.AssertionError))  {  return  false;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	32	16	replace
4	[BUG]  [BUGGY]  if(other  instanceof  java.lang.AssertionError)  {  if(!(other  instanceof  java.lang.AssertionError))  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  java.lang.AssertionError)  {  if(!(other  instanceof  java.lang.AssertionError))  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  java.lang.AssertionError)  {  if(!(other  instanceof  java.lang.AssertionError))  {  return  false;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	32	16	replace
5	[BUG]  [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other.getClass()!=    getClass())return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
7	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
8	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
9	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
10	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	5	16	add
11	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	5	16	add
12	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  if(!(other  instanceof  Compiler))  {  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(!(other  instanceof  Compiler))  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  if(!(other  instanceof  Compiler))  {	  if(!(other    instanceof    Complex))    {    if(!(other    instanceof    Compiler))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
13	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {  if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {  if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex)||!(other    instanceof    Complex))    {    if(!(other  instanceof  Complex)||!(other  instanceof  Complex))  {	  	non-compiled	[CE]  ';'  expected	47	None	add
14	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  return  isNaN;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	44	14	replace
15	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  return  isNaN;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	44	14	replace
16	[BUG]  [BUGGY]  if(other  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  null)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  null)  {  return  false;  }	          if(other    ==    this)    {    return    false;    }    if(other    ==    this)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  if(this!=  other)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this!=  other)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this!=  other)  {  return  false;  }	  if(this    ==    other)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  java.lang.AssertionError:  expected  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	java.lang.AssertionError:  expected	          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
19	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  If(!(other  instanceof  Complex))  {  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  If(!(other  instanceof  Complex))  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  If(!(other  instanceof  Complex))  {	  if(!(other    instanceof    Complex))    {    If(!(other    instanceof    Complex))    {    	non-compiled	[CE]  ';'  expected	16	None	replace
20	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
21	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
22	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	17	add
23	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	17	add
24	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
25	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
26	[BUG]  [BUGGY]  vice.equals(other.getClass())&&!isInfinite;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  vice.equals(other.getClass())&&!isInfinite;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	vice.equals(other.getClass())&&!isInfinite;	          if(other    ==    this)    {    return    true;    }    if(other!=    this)    {    return    true;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
27	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&  isInfinite)  {  if(!(other  instanceof  Complex)&&  isInfinite)  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)&&  isInfinite)  {  if(!(other  instanceof  Complex)&&  isInfinite)  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex)&&    isInfinite)    {    if(!(other  instanceof  Complex)&&  isInfinite)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
28	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&  isInfinite)  {  If(!(other  instanceof  Complex)&&  isInfinite)  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)&&  isInfinite)  {  If(!(other  instanceof  Complex)&&  isInfinite)  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex)&&    isInfinite)    {    If(!(other  instanceof  Complex)&&  isInfinite)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
30	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
32	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
34	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
35	[BUG]  [BUGGY]  if(this  ==  other)return  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  true;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  true;  if(other.getClass()!=  getClass())  {  return  false;  }	  if(other    ==    this)return    true;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  if(other  ==  this)return  false;  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  false;	  if(other    ==    this)return    true;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
37	[BUG]  [BUGGY]  if(this  ==  other)return  true;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  true;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  true;	  if(other    ==    this)return    true;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
38	[BUG]  [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  null)return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  null)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  null)return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
39	[BUG]  [BUGGY]  if(this  ==  other)return  true;  if(other.isInfinite())  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  true;  if(other.isInfinite())  {  return  isInfinite;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  true;  if(other.isInfinite())  {  return  isInfinite;  }	  if(other    ==    this)return    true;    if(other.isInfinite())    {    return    isInfinite;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
40	[BUG]  [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
41	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)  {  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(this  ==  other)  {  if(other  ==  this)  {  return  false;  }	          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	14	16	replace
42	[BUG]  [BUGGY]  if(this  ==  other)  {  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)  {  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)  {  if(other  ==  this)  {  return  false;  }	          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	14	16	replace
43	[BUG]  [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other!=  null)return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other!=  null)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other!=  null)return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other!=    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
44	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  instanceof  Complex)  {  if(other  instanceof  ArrayList)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	23	1	replace
45	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  if(other  instanceof  ArrayList)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	23	1	replace
46	[BUG]  [BUGGY]  if(other  instanceof  Unknown)  {  if(other  instanceof  Unknown)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Unknown)  {  if(other  instanceof  Unknown)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Unknown)  {  if(other  instanceof  Unknown)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
47	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        true;        }        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	26	1	add
48	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	26	1	add
49	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        true;        }        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	26	1	add
50	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	26	1	add
51	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        true;        }        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	26	1	add
52	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	26	1	add
53	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex)&&!(other    instanceof    Complex))    {    if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
54	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  If(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  If(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex)&&!(other    instanceof    Complex))    {    If(!(other  instanceof  Complex)&&!(other  instanceof  Complex))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
55	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
56	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
57	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
58	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
59	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
60	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  true;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  true;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
61	[BUG]  [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other    ==    this)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
62	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
63	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
64	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
65	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
66	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	40	17	add
67	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	40	17	add
68	[BUG]  [BUGGY]  if(other  instanceof  Real)  {  Real  c  =(  Real)other;  if(isInfinite  ||  isNaN)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Real)  {  Real  c  =(  Real)other;  if(isInfinite  ||  isNaN)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Real)  {  Real  c  =(  Real)other;  if(isInfinite  ||  isNaN)  {  return  false;  }	  if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite    ||    isNaN)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
69	[BUG]  [BUGGY]  if(other  instanceof  java.lang.AssertionError)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  java.lang.AssertionError)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  java.lang.AssertionError)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	  if(other    instanceof    Complex)    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
70	[BUG]  [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
71	[BUG]  [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  ArrayList)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  ArrayList)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    if(other  instanceof  ArrayList)  {  if(other  instanceof  ArrayList)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
72	[BUG]  [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  Object)  {  if(other  instanceof  Object)  {  return  false;  }  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  Object)  {  if(other  instanceof  Object)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    if(other  instanceof  Object)  {  if(other  instanceof  Object)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
73	[BUG]  [BUGGY]  Annotation  other  =(Annotation)other.clone();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  Annotation  other  =(Annotation)other.clone();  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	Annotation  other  =(Annotation)other.clone();	          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	34	3	add
75	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	34	3	add
76	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	34	3	add
77	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	34	3	add
78	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other!=  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	34	17	add
79	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other!=  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	34	17	add
80	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	3	add
81	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	3	add
82	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	3	add
83	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	3	add
84	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other.getClass()!=  getClass())return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
85	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
86	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
87	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
88	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
89	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this!=  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this!=  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	38	17	add
90	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this!=  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this!=  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this!=  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	38	17	add
91	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)&&  isNaN)  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(!(other  instanceof  Complex)&&  isNaN)  {	  if(!(other    instanceof    Complex)&&    isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	20	16	replace
92	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)&&  isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)&&  isNaN)  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex)&&  isNaN)  {	  if(!(other    instanceof    Complex)&&    isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	20	16	replace
93	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
94	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
95	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
96	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
97	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
98	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other!=  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
99	[BUG]  [BUGGY]  if(other  ==  this)return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  false;  }	  if(other    ==    this)return    true;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
100	[BUG]  [BUGGY]  if(this  ==  other)return  true;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  true;  }	  if(other    ==    this)return    true;    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
101	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  instanceof  Complex)  {  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	37	2	replace
102	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	37	2	replace
103	[BUG]  [BUGGY]  if(this  ==  other)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	  if(other    instanceof    Complex)    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
104	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	3	add
105	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	3	add
106	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	2	17	add
107	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other!=  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	2	17	add
108	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
109	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
110	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  true;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  true;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
111	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  true;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other!=  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  true;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other!=    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  true;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	13	17	add
112	[BUG]  [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  ISNaN;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  isNaN;  }  if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  ISNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    return    isNaN;    }    if(!(other  instanceof  Complex))  {  if(other  instanceof  Complex)  {  return  ISNaN;  }	  	non-compiled	[CE]  ';'  expected	43	None	add
113	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	34	3	add
114	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	34	3	add
115	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
116	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other!=  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other!=    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	7	16	add
117	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
118	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
119	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
120	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
121	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  AssertionError)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  instanceof  AssertionError)  {  if(other  instanceof  ArrayList)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	23	16	replace
122	[BUG]  [BUGGY]  if(other  instanceof  AssertionError)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  AssertionError)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  AssertionError)  {  if(other  instanceof  ArrayList)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	23	16	replace
123	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  null)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  ==  null)  {  if(other  instanceof  ArrayList)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	23	17	replace
124	[BUG]  [BUGGY]  if(other  ==  null)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  null)  {  if(other  instanceof  ArrayList)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  null)  {  if(other  instanceof  ArrayList)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	23	17	replace
125	[BUG]  [BUGGY]  if(other  instanceof  NaN)  {  NaN  c  =(NaN)other;  if(isInfinite  ||  isNaN)  {  return  false;  }  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  NaN)  {  NaN  c  =(NaN)other;  if(isInfinite  ||  isNaN)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  NaN)  {  NaN  c  =(NaN)other;  if(isInfinite  ||  isNaN)  {  return  false;  }	  if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite    ||    isNaN)    {    return    false;    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
126	[BUG]  [BUGGY]  if(this  ==  other)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)  {  return  true;  }	  if(this    ==    other)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
127	[BUG]  [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  true;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  false;  }  if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    if(other  instanceof  java.util.ArrayList)  {  if(other  instanceof  java.util.ArrayList)  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
128	[BUG]  [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other.getClass()!=    getClass())return    false;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
129	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
130	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        if(other    ==    this)    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	5	1	add
131	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
132	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
133	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
134	[BUG]  [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  if(other!=  null)return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  if(other!=  null)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  if(other!=  null)return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other!=    null)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
135	[BUG]  [BUGGY]  if(other  instanceof  AssertionError)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  AssertionError)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  AssertionError)  {  return  false;  }	  if(other    instanceof    java.util.ArrayList)    {    if(other    instanceof    java.util.ArrayList)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
136	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
137	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	10	3	add
138	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())  {  return  false;  }  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
139	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)||  isInfinite)  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(!(other  instanceof  Complex)||  isInfinite)  {	  if(!(other    instanceof    Complex)&&    isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	20	17	replace
140	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)||  isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)||  isInfinite)  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex)||  isInfinite)  {	  if(!(other    instanceof    Complex)&&    isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	20	17	replace
141	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
142	[BUG]  [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)return        false;        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  if(other  ==  this)return  false;  }	  	non-compiled	[CE]  illegal  start  of  type	34	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
144	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other!=  this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other!=    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }  if(other!=  this)  {  return  true;  }	  	compilable	  [FE]  AssertionError  	28	4	add
145	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(other  ==  this)  {  if(other  instanceof  Complex)  {  return  isNaN;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	44	16	replace
146	[BUG]  [BUGGY]  if(other  ==  this)  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)  {  if(other  instanceof  Complex)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)  {  if(other  instanceof  Complex)  {  return  isNaN;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	44	16	replace
147	[BUG]  [BUGGY]  if(other  ==  null)return  false;  if(other.getClass()!=  getClass())return  false;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  null)return  false;  if(other.getClass()!=  getClass())return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  null)return  false;  if(other.getClass()!=  getClass())return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
148	[BUG]  [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(this  ==  other)return  false;  if(other.getClass()!=  getClass())return  false;  if(other  ==  this)return  false;  }	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    if(other    ==    this)return    false;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
149	[BUG]  [BUGGY]  if(!isInfinite)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!isInfinite)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!isInfinite)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite)  {  return  isNaN;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
150	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
151	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(other  ==  null)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(other    ==    null)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	40	3	add
152	[BUG]  [BUGGY]  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite  ||  isNaN)  {  return  true;  }  [CE]  variable  c  is  already  defined  in  method  equals(Object)  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite  ||  isNaN)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isInfinite  ||  isNaN)  {  return  true;  }	  if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isInfinite    ||    isNaN)    {    return    false;    }    	non-compiled	[CE]  variable  c  is  already  defined  in  method  equals(Object)	50	None	replace
153	[BUG]  [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)return  false;  if(other.getClass()!=  getClass())return  false;	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
154	[BUG]  [BUGGY]  if(other  ==  null)return  false;  if(other.getClass()!=  getClass())return  false;  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  null)return  false;  if(other.getClass()!=  getClass())return  false;  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  null)return  false;  if(other.getClass()!=  getClass())return  false;	          if(other    ==    this)return    false;    if(other.getClass()!=    getClass())    {    return    false;    }    if(other    ==    this)return    false;    if(other    ==    this)return    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
155	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
156	[BUG]  [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }  else  if(other.getClass()!=  getClass())  {  return  false;  }  if(this  ==  other)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        false;        }        else        if(other.getClass()!=        getClass())        {        return        false;        }        if(this    ==    other)    {    return    false;    }    else    if(other.getClass()!=    getClass())    {    return    false;    }    if(this  ==  other)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	3	add
157	[BUG]  [BUGGY]  if(other!=  this)  {  return  true;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other!=  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other!=  this)  {  return  true;  }	  if(other!=    this)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
158	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Compiler))  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	add	if(!(other  instanceof  Complex)||!(other  instanceof  Compiler))  {	  if(!(other    instanceof    Complex))    {    if(!(other    instanceof    Compiler))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	33	3	replace
159	[BUG]  [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Compiler))  {  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!(other  instanceof  Complex)||!(other  instanceof  Compiler))  {  [BUGGY]      Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!(other  instanceof  Complex)||!(other  instanceof  Compiler))  {	  if(!(other    instanceof    Complex))    {    if(!(other    instanceof    Compiler))    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	33	3	replace
160	[BUG]  [BUGGY]  if(other  ==  this)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	  if(other    instanceof    Complex)    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
161	[BUG]  [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [CE]  incompatible  types  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]          if(other    ==    this)    {    return    true;    }    if(other  ==  this)  {  return  true;  }  if(this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	                if(other        ==        this)        {        return        true;        }        if(other    ==    this)    {    return    true;    }    if(this)  {  return  true;  }  if(other  ==  this)  {  return  true;  }	  	non-compiled	[CE]  incompatible  types	26	None	add
162	[BUG]  [BUGGY]  if(other  ==  this)  {  if(other  instanceof  Real)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(other  ==  this)  {  if(other  instanceof  Real)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(other  ==  this)  {  if(other  instanceof  Real)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	  if(other    instanceof    Real)    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	25	None	replace
163	[BUG]  [BUGGY]  if(!isInfinite)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }      [BUGGY]  if(!isInfinite)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }  [BUGGY]      if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.22360679774997896	343	343	1	replace	if(!isInfinite)  {  if(other  instanceof  Complex)  {  Complex  c  =(Complex)other;  if(isNaN  ||  isInfinite)  {  return  false;  }	  if(!(other    instanceof    Complex))    {    if(other    instanceof    Complex)    {    Complex    c    =(Complex)other;    if(isNaN    ||    isInfinite)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	32	None	replace
