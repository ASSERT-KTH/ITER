bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  denominator  =  getDenominator();  [CE]  cannot  find  symbol  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    double  denominator  =  getDenominator();  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    double  denominator  =  getDenominator();		non-compiled	[CE]  cannot  find  symbol	2	None	add
2	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    double  denominator  =  Math.abs(imaginary);  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	add	    double  denominator  =  Math.abs(imaginary);		compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	1	add
3	[BUG]  [BUGGY]    double  denominator  =  Math.abs(imaginary);  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    double  denominator  =  Math.abs(imaginary);  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    double  denominator  =  Math.abs(imaginary);		compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	1	add
4	[BUG]  [BUGGY]    double  denominator  =  Math.abs(imaginary)/  scale;  [CE]  cannot  find  symbol  scale  [FE]        java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    double  denominator  =  Math.abs(imaginary)/  scale;  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    double  denominator  =  Math.abs(imaginary)/  scale;		non-compiled	[CE]  cannot  find  symbol  scale	2	None	add
5	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(1.0  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]  return  ONE;  [BUGGY]  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	add	return  ONE;	return  NaN;  	compilable	  [FE]  java.lang.AssertionError:  expected:<(1.0  	1	1	replace
6	[BUG]  [BUGGY]  return  ONE;  [FE]  java.lang.AssertionError:  expected:<(1.0  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]  return  ONE;  [BUGGY]  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	return  ONE;	return  NaN;  	compilable	  [FE]  java.lang.AssertionError:  expected:<(1.0  	1	1	replace
7	[BUG]  [BUGGY]    Real  =  real.evaluate(imaginary);  [CE]  cannot  find  symbol  Real  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    Real  =  real.evaluate(imaginary);  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    Real  =  real.evaluate(imaginary);		non-compiled	[CE]  cannot  find  symbol  Real	2	None	add
8	[BUG]  [BUGGY]    Real  =  real;  [CE]  cannot  find  symbol  Real  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    Real  =  real;  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    Real  =  real;		non-compiled	[CE]  cannot  find  symbol  Real	2	None	add
9	[BUG]  [BUGGY]    Real  =  imaginary;  [CE]  cannot  find  symbol  Real  [FE]        java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    Real  =  imaginary;  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    Real  =  imaginary;		non-compiled	[CE]  cannot  find  symbol  Real	2	None	add
10	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    if(imaginary  ==  0.0)  {  return  NaN;  }  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	add	    if(imaginary  ==  0.0)  {  return  NaN;  }		compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	1	add
11	[BUG]  [BUGGY]    if(imaginary  ==  0.0)  {  return  NaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    if(imaginary  ==  0.0)  {  return  NaN;  }  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    if(imaginary  ==  0.0)  {  return  NaN;  }		compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	2	1	add
12	[BUG]  [BUGGY]    Real  c  =  real.getINF();  [CE]  cannot  find  symbol  [FE]      java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    Real  c  =  real.getINF();  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    Real  c  =  real.getINF();		non-compiled	[CE]  cannot  find  symbol	2	None	add
13	[BUG]  [BUGGY]    if(imaginary  ==  null)  {  return  NaN;  }  [CE]  incomparable  types:  double  and  <null>  [FE]        java.lang.AssertionError:  expected:<(NaN  [CONTEXT]  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {  [BUGGY]    if(imaginary  ==  null)  {  return  NaN;  }  [BUGGY]  return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  double  scale  =  1.  /  (real  *  q  +  imaginary);  return  createComplex(scale  *  q,  -scale);  [CLASS]  Complex  [METHOD]  reciprocal  [RETURN_TYPE]  Complex  [VARIABLES]  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	1.0	305	305	1	replace	    if(imaginary  ==  null)  {  return  NaN;  }		non-compiled	[CE]  incomparable  types:  double  and  <null>	2	None	add
