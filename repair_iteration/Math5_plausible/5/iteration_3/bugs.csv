bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);	  	non-compiled	[CE]  not  a  statement	4	None	add
2	[BUG]  [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
3	[BUG]  [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
4	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  1;  double  imaginary  =  c.imaginary  +  1;  [CE]  variable  imaginary  is  already  defined  in  method  equals(Object)  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  +  1;  double  imaginary  =  c.imaginary  +  1;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    imaginary    =    c.imaginary    +    1;    double  imaginary  =  c.imaginary  +  1;	  	non-compiled	[CE]  variable  imaginary  is  already  defined  in  method  equals(Object)	15	None	add
5	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  1;  Double  imaginary  =  c.imaginary  +  1;  [CE]  variable  imaginary  is  already  defined  in  method  equals(Object)  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  +  1;  Double  imaginary  =  c.imaginary  +  1;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    imaginary    =    c.imaginary    +    1;    Double  imaginary  =  c.imaginary  +  1;	  	non-compiled	[CE]  variable  imaginary  is  already  defined  in  method  equals(Object)	15	None	add
6	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  1;  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  +  1;  java.lang.AssertionError:  expected;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    imaginary    =    c.imaginary    +    1;    java.lang.AssertionError:  expected;	  	non-compiled	[CE]  not  a  statement	15	None	add
7	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	return  (imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);	  return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	5	15	replace
8	[BUG]  [BUGGY]  return  (imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return  (imaginary  ==  c.real)&&  (imaginary  ==  c.imaginary);	  return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	5	15	replace
9	[BUG]  [BUGGY]  double  real  =  c.real  ||(imaginary!=  c.imaginary);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real  ||(imaginary!=  c.imaginary);  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  real  =  c.real  ||(imaginary!=  c.imaginary);	  double    real    =    c.real    ||(imaginary    ==    c.imaginary);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	24	None	replace
10	[BUG]  [BUGGY]  if(c.isNaN)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isNaN)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected	          double    imaginary    =    c.imaginary;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	13	None	replace
11	[BUG]  [BUGGY]  if(c.imaginary!=  null)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.imaginary!=  null)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.imaginary!=  null)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected	          double    imaginary    =    c.imaginary;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	13	None	replace
12	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  if(c.real  ==  real)&&  (imaginary  ==  c.real);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  if(c.real  ==  real)&&  (imaginary  ==  c.real);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  if(c.real  ==  real)&&  (imaginary  ==  c.real);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
13	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  if(d.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  if(d.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  if(d.real  ==  real)&&  (d.imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
14	[BUG]  [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected	          double    real    =    c.real;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	10	None	replace
15	[BUG]  [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected  }	          double    real    =    c.real;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	10	None	replace
16	[BUG]  [BUGGY]  double  real  =  c.real  ||  imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real  ||  imaginary  ==  c.imaginary);  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  real  =  c.real  ||  imaginary  ==  c.imaginary);	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	22	None	replace
17	[BUG]  [BUGGY]  if(c.real!=  imaginary)  {  double  imaginary  =  c.real;  AssertionError:  expected;  }  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real!=  imaginary)  {  double  imaginary  =  c.real;  AssertionError:  expected;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.real!=  imaginary)  {  double  imaginary  =  c.real;  AssertionError:  expected;  }	          double    imaginary    =    c.real;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	18	None	replace
18	[BUG]  [BUGGY]  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  java.lang.AssertionError:  expected;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	java.lang.AssertionError:  expected;	          double    imaginary    =    c.real;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	18	None	replace
19	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isNaN)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	15	replace
20	[BUG]  [BUGGY]  if(c.isNaN)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isNaN)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	15	replace
21	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  return  true;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isNaN)  {  return  true;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	15	replace
22	[BUG]  [BUGGY]  if(c.isNaN)  {  return  true;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  return  true;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isNaN)  {  return  true;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	15	replace
23	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  c.real  ==  real)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	26	None	replace
24	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	4	add
25	[BUG]  [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	4	add
26	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.real)return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.real)return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	4	add
27	[BUG]  [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.real)return  false;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.real)return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.real)return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	38	4	add
28	[BUG]  [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.Imaginary)return  false;  }  [CE]  cannot  find  symbol  Imaginary  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.Imaginary)return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.Imaginary)return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  Imaginary	38	None	add
29	[BUG]  [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected;  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected;  }	          double    real    =    c.real;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
30	[BUG]  [BUGGY]  if(c.isNaN)  {  double  real  =  c.real;  AssertionError:  expected;  }  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  double  real  =  c.real;  AssertionError:  expected;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isNaN)  {  double  real  =  c.real;  AssertionError:  expected;  }	          double    real    =    c.real;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
31	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  c.imaginary;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real  ||  c.imaginary  ==  c.imaginary;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  real  =  c.real  ||  c.imaginary  ==  c.imaginary;	          double    real    =    c.real;    double    real    =    c.real;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	9	None	replace
32	[BUG]  [BUGGY]  return(divisor  ==  c.divisor)||(divisor  ==  c.divisor);  if(divisor  ==  c.divisor)return  false;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(divisor  ==  c.divisor)||(divisor  ==  c.divisor);  if(divisor  ==  c.divisor)return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(divisor  ==  c.divisor)||(divisor  ==  c.divisor);  if(divisor  ==  c.divisor)return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    else    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
33	[BUG]  [BUGGY]  return(divisor  ==  c.divisor)&&(divisor  ==  c.divisor);  if(divisor  ==  c.divisor)return  false;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(divisor  ==  c.divisor)&&(divisor  ==  c.divisor);  if(divisor  ==  c.divisor)return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(divisor  ==  c.divisor)&&(divisor  ==  c.divisor);  if(divisor  ==  c.divisor)return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    else    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
34	[BUG]  [BUGGY]  if(c.isNaN)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isNaN)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }	  double    real    =    c.real;    if(imaginary    ==    c.imaginary)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
35	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  Object  real  =  c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  Object  real  =  c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  Object  real  =  c.real  ==  real)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    Object    real    =    c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	31	None	replace
36	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  Object  real  =  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  Object  real  =  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  Object  real  =  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    Object    real    =    c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	31	None	replace
37	[BUG]  [BUGGY]  Object  real  =  this.real;  Object  real  =  this.real;  [CE]  variable  real  is  already  defined  in  method  equals(Object)  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Object  real  =  this.real;  Object  real  =  this.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	Object    real    =    this.real;    Object  real  =  this.real;	  	non-compiled	[CE]  variable  real  is  already  defined  in  method  equals(Object)	36	None	add
38	[BUG]  [BUGGY]  Object  real  =  this.real;  Object  Real  =  this.real;  [CE]  incomparable  types:  Object  and  double  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Object  real  =  this.real;  Object  Real  =  this.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	Object    real    =    this.real;    Object  Real  =  this.real;	  	non-compiled	[CE]  incomparable  types:  Object  and  double	36	None	add
39	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  (c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  (c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  (c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    (c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	27	None	replace
40	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real    ==    imaginary)&&    (imaginary    ==    c.imaginary);    if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
41	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real    ==    imaginary)&&    (imaginary    ==    c.imaginary);    c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);	  	non-compiled	[CE]  not  a  statement	20	None	add
42	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  (c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  (c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real    ==    imaginary)&&    (imaginary    ==    c.imaginary);    (c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);	  	non-compiled	[CE]  not  a  statement	20	None	add
43	[BUG]  [BUGGY]  double  imaginary  =  c.Imaginary;  [CE]  cannot  find  symbol  Imaginary  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.Imaginary;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  imaginary  =  c.Imaginary;	          double    imaginary    =    c.imaginary;    double    imaginary    =    c.Imaginary;    	non-compiled	[CE]  cannot  find  symbol  Imaginary	34	None	replace
44	[BUG]  [BUGGY]  return(c.divisor  ==  other)&&  (divisor  ==  c.divisor);  [CE]  cannot  find  symbol  divisor  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.divisor  ==  other)&&  (divisor  ==  c.divisor);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.divisor  ==  other)&&  (divisor  ==  c.divisor);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    else    {    return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  cannot  find  symbol  divisor	40	None	replace
45	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    else    {    return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	40	16	replace
46	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    else    {    return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	40	16	replace
47	[BUG]  [BUGGY]  (real  ==  c.real)||  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  (real  ==  c.real)||  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	(real  ==  c.real)||  (imaginary  ==  c.imaginary);	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	1	None	replace
48	[BUG]  [BUGGY]  ||  (imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  ||  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	||  (imaginary  ==  c.imaginary);	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  /  1;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	double  imaginary  =  c.imaginary  /  1;	  double    imaginary    =    c.imaginary    +    1;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	16	15	replace
50	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  /  1;  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  /  1;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  imaginary  =  c.imaginary  /  1;	  double    imaginary    =    c.imaginary    +    1;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	16	15	replace
51	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  if(c.real  ==  real)&&  (imaginary  ==  c.real);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  if(c.real  ==  real)&&  (imaginary  ==  c.real);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  imaginary)&&  (c.imaginary  ==  c.imaginary);  if(c.real  ==  real)&&  (imaginary  ==  c.real);  }	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
52	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  if(d.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  if(d.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  if(d.real  ==  real)&&  (d.imaginary  ==  c.imaginary);  }	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
53	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Double  imaginary  =  c.imaginary;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	Double  imaginary  =  c.imaginary;	          double    imaginary    =    c.imaginary;    Double    imaginary    =    c.imaginary;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	33	15	replace
54	[BUG]  [BUGGY]  Double  imaginary  =  c.imaginary;  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Double  imaginary  =  c.imaginary;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	Double  imaginary  =  c.imaginary;	          double    imaginary    =    c.imaginary;    Double    imaginary    =    c.imaginary;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	33	15	replace
55	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Double  imaginary  =  c.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	Double  imaginary  =  c.real;	          double    imaginary    =    c.real;    Double    imaginary    =    c.real;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	32	15	replace
56	[BUG]  [BUGGY]  Double  imaginary  =  c.real;  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Double  imaginary  =  c.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	Double  imaginary  =  c.real;	          double    imaginary    =    c.real;    Double    imaginary    =    c.real;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	32	15	replace
57	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Double  real  =  c.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	Double  real  =  c.real;	          double    real    =    c.real;    Double    real    =    c.real;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	42	15	replace
58	[BUG]  [BUGGY]  Double  real  =  c.real;  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Double  real  =  c.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	Double  real  =  c.real;	          double    real    =    c.real;    Double    real    =    c.real;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	42	15	replace
59	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.real);  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.real);  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  imaginary  =  c.imaginary  ||  c.imaginary  ==  c.real);	  double    imaginary    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	41	None	replace
60	[BUG]  [BUGGY]  if(divisor!=  other)  {  return  false;  }  [CE]  cannot  find  symbol  divisor  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(divisor!=  other)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(divisor!=  other)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    else    return    false;    	non-compiled	[CE]  cannot  find  symbol  divisor	29	None	replace
61	[BUG]  [BUGGY]  if(divisor  ==  other)  {  return  false;  }  [CE]  cannot  find  symbol  divisor  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(divisor  ==  other)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(divisor  ==  other)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    Object    real    ==    c.real)||    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  cannot  find  symbol  divisor	28	None	replace
62	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }	  if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	39	15	replace
63	[BUG]  [BUGGY]  if(isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  false;  }	  if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	39	15	replace
64	[BUG]  [BUGGY]  if(c.isNaN)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected;  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isNaN)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isNaN)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected;  }	          double    imaginary    =    c.imaginary;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	14	None	replace
65	[BUG]  [BUGGY]  if(c.real!=  imaginary)  {  double  imaginary  =  c.real;  AssertionError:  expected  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real!=  imaginary)  {  double  imaginary  =  c.real;  AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.real!=  imaginary)  {  double  imaginary  =  c.real;  AssertionError:  expected	          double    imaginary    =    c.real;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	19	None	replace
66	[BUG]  [BUGGY]  boolean  imaginary  =  c.real;  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  boolean  imaginary  =  c.real;  java.lang.AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	boolean  imaginary  =  c.real;  java.lang.AssertionError:  expected	          double    imaginary    =    c.real;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	19	None	replace
67	[BUG]  [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  [CE]  variable  real  is  already  defined  in  method  equals(Object)  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    real    =    c.real;    if(imaginary    ==    c.imaginary)    {    return    false;    }    double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }	  	non-compiled	[CE]  variable  real  is  already  defined  in  method  equals(Object)	6	None	add
68	[BUG]  [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  if(divisor  ==  c.divisor)  {  return  false;  }  [CE]  cannot  find  symbol  divisor  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  if(divisor  ==  c.divisor)  {  return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    real    =    c.real;    if(imaginary    ==    c.imaginary)    {    return    false;    }    if(divisor  ==  c.divisor)  {  return  false;  }	  	non-compiled	[CE]  cannot  find  symbol  divisor	6	None	add
69	[BUG]  [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  if(double  real  ==  c.real)  {  return  false;  }  [CE]  '.class'  expected  [FE]        java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  if(double  real  ==  c.real)  {  return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    real    =    c.real;    if(imaginary    ==    c.imaginary)    {    return    false;    }    if(double  real  ==  c.real)  {  return  false;  }	  	non-compiled	[CE]  '.class'  expected	6	None	add
70	[BUG]  [BUGGY]  return  c.real  ==  real)&&  c.imaginary  ==  c.imaginary;  if(real  ==  c.real)&&  c.imaginary!=  c.imaginary;  else  return  false;  }  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  c.real  ==  real)&&  c.imaginary  ==  c.imaginary;  if(real  ==  c.real)&&  c.imaginary!=  c.imaginary;  else  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return  c.real  ==  real)&&  c.imaginary  ==  c.imaginary;  if(real  ==  c.real)&&  c.imaginary!=  c.imaginary;  else  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    else    return    false;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
71	[BUG]  [BUGGY]  return  c.real  ==  real)&&  c.imaginary  ==  c.imaginary;  if(real  ==  c.real)&&  c.imaginary!=  c.imaginary;  else  return  false;  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  c.real  ==  real)&&  c.imaginary  ==  c.imaginary;  if(real  ==  c.real)&&  c.imaginary!=  c.imaginary;  else  return  false;  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return  c.real  ==  real)&&  c.imaginary  ==  c.imaginary;  if(real  ==  c.real)&&  c.imaginary!=  c.imaginary;  else  return  false;	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    else    return    false;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
72	[BUG]  [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  Object  real  =  c.real;  if(imaginary  ==  c.real)  {  return  false;  }  [CE]  variable  real  is  already  defined  in  method  equals(Object)  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  Object  real  =  c.real;  if(imaginary  ==  c.real)  {  return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    real    =    c.real;    if(imaginary    ==    c.imaginary)    {    return    false;    }    Object  real  =  c.real;  if(imaginary  ==  c.real)  {  return  false;  }	  	non-compiled	[CE]  variable  real  is  already  defined  in  method  equals(Object)	6	None	add
73	[BUG]  [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  double  real  =  c.real;  if(imaginary  ==  c.real)  {  return  false;  }  [CE]  variable  real  is  already  defined  in  method  equals(Object)  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real;  if(imaginary  ==  c.imaginary)  {  return  false;  }  double  real  =  c.real;  if(imaginary  ==  c.real)  {  return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    real    =    c.real;    if(imaginary    ==    c.imaginary)    {    return    false;    }    double  real  =  c.real;  if(imaginary  ==  c.real)  {  return  false;  }	  	non-compiled	[CE]  variable  real  is  already  defined  in  method  equals(Object)	6	None	add
74	[BUG]  [BUGGY]  boolean  imaginary  =  c.real;  java.lang.AssertionError:  expected;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  boolean  imaginary  =  c.real;  java.lang.AssertionError:  expected;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	boolean  imaginary  =  c.real;  java.lang.AssertionError:  expected;	          double    imaginary    =    c.real;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	18	None	replace
75	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  (c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  (c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  (c.real  ==  real)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    (c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	27	None	replace
76	[BUG]  [BUGGY]  return(divisor  ==  c.divisor)&&  (divisor  ==  c.divisor);  [CE]  cannot  find  symbol  divisor  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(divisor  ==  c.divisor)&&  (divisor  ==  c.divisor);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(divisor  ==  c.divisor)&&  (divisor  ==  c.divisor);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    else    {    return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  cannot  find  symbol  divisor	40	None	replace
77	[BUG]  [BUGGY]  return(divisor  ==  c.divisor)&&  (divisor  ==  c.divisor);  if(divisor  ==  c.divisor)  {  return(divisor  ==  c.divisor);  }  [CE]  cannot  find  symbol  divisor  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(divisor  ==  c.divisor)&&  (divisor  ==  c.divisor);  if(divisor  ==  c.divisor)  {  return(divisor  ==  c.divisor);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(divisor  ==  c.divisor)&&  (divisor  ==  c.divisor);  if(divisor  ==  c.divisor)  {  return(divisor  ==  c.divisor);  }	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    else    {    return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  cannot  find  symbol  divisor	40	None	replace
78	[BUG]  [BUGGY]  double  real  =  c.real  ||(imaginary  ==  c.imaginary)&&(imaginary  ==  c.imaginary);  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real  ||(imaginary  ==  c.imaginary)&&(imaginary  ==  c.imaginary);  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  real  =  c.real  ||(imaginary  ==  c.imaginary)&&(imaginary  ==  c.imaginary);	  double    real    =    c.real    ||(imaginary    ==    c.imaginary);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	24	None	replace
79	[BUG]  [BUGGY]  double  real  =  c.real  &&  c.imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real  &&  c.imaginary  ==  c.imaginary);  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  real  =  c.real  &&  c.imaginary  ==  c.imaginary);	  double    real    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	22	None	replace
80	[BUG]  [BUGGY]  double  imaginary  =  c.real  &&  c.imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.real  &&  c.imaginary  ==  c.imaginary);  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  imaginary  =  c.real  &&  c.imaginary  ==  c.imaginary);	  double    imaginary    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	41	None	replace
81	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (imaginary  ==  c.imaginary);  c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	26	None	replace
82	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  c.real  ==  real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  c.real  ==  real)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  not  a  statement	26	None	replace
83	[BUG]  [BUGGY]  boolean  imaginary  =  c.imaginary;  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  boolean  imaginary  =  c.imaginary;  java.lang.AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	boolean  imaginary  =  c.imaginary;  java.lang.AssertionError:  expected	          double    imaginary    =    c.imaginary;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	13	None	replace
84	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ==  null?  c.imaginary  :  c.real;  [CE]  incomparable  types:  double  and  <null>  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  ==  null?  c.imaginary  :  c.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  imaginary  =  c.imaginary  ==  null?  c.imaginary  :  c.real;	  double    imaginary    =    c.imaginary    ==    null?    c.imaginary    :    c.imaginary;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	35	None	replace
85	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  1;  java.lang.AssertionError:  expected  +  1;  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  +  1;  java.lang.AssertionError:  expected  +  1;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    imaginary    =    c.imaginary    +    1;    java.lang.AssertionError:  expected  +  1;	  	non-compiled	[CE]  not  a  statement	15	None	add
86	[BUG]  [BUGGY]  boolean  real  =  c.real;  if(AssertionError.isNaN(real))  expected  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  boolean  real  =  c.real;  if(AssertionError.isNaN(real))  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	boolean  real  =  c.real;  if(AssertionError.isNaN(real))  expected	          double    real    =    c.real;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	10	None	replace
87	[BUG]  [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real  ||  imaginary  ==  c.imaginary  ||  imaginary  ==  c.imaginary);  [CE]  unreachable  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real  ||  imaginary  ==  c.imaginary  ||  imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real  ||  imaginary  ==  c.imaginary  ||  imaginary  ==  c.imaginary);	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  unreachable  statement	2	None	replace
89	[BUG]  [BUGGY]  return  real  ==  c.real  ||  (imaginary  ==  c.imaginary);  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  real  ==  c.real  ||  (imaginary  ==  c.imaginary);  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return  real  ==  c.real  ||  (imaginary  ==  c.imaginary);  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return  real  ==  c.real  ||  imaginary  ==  c.imaginary;  if(real  ==  c.real)||  (imaginary  ==  c.imaginary);  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  return(c.real  ==  d)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  d)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  d)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  }	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
92	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isInfinite)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    else    return    false;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	29	15	replace
93	[BUG]  [BUGGY]  if(c.isInfinite)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isInfinite)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    else    return    false;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	29	15	replace
94	[BUG]  [BUGGY]  return(c.real  ==  d)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  d)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  d)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
95	[BUG]  [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  if(divisor  ==  c.real)&&  (imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  if(divisor  ==  c.real)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  real)&&  (divisor  ==  c.imaginary);  if(divisor  ==  c.real)&&  (imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
96	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real    ==    imaginary)&&    (imaginary    ==    c.imaginary);    if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
97	[BUG]  [BUGGY]  Object  real  =  this.real;  Object  real  =  that.real;  [CE]  variable  real  is  already  defined  in  method  equals(Object)  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Object  real  =  this.real;  Object  real  =  that.real;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	Object    real    =    this.real;    Object  real  =  that.real;	  	non-compiled	[CE]  variable  real  is  already  defined  in  method  equals(Object)	36	None	add
98	[BUG]  [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  java.lang.AssertionError:  expected  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    java.lang.AssertionError:  expected	  	non-compiled	[CE]  not  a  statement	4	None	add
99	[BUG]  [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  Object  imaginary  =  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  [CE]  incomparable  types:  Object  and  double  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  Object  imaginary  =  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    Object  imaginary  =  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);	  	non-compiled	[CE]  incomparable  types:  Object  and  double	4	None	add
100	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Object  real  =  null;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	Object  real  =  null;	  Object    real    =    this.real;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	37	15	replace
101	[BUG]  [BUGGY]  Object  real  =  null;  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  Object  real  =  null;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	Object  real  =  null;	  Object    real    =    this.real;    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	37	15	replace
102	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite())  {  return  true;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isInfinite())  {  return  true;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	12	replace
103	[BUG]  [BUGGY]  if(c.isInfinite())  {  return  true;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite())  {  return  true;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isInfinite())  {  return  true;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	12	replace
104	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite())  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isInfinite())  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	15	replace
105	[BUG]  [BUGGY]  if(c.isInfinite())  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]              java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite())  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isInfinite())  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	3	15	replace
106	[BUG]  [BUGGY]  return(c.denominator  ==  c.denominator)&&(imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.denominator  ==  c.denominator)&&(imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.denominator  ==  c.denominator)&&(imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  }	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
107	[BUG]  [BUGGY]  return(c.denominator  ==  c.denominator)&&(imaginary  ==  c.imaginary);  if(c.real  ==  real)&&(imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.denominator  ==  c.denominator)&&(imaginary  ==  c.imaginary);  if(c.real  ==  real)&&(imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.denominator  ==  c.denominator)&&(imaginary  ==  c.imaginary);  if(c.real  ==  real)&&(imaginary  ==  c.imaginary);  }	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
108	[BUG]  [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  else  return  false;  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return  (imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  else  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return    (imaginary    ==    c.real)||    (imaginary    ==    c.imaginary);    if(imaginary  ==  c.real)||  (imaginary  ==  c.imaginary);  else  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
109	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real  ==  imaginary)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.real  ==  imaginary)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	2	15	replace
110	[BUG]  [BUGGY]  if(c.real  ==  imaginary)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real  ==  imaginary)  {  return  false;  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.real  ==  imaginary)  {  return  false;  }	  return    (real    ==    c.real)||    (imaginary    ==    c.imaginary);    if(real    ==    c.real)||    (imaginary    ==    c.imaginary);    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	2	15	replace
111	[BUG]  [BUGGY]  if(c.imaginary!=  null)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected;  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.imaginary!=  null)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.imaginary!=  null)  {  double  imaginary  =  c.imaginary;  AssertionError:  expected;  }	          double    imaginary    =    c.imaginary;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	14	None	replace
112	[BUG]  [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected;  }  else  {  return  false;  }  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected;  }  else  {  return  false;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.real!=  real)  {  double  real  =  c.real;  AssertionError:  expected;  }  else  {  return  false;  }	          double    real    =    c.real;    java.lang.AssertionError:    expected;    	non-compiled	[CE]  not  a  statement	11	None	replace
113	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }  else  {  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }  else  {  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real    ==    imaginary)&&    (imaginary    ==    c.imaginary);    if(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }  else  {  return(c.real  ==  imaginary)&&  (imaginary  ==  c.imaginary);  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
114	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  expected:<(-0.5      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  ==  c.imaginary);  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  imaginary  =  c.imaginary  ==  c.imaginary);	  double    imaginary    =    c.real    ||    c.imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	41	None	replace
115	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&(c.imaginary  ==  imaginary);  Object  real  =  c.real  ==  real)&&(imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&(c.imaginary  ==  imaginary);  Object  real  =  c.real  ==  real)&&(imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  imaginary)&&(c.imaginary  ==  imaginary);  Object  real  =  c.real  ==  real)&&(imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    Object    real    =    c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	31	None	replace
116	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  Object  real  =  c.real  ==  real)&&(imaginary  ==  c.imaginary);  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  Object  real  =  c.real  ==  real)&&(imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  imaginary)&&(imaginary  ==  c.imaginary);  Object  real  =  c.real  ==  real)&&(imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    Object    real    =    c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  ';'  expected	31	None	replace
117	[BUG]  [BUGGY]  double  imaginary  =  c.imaginary  +  1;  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  imaginary  =  c.imaginary  +  1;  java.lang.AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double    imaginary    =    c.imaginary    +    1;    java.lang.AssertionError:  expected	  	non-compiled	[CE]  not  a  statement	15	None	add
118	[BUG]  [BUGGY]  boolean  real  =  c.real;  java.lang.AssertionError:  expected  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  boolean  real  =  c.real;  java.lang.AssertionError:  expected  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	boolean  real  =  c.real;  java.lang.AssertionError:  expected	          double    real    =    c.real;    java.lang.AssertionError:    expected    	non-compiled	[CE]  not  a  statement	10	None	replace
119	[BUG]  [BUGGY]  double  real  =  c.real  ||  c.imaginary!=  c.imaginary;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  double  real  =  c.real  ||  c.imaginary!=  c.imaginary;  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	double  real  =  c.real  ||  c.imaginary!=  c.imaginary;	          double    real    =    c.real;    double    real    =    c.real;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	9	None	replace
120	[BUG]  [BUGGY]  return(c.real  ==  imaginary)&&(c.imaginary  ==  imaginary);  if(c.real  ==  real)&&(imaginary  ==  c.imaginary);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected:<(NaN      [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  return(c.real  ==  imaginary)&&(c.imaginary  ==  imaginary);  if(c.real  ==  real)&&(imaginary  ==  c.imaginary);  [BUGGY]      }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	return(c.real  ==  imaginary)&&(c.imaginary  ==  imaginary);  if(c.real  ==  real)&&(imaginary  ==  c.imaginary);	  return(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    if(c.real    ==    real)&&    (imaginary    ==    c.imaginary);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
121	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  true;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	add	if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  true;  }	  if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	39	13	replace
122	[BUG]  [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  true;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]      public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;  if  (c.isNaN)  {  return  isNaN;  }  else  {      [BUGGY]  if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  true;  }  [BUGGY]      return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.24253562503633297	348	348	1	replace	if(c.isInfinite)  {  double  real  =  c.real;  if(imaginary  ==  c.imaginary)return  true;  }	  if(c.isInfinite)    {    double    real    =    c.real;    if(imaginary    ==    c.imaginary)return    false;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	39	13	replace
