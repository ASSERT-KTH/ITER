bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  if(c.isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  if(c.isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN    ||    c.isInfinite)    {    if(c.isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
2	[BUG]  [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  If(c.isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isNaN  ||  c.isInfinite)  {  If(c.isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN    ||    c.isInfinite)    {    If(c.isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
3	[BUG]  [BUGGY]  if(c.isInfinite)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  return  isNaN  ||  isInfinite  ==  c.infinite;  }	      if(c.isNaN)    {    return    isNaN    ||    isInfinite    ==    c.infinite;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  if(isInfinite)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isInfinite)  {  return  isNaN;  }	      if(c.isNaN)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(isInfinite  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isInfinite  ||  c.isInfinite)  {	  if(isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	10	4	replace
6	[BUG]  [BUGGY]  if(isInfinite  ||  c.isInfinite)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(isInfinite  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isInfinite  ||  c.isInfinite)  {	  if(isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	10	4	replace
7	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(isNaN  ==  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(isNaN  ==  c.isInfinite)  {	  if(isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	14	replace
8	[BUG]  [BUGGY]  if(isNaN  ==  c.isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(isNaN  ==  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN  ==  c.isInfinite)  {	  if(isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	10	14	replace
9	[BUG]  [BUGGY]  parent  ==  c.parent)  {  return  isNaN;  }  else  {  return(real  ==  c.real)&&  (imaginary  ==  c.imaginary);  }  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  parent  ==  c.parent)  {  return  isNaN;  }  else  {  return(real  ==  c.real)&&  (imaginary  ==  c.imaginary);  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	parent  ==  c.parent)  {  return  isNaN;  }  else  {  return(real  ==  c.real)&&  (imaginary  ==  c.imaginary);  }	      if(c.isNaN)    {    return    isNaN;    }    else    {    return    (real    ==    c.real)&&    (imaginary    ==    c.imaginary);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }	  	compilable	  [FE]  AssertionError  	13	3	add
11	[BUG]  [BUGGY]      if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  isNaN;  }	  	compilable	  [FE]  AssertionError  	13	3	add
12	[BUG]  [BUGGY]      if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  ISNaN;  }  [CE]  cannot  find  symbol  ISNaN  [FE]      AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c.isInfinite)  {  return  isNaN;  }  if(c.isInfinite)  {  return  ISNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	        if(c.isInfinite)    {    return    isNaN;    }    if(c.isInfinite)  {  return  ISNaN;  }	  	non-compiled	[CE]  cannot  find  symbol  ISNaN	13	None	add
13	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(c.isInfinite)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  if(c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)    {    if(c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
14	[BUG]  [BUGGY]  if(c.isInfinite)  {  If(c.isInfinite)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  If(c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)    {    If(c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
15	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  false)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  false)  {	  if(c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	6	13	replace
16	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  false)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  false)  {	  if(c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	6	13	replace
17	[BUG]  [BUGGY]  if(c.isInfinite  ==  false)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  false)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  false)  {  return  isNaN;  }	      if(c.isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ||  c.isNaN)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ||  c.isNaN)  {	  if(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	18	3	replace
19	[BUG]  [BUGGY]  if(c.isInfinite  ||  c.isNaN)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ||  c.isNaN)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ||  c.isNaN)  {	  if(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  AssertionError  	18	3	replace
20	[BUG]  [BUGGY]  if(c!=  null  ||  c.isInfinite())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c!=  null  ||  c.isInfinite())  {  return  false;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null  ||  c.isInfinite())  {  return  false;  }	      if(c!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  if(c.isInfinite  ||  c.isInfinite)  {  if(c.isInfinite  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ||  c.isInfinite)  {  if(c.isInfinite  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ||    c.isInfinite)    {    if(c.isInfinite  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
22	[BUG]  [BUGGY]  if(c.isInfinite  ||  c.isInfinite)  {  If(c.isInfinite  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ||  c.isInfinite)  {  If(c.isInfinite  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite    ||    c.isInfinite)    {    If(c.isInfinite  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
23	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	1	1	add
24	[BUG]  [BUGGY]      if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(NaN  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  isNaN;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(NaN  	1	1	add
25	[BUG]  [BUGGY]      if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  ISNaN;  }  [CE]  cannot  find  symbol  ISNaN  [FE]      java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c.isNaN)  {  return  isNaN;  }  if(c.isNaN)  {  return  ISNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	        if(c.isNaN)    {    return    isNaN;    }    if(c.isNaN)  {  return  ISNaN;  }	  	non-compiled	[CE]  cannot  find  symbol  ISNaN	1	None	add
26	[BUG]  [BUGGY]  if(isNaN  ||  c.isInfinite)  {  if(isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(isNaN  ||  c.isInfinite)  {  if(isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN    ||    c.isInfinite)    {    if(isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
27	[BUG]  [BUGGY]  if(isNaN  ||  c.isInfinite)  {  If(isNaN  ||  c.isInfinite)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(isNaN  ||  c.isInfinite)  {  If(isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(isNaN    ||    c.isInfinite)    {    If(isNaN  ||  c.isInfinite)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
28	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	11	16	add
29	[BUG]  [BUGGY]      if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c!=  null)  {  return  false;  }  if(c!=  null)  {  return  false;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	        if(c!=    null)    {    return    false;    }    if(c!=  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	11	16	add
30	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	        if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	11	16	add
31	[BUG]  [BUGGY]      if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]      java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]      if(c!=  null)  {  return  false;  }  if(c  ==  null)  {  return  false;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	        if(c!=    null)    {    return    false;    }    if(c  ==  null)  {  return  false;  }	  	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	11	16	add
32	[BUG]  [BUGGY]  if(d.denominator  ==  c.denominator)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(d.denominator  ==  c.denominator)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(d.denominator  ==  c.denominator)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(d.denominator    ==    c.divisor)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(d.denominator  ==  c.denominator)  {  return  isNaN;  }  [CE]  cannot  find  symbol  d  [FE]            java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  if(d.denominator  ==  c.denominator)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(d.denominator  ==  c.denominator)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(d.denominator    ==    c.divisor)    {    return    isNaN;    }    	non-compiled	[CE]  cannot  find  symbol  d	3	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	15	4	replace
35	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(!isNaN  ||!isInfinite)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	15	4	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	15	4	replace
37	[BUG]  [BUGGY]  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  [FE]  AssertionError  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  if(!isInfinite)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	compilable	  [FE]  AssertionError  	15	4	replace
38	[BUG]  [BUGGY]  if(c.isInfinite!=  false)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite!=  false)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite!=  false)  {  return  isNaN;  }	      if(c.isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
39	[BUG]  [BUGGY]  if(c  ==  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(-0.5    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c  ==  null)  {  return  false;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c  ==  null)  {  return  false;  }	      if(c!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  if(c!=  null)  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c!=  null)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  return  isNaN;  }	      if(c.isNaN)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	15	14	replace
42	[BUG]  [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c!=  null)  {  if(!isNaN  ==  c.isInfinite)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	15	14	replace
43	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {	  if(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	18	14	replace
44	[BUG]  [BUGGY]  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isNaN  ==  isNaN  ||  c.isInfinite)  {	  if(c.isNaN    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	18	14	replace
45	[BUG]  [BUGGY]  if(!(isInfinite  ==  c.infinite))  {  return  isNaN;  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(!(isInfinite  ==  c.infinite))  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(!(isInfinite  ==  c.infinite))  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  if(c.isInfinite!=  false)  {  if(!isNaN  ||!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [CE]  cannot  find  symbol  infinite  [FE]          java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite!=  false)  {  if(!isNaN  ||!isInfinite  ==  c.infinite)  {  return  isNaN;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite!=  false)  {  if(!isNaN  ||!isInfinite  ==  c.infinite)  {  return  isNaN;  }	      if(c.isInfinite)    {    if(!(isNaN    ==    c.isInfinite))    {    return    isNaN;    }    	non-compiled	[CE]  cannot  find  symbol  infinite	15	None	replace
47	[BUG]  [BUGGY]  if(c.isInfinite  ==  isInfinite)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  isInfinite)  {  return  isInfinite;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isInfinite)  {  return  isInfinite;  }	      if(c.isInfinite)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {	  if(c.isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	15	replace
49	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN  ||  c.isInfinite)  {	  if(c.isInfinite    ||    c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	8	15	replace
50	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  isNaN)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	add	if(c.isInfinite  ==  isNaN)  {	  if(c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	6	14	replace
51	[BUG]  [BUGGY]  if(c.isInfinite  ==  isNaN)  {  [FE]  java.lang.AssertionError:  expected:<(-0.5  [FE]    AssertionError    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite  ==  isNaN)  {  [BUGGY]    return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite  ==  isNaN)  {	  if(c.isInfinite)    {    	compilable	  [FE]  java.lang.AssertionError:  expected:<(-0.5  	6	14	replace
52	[BUG]  [BUGGY]  if(c.isInfinite)  {  return  isInfinite;  }  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected:<(NaN    [CONTEXT]    public  boolean  equals(Object  other)  {  if  (this  ==  other)  {  return  true;  }  if  (other  instanceof  Complex){  Complex  c  =  (Complex)other;    [BUGGY]  if(c.isInfinite)  {  return  isInfinite;  }  [BUGGY]    if  (c.isNaN)  {  return  isNaN;  }  else  {  return  (real  ==  c.real)  &&  (imaginary  ==  c.imaginary);  }  }  return  false;  }  [CLASS]  Complex  [METHOD]  equals  [RETURN_TYPE]  boolean  Object  other  [VARIABLES]  Object  other  boolean  isInfinite  isNaN  double  addend  c  d  denominator  divisor  imaginary  q  real  scale  long  serialVersionUID  Complex  I  INF  NaN  ONE  ZERO  addend  c  divisor  	projects/Math5/src/main/java/org/apache/commons/math3/complex/Complex.java	0.23570226039551587	345	345	1	replace	if(c.isInfinite)  {  return  isInfinite;  }	      if(c.isNaN)    {    return    isNaN;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
