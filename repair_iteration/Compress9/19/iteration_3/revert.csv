projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.flushBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{finishEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished="";
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131writeEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){finishEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();started=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,out.length){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finish=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed||finished){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();OutputStreamout.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length>0){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){buffer.append(currName[i]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){for(inti=0;i<currName.length();i++){buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finish=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();out.close();}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()==0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName==null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName==null){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.hasMoreElements()){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().getContextClassLoader().reset();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().interrupt();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().getContextClassLoader();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().getContextClassLoader().setCurrentName(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().getContextClassLoader().reportError("TarArchiveOutputStream.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131aughtExceptionHandler.throwAsIOException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131aughtExceptionHandler.throwInternal();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131aughtExceptionHandler.handleMissingException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131aughtExceptionHandler.throwIOException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131aughtExceptionHandler.handleException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.checkNotNull(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();completed=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131castError("TarArchiveOutputStreamhasalreadybeenfinished.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131castError("TarArchiveOutputStreamfinished:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.read();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.getBytes(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.length();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();sealed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();OutputStreamout.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBuffer();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedentry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){closed=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeERROR();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeIOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(buffer!=null){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(buffer!=null){writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(buffer!=null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();endBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||endBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<T>endBlock=newEndBlock<T>(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<Object>endBlock=newEndBlock<Object>();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<Tar>endBlock=newEndBlock<Tar>();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finalhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,currName,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,currName,currSize,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,currSize,currSize,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,currSize,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndByteBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeBytes(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndBytes(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finishEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,out.length){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterOperation{finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterOperator{finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();EndBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isOpen()){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.hasMoreElements()){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();stop();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();wrapped=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(readEOFRecord(),buffer.flushBlock());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().getContextClassLoader().finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName==null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()==0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()<0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterOperation{finished=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF(){finished=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterOperation{finished=false;}elseif(haveUnclosedEntry){finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterOperation{finished=false;}elseif(closed){finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF(){finished=false;}else{finishEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterOperation{finished=false;}else{finishEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF(){finished=false;}else{finishEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.getInstance().completeAndClearBuffer(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.getInstance().completeAndClearBuffer(buffer,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.getInstance().finish(buffer,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.getInstance().completeAndClearBuffer(buffer,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.getInstance().completeAndClearBuffer(buffer,finished);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.getInstance().completeAndClearBuffer(buffer,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){readEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){readEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){readEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){readEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){readEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){readEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){readEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=newbyte[LONGFILE_ERROR];
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=newStringBuffer(LONGFILE_ERROR,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=newStringBuffer(LONGFILE_ERROR.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName!=null){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(currName!=null){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName==null){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()<0){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<Tar>endBlock=newEndBlock<Tar>(currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<T>endBlock=newEndBlock<T>(currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<T>endBlock=newEndBlock<T>(length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!finished){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){breakEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();began=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.flushBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.writeBytes(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.flushCurrentSize();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName!=null){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()==0){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()<0){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){buffer.close();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(buffer,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(buffer,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(buffer,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(buffer,0,buffer.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.writeBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131After(assemLen){finished=false;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.writeBlock();out.write(assemBuf,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=JsonStringEncoder.getInstance().encodeAsEOF(currName));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=JsonStringEncoder.getInstance().encodeAsEOF(currName,buffer.length()-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=JsonStringEncoder.getInstance().encodeAsIOd(currName));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=JsonStringEncoder.getInstance().encodeAsEOF(currName,buffer.length()));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=JsonStringEncoder.getInstance().encodeAsEOF(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finish=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=newEndBlock<LONGFILE_GNU>();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=newEndBlock<LONGFILE_GNU>(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=newEndBlock<LONGFILE_GNU>(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<EOFRecord>endBlock=newEndBlock<EOFRecord>();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=newEndBlock<LONGFILE_GNU>(length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBuffer();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131castError("Tararchivehasalreadybeenfinished.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}elseif(closed){writeEOFRecord();block.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finish=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(buffer!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i+1));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131writeEOFRecord();buffer.flushBlock();finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finish){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF(){finished=true;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF(){finished=true;}else{finishEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF(){finished=true;}else{finishEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF(){finished=true;}else{finishEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.closeBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Parchet.getInstance().finishCurrentStructure(buffer,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finally(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length>0){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){buffer.write(currName[i]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(hasUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finally(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();sealed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(true){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!cloned){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){wrapped=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131While(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.flushBlock();stop();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(length){finished=false;}else{writeEOFRecord();buffer.flushBlock();begin();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()==0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){writeEOFRecord();buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(finished){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finish=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()<0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeERROR();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeIOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){breakEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosed){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndBytes(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndByteBuffer(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndBytes(recordBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed){finished=false;}else{buffer.closeArchive();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed){finished=false;}else{buffer.closeArchiveOutputStream();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed){finished=false;}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed){finished=false;}else{buffer.closeBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131cast(buffer,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();began=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,out.length){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,buffer.length)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,buffer.length){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();OutputStreamout.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finish();}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finish();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(haveUnclosedEntry){finishEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){finishEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finishEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){startEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finishEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.AUTO_CLOSE_ERROR)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAME)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){closed=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTED_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(isEOF()){if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){readEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,currSize,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();System.arraycopy(assemBuf,0,buffer.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();start=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){closed=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.flushBlock();started=true;System.arraycopy(assemBuf,0,buffer.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();started=true;System.arraycopy(assemBuf,0,buffer.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.writeBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(hasUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){if(currName!=null){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(currName!=null){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().setContextClassLoader(TarBuffer.class.getClassLoader());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().setContextClassLoader(TarBuffer.class.getSimpleName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBlock();startBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().setContextClassLoader(TarBuffer.class.getClassLoader(),true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,buffer.length)){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finish=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131While(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131While(!finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131While(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131While(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131While(!finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.closeBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=1;i<currName.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<len.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();buffer.flushBuffer();endBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=newEndBlock(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=newEndBlock(LONGFILE_GNU,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){Finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){completed=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeFieldName(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}else{writeEOFRecord();buffer.closeBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();Finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(currName!=null){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finish){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName[i]+",");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currSize.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.copyCurrentStructure(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(buffer,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.writeBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131out.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.bufferBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!clocked){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!clocked){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finish){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(cloned){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName==null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed<LONGFILE_ERROR||finished){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed<LONGFILE_ERROR||closed){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed){finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){if(currName!=null){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarc
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcr=descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarc
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcEr
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcA
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcr
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcErr
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){completed=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();done=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();writeEOFRecord();buffer.flushBlock();done=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();done=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131done=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();done=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<TarBuffer>endBlock=newEndBlock<TarBuffer>();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBuffer();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){Finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,buffer.length){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(cloned){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBuffer();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();System.arraycopy(assemBuf,0,out,currSize,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();out.close();System.exit(0);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName!=null){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName!=null){for(inti=0;i<currName.length();i++){buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.closeBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finishEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(hasUnclosedEntry){finishEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.bufferBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF){finished=true;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{finishEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{finishEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{EOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{startEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterEOF){finished=true;}else{finishEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndByte(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndByteBuffer(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(cloned){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(cloned){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){closed=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcAs
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finishBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();beginBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();startedBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed)==writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(!closed){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(!closed){completed=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(readEOFRecord(),closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){Finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.writeBlock(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.writeBlock(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.writeBlock(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=newStringBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=newStringBuffer(LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished='n';
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished='{';
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131out.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131readEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBuffer();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){readEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){readEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){readEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finish=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){Finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed<LONGFILE_ERROR||finished){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed<LONGFILE_GNU){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finish=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finish=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{finishEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{finishEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{finishEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){closed=false;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBuffer();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBuffer();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131DesertionFailedErrort=newDesertionFailedError("TarArchivehasalreadybeenfinished.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131DesertionFailedErrort=newDesertionFailedError("TarArchiveOutputStreamhasalreadybeenfinished.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();OutputStreamout.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!clocked){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;System.arraycopy(assemBuf,0,buffer,assemLen,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;System.arraycopy(assemBuf,0,buffer,assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;System.arraycopy(assemBuf,0,buffer,currSize,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;notifyListeners(newRunnable(){publicvoidrun(){buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;System.err.println("TarArchiveOutputStream:finished"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131wired=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(readEOFRecord(),buffer.getBlockSize()){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();sealed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(haveUnclosedEntry){writeEEFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeEndByte();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()>=0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName!=null){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()!=0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){closed=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,buffer.length)){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){completed=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed<LONGFILE_ERROR||finished){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed<LONGFILE_ERROR||closed){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131AfterClosed){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.writeBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();finishBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName!=null){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()>=0){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}else{writeEOFRecord();writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.bufferBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.releaseBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){currName=buffer.toString();for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.write(currName[i]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currSize.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<len.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.write(currName[i]+",");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131OutputStreamos=getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){closed=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){completed=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){wrapped=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){if(!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.bufferBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{buffer.writeBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<T>endBlock=newEndBlock<T>();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.close();writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){closed=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=EOFRecord.EXPR_RESULT;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=EOFRecord.EXTERN_FILE_ERROR;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=EOFRecord.DEFAULT;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=EOFRecord.EXTENDS_PER_ERROR;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish|=EOFRecord.EXTERN_ERROR;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();finishBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,finished,currSize){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf){finished=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){closed=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf){finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(recordBuf,0,out.length){finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||hasUnclosedEntry){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!closed){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.getEndBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.next();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBuffer();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){started=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{finishEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{finishEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131after(closed){finished=false;}else{finishEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{startEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{finishEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}else{finishEOFRecord();buffer.flushBuffer();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{finishEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(hasUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{finishEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(0));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endTime=System.currentTimeMillis();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finish=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){wrapped=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed"){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeRaw('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){readEOFRecord();buffer.flushBlock();finished=true;}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currSize.length();i++){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){currName=currName.substring(0,currName.length()-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();start=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.getBlockSize();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=buffer.nextBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131cast(buffer,LONGFILE_GNU,LONGFILE_TRUNCATE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeBlock();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writePRINT();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(closed){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){currName[i]=buffer.toString();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.write(currName[i]);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed||closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed)==writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(closed){finished=false;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){readEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){closed=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){Finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){wrapped=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}else{buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(Finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.writeBlock(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131os.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(cloned){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(clocked){finished=false;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){wrapped=false;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(buffer!=null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(buffer!=null){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(buffer!=null){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){closed=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||endBlock>LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||endBlock(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||endBlock>LONGFILE_GNU){finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(closed){finished=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}else{writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){buffer.close();writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){buffer.close();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writeBlock();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){writePRINT();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length>0){buffer.close();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){buffer.close();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||endBlock>LONGFILE_GNU){finished=false;}else{writeEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.writeBlock(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131buffer.flushCurrentLength();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()<0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}else{buffer.flushBuffer();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}else{System.arraycopy(assemBuf,0,buffer,assemLen,currSize);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish();}else{System.arraycopy(assemBuf,0,buffer,assemBuf,0,assemLen);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcing
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcAsEOF();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcs
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcsAndUpdate();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(!finished){finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131reportError("TarArchiveOutputStreamfinished:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){currName=buffer.toString();for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=true;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarc(newEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(Finished){Finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}catch(IOExceptionioe){thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Finished=false;}else{writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){currName=currName.substring(0,currName.length()-1);buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(currName!=null&&currName.length()>0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()<0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null||currName.length()<=0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()<0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()<=0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName==null||currName.length()!=0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{finishEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR||endBlock>LONGFILE_GNU){finished=false;}else{finishEOFRecord();buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().getIntermediateThread().intermediateThread();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131Thread.currentThread().getIntermediateThread().intermediateThread().intermediateThread();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null&&currName.length()>0){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||sealed){finished=false;}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){finishUp();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){finish();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131elseif(closed){finishArchive();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!closed){finished=true;}else{writeEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{finishEOFRecord();buffer.flushBlock();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{buffer.writeBlock();out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_ERROR>endBlock=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(finished){finished=true;}else{writeEOFRecord();buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}else{buffer.flushBlock();startBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||!finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&hasUnclosedEntry){finished=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrap=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished&&!closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry||finished){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed){writeEOFRecord();buffer.flushBlock();sealed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=false;}elseif(closed)==writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131finished=newbyte[LONGFILE_GNU];
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{buffer.flushBlock();endBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131EndBlock<LONGFILE_GNU>endBlock=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finish=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131while(!finished){closed=false;}elseif(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcBu
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131descarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcdescarcBuffer
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(currName!=null){for(inti=0;i<currName.length();i++){buffer.releaseBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{finishEOFRecord();buffer.flushBlock();finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{finishEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(closed){finished=true;}else{finishEOFRecord();buffer.flushBlock();end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java131if(haveUnclosedEntry){finished=true;}else{finishEOFRecord();buffer.flushBlock();start();}
