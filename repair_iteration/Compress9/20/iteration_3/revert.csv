projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132writeEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.flushBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+1);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen);buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+1);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length-6);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.defaultOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.defaultWriteObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+1);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName==null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132writeEOFRecord();buffer.flushBlock();finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(recordBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hadUnclosed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.releaseOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flush();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+2);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+1);buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132readEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getErrorStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+2);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+3);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!cloned){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!closed){buffer.releaseBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132Os.write(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(assemLen>0){out.write(assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(assemLen>0){out.write(assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length);buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize);buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,blockSize);buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length-1+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.copy(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,currSize,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,currSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(currName,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(buffer,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(buffer.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartByte(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(buffer,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeByte(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(buffer,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(currName,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length-3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length/2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName==null){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length*2+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartByteBuffer(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hadUnclosed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(buffer,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(buffer.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(lONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(buffer.getLength());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(lONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(hasUnclosedEntry){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream();if(out!=null){if(hasUnclosedEntry){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(buffer!=null){out.write(assemBuf,0,buffer.length);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(buffer.length>0){out.write(assemBuf,0,buffer.length);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length-1);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(buffer!=null){out.write(assemBuf,0,buffer.length);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length/2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length-3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length-6);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132readEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(cloned){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(currName,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(buffer,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(currName,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(recordBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(buffer,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen*4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+5);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+1,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132readEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(assemBuf,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeCurrentStructure(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(assemBuf,0,buffer.length,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(assemBuf,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(assemBuf,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(buffer,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBytes(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBytes(recordBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(recordBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(currName,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeCurrentStructure(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length*4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+2);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length/2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length-3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finish){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currSize>0){out.write(assemBuf,0,currSize);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currSize>0){out.write(assemBuf,0,currSize);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,blockSize);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currSize>0){out.write(assemBuf,0,currSize);writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currSize>0){out.write(assemBuf,0,currSize);writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=TarBuffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132byte[]out=buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.toByteArray()+1;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBytes(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(buffer,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen*2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBytes(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBytes(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBytes(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length/4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null||currName.length()==0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,recordBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,recordBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,recordBuf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,recordBuf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.closeOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.releaseOutputStream(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeObject(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordBuf.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordBuf.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.close();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null){out.write(assemBuf,0,currName.length);buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(currName,0,currSize.length);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length-1);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(currName,0,currSize.length);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currName.length);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemBuf.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemBuf.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length*4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartByteBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_NON_NULL_OBJECT)){if(!closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,blockSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,recordSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer.toByteArray());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.defaultOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getOutputStream(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.toOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getOutputStream(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getInputStream(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemBuf!=null){out.write(assemBuf,0,assemBuf.length);}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemBuf!=null){out.write(assemBuf,0,assemBuf.length);}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw('0');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw('n',buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw('n'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(',');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length/4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132readEOFRecord();}elseif(haveUnclosedEntry){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132readEOFRecord();}elseif(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write('0');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write('n'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write('n',buffer.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write('n',0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosed){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosed){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(true,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(true,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getOutputStream(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartByte();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeByte(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.defaultOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=this.buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.getOutputStream(),buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(currName!=null){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(currName!=null){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName==null){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(currName!=null){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished&&buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,blockSize);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,blockSize);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currBytes);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length/6);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!hasUnclosedEntry){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(hasUnclosedEntry){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartByteBuffer(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeByteBuffer(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.flush();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(assemBuf,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){out.write(assemBuf,0,assemLen);buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.close();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(assemLen>0){out.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.startOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.defaultOutputStream(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalhaveUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalhasUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen*3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132Os.write(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,fileMode);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,finished);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132buffer.close();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length*2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.release();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(recordBuf!=null){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(recordBuf!=null){if(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){buffer.releaseBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copy(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132Os.write(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){while(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed&&buffer.length>0){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finish){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize+1);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,buffer.length*2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length*2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.nextOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.endOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=false;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBuffer();finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(recordBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132Os.write(buffer,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){buffer.write(assemBuf,0,assemLen);writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize-1);writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.flushBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.writeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.flushOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,writeEOFRecord());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){buffer.write(assemBuf,0,assemLen);buffer.flush();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,buffer.length);buffer.flush();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(':');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw('n',0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw('-');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(buffer,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.releaseBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("".);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=false;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeRaw(assemBuf,finished);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(buffer!=null){out.write(assemBuf,0,buffer.length);writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.openStream(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.startStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.initializeOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(close){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen/4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(currName,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){buffer.writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.close();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeERROR();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(recordBuf!=null){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copy(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getInputStream(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finish){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalif(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosed){if(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosed){if(!closed){buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132after(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(buffer,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write('n',writeEOFRecord());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write('n',buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copy(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(true,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(true,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,finished);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){buffer.flush();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copyCurrentStructure(buffer,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(recordBuf,finished);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){buffer.writeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){buffer.releaseBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(currName,0,assemBuf.length);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.copyCurrentStructure(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hadUnclosed){buffer.close();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize+1);buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+1);buffer.flushBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.releaseOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getOutputStream(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemBuf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,buffer.length);buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByte(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();}else{buffer.releaseBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();}else{buffer.closeBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hadUnclosed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.flushBuffer();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.copy(buffer,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length-1+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(buffer,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length*4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132readEOFRecord();buffer.flushBlock();finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(128);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(32);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(assemName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBytes(currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,recordBuf.length);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock()
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132Os.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordBuf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,recordBuf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen);buffer.flushBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){isEnabled(Feature.AUTO_CLOSE_ERROR){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.finishOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.releaseOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(currName,0,currSize);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,currSize-1);buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.toByteArray(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.toByteArray(),buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen+6);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemBuf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemBuf.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){buffer.close();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);buffer.flush();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemLen+1,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream();if(out!=null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(currName,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(currName,finished);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(currName,buffer.toByteArray());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeERROR();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeIOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeERROR();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeBlock();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(!closed){buffer.flushBuffer();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.close();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null&&currName.length()>0){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null||currName.length()==0){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null){writeERROR();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(currName!=null&&currName.length()>0){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null){writeEOFRecord();buffer.flushBlock();finished=false;}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeIOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBlock(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBlock(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndStructure(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBytes(assemLen,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemBuf!=null){out.write(assemBuf,0,buffer.length);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemBuf!=null){out.write(assemBuf,0,buffer.length);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(buffer.length>0){out.write(assemBuf,0,buffer.length);writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeString(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(currName,buffer.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeFieldName(currName,buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}else{thrownewIOException(""));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.releaseOutputStream(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputFile();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen-1);writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeIOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeBlock();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!closed){writeEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(hadUnclosed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(currName,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(currName,buffer.toByteArray());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(buffer,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);buffer.flushBlock();}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132Os.write(buffer,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemBuf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemBuf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeERROR();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=this.buffer.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){buffer.close();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeERROR();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){buffer.write(assemBuf,0,assemLen);buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getOutputStream(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132OutputStreamout=buffer.getOutputStream(assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(closed){buffer.flush();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132Os.write(assemBuf,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out=buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.release();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen/2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.writeOutputStream(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(':');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeByteBuffer(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,buffer.length;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=buffer.getOutputStream(true,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,buffer.length*6);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.write(assemBuf,0,assemSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132finalOutputStreamout=newFileOutputStream(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName==null||currName.length()==0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName==null||hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName==null||currName.length()!=0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null&&currName.length()>0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(currName!=null&&currName.length>0){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartBlock(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeBlock(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartStructure(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!closed){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(!finished){writeEOFRecord();buffer.flushBlock();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeStartObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeInt(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132while(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen+1);buffer.close();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&!closed){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){buffer.release();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(closed){writeEOFRecord();buffer.flushBuffer();finished=true;}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132out.write(assemBuf,0,assemLen/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132if(assemLen>0){out.write(assemBuf,0,assemLen);}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java132os.writeEndByteBuffer(buffer,0,buffer.length-2);
