bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.flush();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  if(buffer.length()  >  0)  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length()  >  0)  {  buffer.flush();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length()  >  0)  {  buffer.flush();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.flush();  }  else  {  out.close();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  if(buffer.length()  >  0)  {  buffer.flush();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length()  >  0)  {  buffer.flush();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length()  >  0)  {  buffer.flush();  }  else  {  out.close();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  buffer.flush();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0)  {  buffer.flush();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0)  {  buffer.flush();  }  else  {  out.close();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  1);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  1);	  buffer.close(assemBuf,    0,    0);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  currSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  currSize);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  currSize);	  buffer.close(assemBuf,    0,    0);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  0L);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  0L);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  0L);	  buffer.close(assemBuf,    0,    0);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  closed);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  closed);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  closed);	  buffer.close(assemBuf,    0,    0);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
10	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  currName.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  currName.length);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  currName.length);	  buffer.close(assemBuf,    0,    0);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  assemLen  +  1);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  assemLen  +  1);	  buffer.close(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  assemLen,  currName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  assemLen,  currName);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  assemLen,  currName);	  buffer.close(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  blockSize);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  blockSize);	  buffer.close(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  assemLen  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  assemLen  -  1);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  assemLen  -  1);	  buffer.close(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  assemLen,  assemSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  assemLen,  assemSize);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  assemLen,  assemSize);	  buffer.close(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  assemSize,  currBytes);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  assemSize,  currBytes);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  assemSize,  currBytes);	  buffer.close(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  currBytes);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  currBytes);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  currBytes);	  buffer.close(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  recordSize);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  recordSize);	  buffer.close(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  assemSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  assemSize  +  1);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  assemSize  +  1);	  buffer.close(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  buffer.close(assemBuf,  out);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  out);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  out);	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  buffer.close(assemBuf,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0);	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  buffer.close(assemBuf,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  false);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  false);	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  buffer.close(assemBuf,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  true);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  true);	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  os.close();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  os.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	os.close();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  out.close();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  out.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	out.close();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  out.close();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
27	[BUG]  [BUGGY]  if(!closed)  {  out.close();  }  else  {  buffer.write(assemBuf,  0,  currSize);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  out.close();  }  else  {  buffer.write(assemBuf,  0,  currSize);  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  out.close();  }  else  {  buffer.write(assemBuf,  0,  currSize);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  if(!closed)  {  out.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  out.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  out.close();  }  else  {  buffer.close();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
29	[BUG]  [BUGGY]  this.recordBuf.close();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  this.recordBuf.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	this.recordBuf.close();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  if(!closed)  {  out.close();  closed  =  true;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  out.close();  closed  =  true;  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  out.close();  closed  =  true;  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  if(buffer!=  null)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  if(buffer!=  null)  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
33	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
34	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]  if(!closed)  {  if(buffer  ==  null)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  if(buffer  ==  null)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  if(buffer  ==  null)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
36	[BUG]  [BUGGY]  if(!closed)  {  if(buffer.length  ==  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  if(buffer.length  ==  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  if(buffer.length  ==  0)  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  if(buffer.length!=  0)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length!=  0)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length!=  0)  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0)  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
40	[BUG]  [BUGGY]  if(buffer.length!=  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length!=  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length!=  0)  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
41	[BUG]  [BUGGY]  buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  if(buffer  ==  null)buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  if(buffer!=  null)buffer.close();  if(out  ==  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.close();  if(out  ==  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.close();  if(out  ==  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  because(buffer!=  null)buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  because(buffer!=  null)buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	because(buffer!=  null)buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  this.buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  this.buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	this.buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
46	[BUG]  [BUGGY]  if(buffer!=  null)buffer.close();  if(out  >=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.close();  if(out  >=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.close();  if(out  >=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
47	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  if(!closed)  {  if(buffer.length  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  if(buffer.length  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  if(buffer.length  >  0)  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
49	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
50	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
51	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0)  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  if(!closed)  {  if(buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  if(buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  if(buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  if(buffer!=  null)buffer.close();  else  buffer.close();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.close();  else  buffer.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.close();  else  buffer.close();	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
54	[BUG]  [BUGGY]  because(buffer!=  null)buffer.close();  else  buffer.close();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  because(buffer!=  null)buffer.close();  else  buffer.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	because(buffer!=  null)buffer.close();  else  buffer.close();	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  else  buffer.close();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  else  buffer.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  else  buffer.close();	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  if(buffer  ==  null)buffer.close();  else  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)buffer.close();  else  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)buffer.close();  else  buffer.close();  }	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  if(buffer  ==  null)buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  because(buffer!=  null)buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  because(buffer!=  null)buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	because(buffer!=  null)buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
59	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
60	[BUG]  [BUGGY]  buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
62	[BUG]  [BUGGY]  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
63	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  getOutputStream();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  getOutputStream();	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
64	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  >  0)  {  buffer.close();  }  else  {  out.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0)  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0)  {  buffer.close();  }  else  {  out.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
66	[BUG]  [BUGGY]  because(buffer!=  null)buffer.close();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  because(buffer!=  null)buffer.close();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	because(buffer!=  null)buffer.close();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
67	[BUG]  [BUGGY]  if(buffer  ==  null)buffer.close();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)buffer.close();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)buffer.close();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  if(out!=  null)buffer.close();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(out!=  null)buffer.close();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(out!=  null)buffer.close();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
70	[BUG]  [BUGGY]  if(buffer!=  null)buffer.release();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.release();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.release();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
71	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	while(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
72	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	while(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();	  if(buffer!=    null)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
73	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.size()  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  while(buffer!=  null  &&  buffer.size()  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	while(buffer!=  null  &&  buffer.size()  >  0)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
74	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.size()  >  0)  {  buffer.close();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  while(buffer!=  null  &&  buffer.size()  >  0)  {  buffer.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	while(buffer!=  null  &&  buffer.size()  >  0)  {  buffer.close();	  if(buffer!=    null)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
75	[BUG]  [BUGGY]  if(closed)  {  out.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(closed)  {  out.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(closed)  {  out.close();  }  else  {  buffer.close();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  if(!closed)  {  buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(!closed)  {  buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(!closed)  {  buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  if(out!=  null)  {  buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(out!=  null)  {  buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(out!=  null)  {  buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  if(out!=  null)buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(out!=  null)buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(out!=  null)buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
79	[BUG]  [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  this.recordBuf.getOutputStream();	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  OutputStream  os  =  getOutputStream();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  os  =  getOutputStream();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  os  =  getOutputStream();	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
81	[BUG]  [BUGGY]  OutputStream  out  =  System.err.println( "TarBuffer.close  closed: "  +  currName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  System.err.println( "TarBuffer.close  closed: "  +  currName);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  System.err.println( "TarBuffer.close  closed: "  +  currName);	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
82	[BUG]  [BUGGY]  OutputStream  out  =  System.err.println( "TarBuffer.close  closed: "  +  buffer.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  System.err.println( "TarBuffer.close  closed: "  +  buffer.getName());  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  System.err.println( "TarBuffer.close  closed: "  +  buffer.getName());	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
83	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  <  0)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
84	[BUG]  [BUGGY]  Buffer  buffer  =  new  Buffer(buffer.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  Buffer  buffer  =  new  Buffer(buffer.length);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	Buffer  buffer  =  new  Buffer(buffer.length);	  if(buffer!=    null)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
85	[BUG]  [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  if(out!=  null)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  if(out!=  null)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  this.recordBuf.getOutputStream();  if(out!=  null)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
86	[BUG]  [BUGGY]  OutputStream  out  =  this.recordBuf.toByteArray();  if(out!=  null)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  this.recordBuf.toByteArray();  if(out!=  null)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  this.recordBuf.toByteArray();  if(out!=  null)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  if(buffer!=  null)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  if(buffer!=  null)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  this.recordBuf.getOutputStream();  if(buffer!=  null)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  OutputStream  out  =  this.recordBuf.toByteArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  OutputStream  out  =  this.recordBuf.toByteArray();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	OutputStream  out  =  this.recordBuf.toByteArray();	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
89	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
90	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
91	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  out.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
92	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }  else  {  out.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
93	[BUG]  [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)  {  if(buffer.length  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)  {  if(buffer.length  >  0)  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
94	[BUG]  [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  if(buffer.length  >  0)  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
95	[BUG]  [BUGGY]  if(buffer!=  null)buffer.flush();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.flush();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.flush();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
96	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.close();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.close();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.close();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
97	[BUG]  [BUGGY]  if(buffer!=  null)buffer.close();  if(!cloned)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.close();  if(!cloned)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.close();  if(!cloned)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
98	[BUG]  [BUGGY]  buffer.close(assemBuf,  closed);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  closed);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  closed);	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
99	[BUG]  [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
100	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  ==  0)  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
101	[BUG]  [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  'n')  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
102	[BUG]  [BUGGY]  if(buffer  ==  null)buffer.close();  else  buffer.close();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)buffer.close();  else  buffer.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)buffer.close();  else  buffer.close();	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
103	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  recordBuf.length);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  recordBuf.length);	  buffer.close(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
104	[BUG]  [BUGGY]  if(out!=  null)buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(out!=  null)buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(out!=  null)buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
105	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
106	[BUG]  [BUGGY]  if(buffer!=  null)buffer.release();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.release();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.release();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
107	[BUG]  [BUGGY]  if(buffer!=  null)buffer.close();  if(!cloned)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.close();  if(!cloned)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.close();  if(!cloned)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
108	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.closed  source: "  +  currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.closed  source: "  +  currName);  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.closed  source: "  +  currName);  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
109	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.close  closed: "  +  currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.close  closed: "  +  currName);  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.close  closed: "  +  currName);  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
110	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.flush();  }  else  {  buffer.close();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
111	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.closed  entry: "  +  currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.closed  entry: "  +  currName);  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)  {  buffer.flush();  }  else  {  System.err.println( "TarBuffer.closed  entry: "  +  currName);  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
112	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  close);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  close);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  close);	  buffer.close(assemBuf,    0,    0);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  if(!closed)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  if(!closed)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  if(buffer.close()  >  0)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  if(buffer.close()  >  0)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.length  >  0)  {  if(buffer.close()  >  0)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
115	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.length  >  0)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
116	[BUG]  [BUGGY]  buffer.close(assemSize,  0,  assemBuf.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemSize,  0,  assemBuf.length);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemSize,  0,  assemBuf.length);	  buffer.close(assemBuf,    0,    assemSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
117	[BUG]  [BUGGY]  buffer.close(assemBuf,  0,  assemLen,  closed);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  buffer.close(assemBuf,  0,  assemLen,  closed);  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	buffer.close(assemBuf,  0,  assemLen,  closed);	  buffer.close(assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
118	[BUG]  [BUGGY]  if(buffer!=  null  ||  out!=  null)  {  buffer.close();  if(out!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  out!=  null)  {  buffer.close();  if(out!=  null)  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  out!=  null)  {  buffer.close();  if(out!=  null)  {  out.close();  }	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
119	[BUG]  [BUGGY]  if(buffer!=  null)buffer.close();  out  =  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)buffer.close();  out  =  null;  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)buffer.close();  out  =  null;	  if(buffer!=    null)buffer.close();    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
120	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  out.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  out.close();  }	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
121	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  }	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
122	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemLen);  }	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
123	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(assemBuf!=  null)  {  buffer.close();  }  else  {  out.close();  }	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
124	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  out.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  assemBuf.length);  out.close();  }	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
125	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  buf.length);  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(assemBuf!=  null)  {  buffer.close();  }  else  {  System.arraycopy(assemBuf,  0,  assemBuf,  0,  buf.length);  }	  buffer.close(assemBuf);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
126	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  else  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  else  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  else  buffer.close();  }	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
127	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.isClosed())buffer.close();  else  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.isClosed())buffer.close();  else  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.isClosed())buffer.close();  else  buffer.close();  }	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
128	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)buffer.close();  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.length  >  0)buffer.close();	  if(buffer!=    null)buffer.close();    else    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
129	[BUG]  [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  &&  buffer.length  >  0)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
130	[BUG]  [BUGGY]  if(buffer!=  null)stop  buffer.close();  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null)stop  buffer.close();  if(!closed)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null)stop  buffer.close();  if(!closed)  {  buffer.close();  }	  if(buffer!=    null)buffer.close();    if(!closed)    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
131	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  =  0)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  <  =  0)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  <  =  0)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
132	[BUG]  [BUGGY]  because(buffer!=  null)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  because(buffer!=  null)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	because(buffer!=  null)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
133	[BUG]  [BUGGY]  if(buffer  ==  null)  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer  ==  null)  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer  ==  null)  {  buffer.close();  }  else  {  out.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
134	[BUG]  [BUGGY]  because(buffer!=  null)  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  because(buffer!=  null)  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	because(buffer!=  null)  {  buffer.close();  }  else  {  out.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
135	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
136	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  else  {  out.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
137	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  buffer.flush();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0)  {  buffer.flush();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0)  {  buffer.flush();  }  else  {  buffer.close();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
138	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  buffer.flush();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0)  {  buffer.flush();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0)  {  buffer.flush();  }  else  {  buffer.close();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
139	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  buffer.flush();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0)  {  buffer.flush();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0)  {  buffer.flush();  }	  buffer.flush();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
140	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  <  2)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer!=  null  ||  buffer.length  <  2)  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer!=  null  ||  buffer.length  <  2)  {  buffer.close();  }	  if(buffer!=    null)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
141	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(recordBuf!=  null)  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(recordBuf!=  null)  {  buffer.close();  }  else  {  buffer.close();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
142	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  out.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(recordBuf!=  null)  {  out.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(recordBuf!=  null)  {  out.close();  }  else  {  buffer.close();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
143	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
144	[BUG]  [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)  ==  '/')  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)  ==  '/')  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  >  0  ||  buffer.charAt(buffer.length  -  1)  ==  '/')  {  buffer.close();  }	  if(buffer.length    >    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
145	[BUG]  [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0  ||  buffer.charAt(buffer.length  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
146	[BUG]  [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  else  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
147	[BUG]  [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }  if  (!closed)  {    [BUGGY]  if(buffer.length  ==  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }  [BUGGY]    out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	145	145	1	replace	if(buffer.length  ==  0  ||  buffer.charAt(bufferLength  -  1)!=  '/')  {  buffer.close();  }	  if(buffer.length    ==    0)    {    buffer.close();    }    else    {    buffer.close();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
