projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();elsebuffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,0L);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){out.close();}else{buffer.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(out>=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();elsebuffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.release();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+buffer.getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.getOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.toByteArray();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.getOutputStream();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.flush();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closedsource:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closeclosed:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closedentry:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,close);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){if(buffer.close()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemSize,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||out!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.close();elsebuffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.isClosed())buffer.close();elsebuffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)stopbuffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<2){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)=='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){out.close();}else{buffer.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(buffer.length()-1)!='/'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(buffer.length()-1)!='n'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(buffer.length()-1)!=':'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(buffer.length()-1)=='/'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){out.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)=='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,closed,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145castExceptionHandler.throwAsIOException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145castExceptionHandler.throwInternal();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145cast(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145castError("TarArchiveOutputStreamclosed:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145castError("TarArchiveOutputStreamclosed:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145castError("TarArchiveOutputStreamnotclosed.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145castError("CannotclosetheTarBuffer.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.arraycopy(assemBuf,0,assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.arraycopy(assemBuf,0,assemBuf,0,assemLen);out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>=0){if(assemBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen!=0){if(assemBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145BufferUtil.close(buffer,assemBuf,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,false,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,false,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,false,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!=':'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<=0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>=0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length<0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<2){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.flush();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.flush();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.flush();if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.finish();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null||buffer.length<0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<=0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>=0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(buffer.length-1)=='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)>='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-2)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){for(inti=0;i<buffer.length;i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){for(inti=0;i<buffer.length;i++){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){for(inti=0;i<buffer.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,blockSize,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currSize,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,currBytes,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,currBytes,hasUnclosedEntry);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.getOutputStream();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,this.currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,shortFileMode);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(buffer.length-1)=='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)!=':'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordSize,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,this.blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0)buffer.close();elsebuffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.release();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.release();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!finished){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null&&buffer.length>0)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.flush();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=assemBuf.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.defaultOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer.length>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length()==0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,blockSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currSize,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currSize-currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length<0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,close+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length<=0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(out!=null){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();if(cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)stopBuffer();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!finished){if(buffer!=null)stopbuffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)stopbuffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)stopBuffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)stop();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)stopBuffer();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Os.write(buffer,0,os.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145os.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145os.write(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null||buffer.size()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.size()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer==null&&buffer.size()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145when(buffer!=null&&buffer.size()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length!=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length>=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length>0){out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null||buffer.length>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer==null&&buffer.length>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length>0){buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}else{System.arraycopy(assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf!=null){buffer.close();System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.err.println("TarBuffer.closedsource:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){if(buffer!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){buffer.flush();}else{System.err.println("TarBuffer.closedsource:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closedsource:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName==null){if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closedsource:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(buffer!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145assemBuf=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer==null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer>=null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer.length>0){buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!=':'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!closed){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145safeTarBuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!closed&&buffer.length>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){if(buffer.close()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null&&buffer.length>0){if(buffer.close()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null&&buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null&&buffer.length>0){if(buffer.close()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.close()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null&&buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)=='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-2)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer==null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Because(buffer!=null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length>0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length!=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=assemBuf.toByteArray();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.toByteArray();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.toByteArray();if(out==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out=this.recordBuf.toByteArray();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145byte[]out=this.recordBuf.toByteArray();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){out.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length==0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length()==0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<=0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer.length!=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer.length!=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){out.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(recordBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(recordBuf==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(recordBuf!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=assemBuf.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=newbyte[this.recordBuf.toByteArray()];
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.toByteArray()+1;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out=this.recordBuf.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){out.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer==null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<2||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length<2){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length<2){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length<2){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf=buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf.close(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf.closeAll();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer==null)buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0)buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isOpen())buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Because(buffer!=null)buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(!closed){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out.close();closed=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosed){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!hasUnclosedEntry){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!hasUnclosed){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.getOutputStream();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.flush();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.arraycopy(assemBuf,0,assemBuf,0,buf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(assemBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>=0){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145cast(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!hasUnclosedEntry){out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!hasUnclosed){out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!closed){out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145cast(buffer,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=this.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=this.recordBuf.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getOutputStream(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getErrorStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145assemBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145((TarBuffer)assemBuf).close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145assemBuf=newbyte[assemLen];
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.assemBuf.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,blockSize,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,blockSize,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer==null)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isOpen())buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.close()>0)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.close()>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.close());elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.close()>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.close()>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.close())buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,0L+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer!=null){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!finished){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName.length,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName.length,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(buffer.length-1)=='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(out.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.isClosed())buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.isClosed())buffer.close();elsebuffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.isClosed())buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isClosed())buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=this.recordBuf.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)=='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferSize-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-2)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemLen,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.getOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=assemBuf.getOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.getOutputStream();if(out==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.openStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145byte[]out=this.recordBuf.getOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.toOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+currName,buffer.getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+buffer.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+assemBuf.getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+currName+".getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+buffer.getName(),currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0)buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer==null)buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isOpen())buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.size()>0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)stopbuffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){if(buffer!=null&&buffer.length>0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0){out.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){if(buffer!=null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();if(cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){buffer.close();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>=0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<=0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length==0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer.length()>0){buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()==0){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()==0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length()==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Buffer.close(assemBuf,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,true,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null||buffer.size()>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()>0){out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()<=0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer==null&&buffer.size()>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.size()>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.err.println("TarBuffer.closedentry:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){buffer.flush();}else{System.err.println("TarBuffer.closedentry:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closedentry:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName==null){if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closedentry:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordBuf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordBuf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer==null)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.size()>0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.release();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,blockSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen*2-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isEnabled()){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.getType()==Token.BLOCK){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.getType()==Token.EXPR_RESULT){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.getType()==Token.NAME){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=os.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.getProperty("line.separator");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.buffer!=null){this.buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){this.buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.buffer!=null){this.buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.buffer.flush();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)=='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream();if(out!=null)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.getOutputStream();if(out!=null)buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length()==0){buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){out.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)=='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferSize-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currName,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currName,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currName,hasUnclosedEntry);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null&&buffer.length>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer>=null&&buffer.length>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145System.err.println("TarBuffer.closeclosed:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){buffer.flush();}else{System.err.println("TarBuffer.closeclosed:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){if(buffer!=null){buffer.flush();}else{System.err.println("TarBuffer.closeclosed:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName==null){buffer.flush();}else{System.err.println("TarBuffer.closeclosed:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length==0){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer!=null||out!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||out!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer!=null||out!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:n"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+currName,finished);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:"+currName,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclose:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145out=System.err.println("TarBuffer.closeclosed:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,len);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosed){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosed){if(buffer!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,hasUnclosedEntry);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,8);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.getOutputStream();if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=buffer.getOutputStream();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145finalOutputStreamout=this.recordBuf.getOutputStream();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=assemBuf.getOutputStream();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.openStream();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getErrorStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream().getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosed){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosed){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.close();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.close()>0)buffer.close();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.close();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.close())out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getOutputStream(out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getOutputStream(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getOutputStream().getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf.closeAll(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.recordBuf.close(buffer,0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){out.close();}else{buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||out==null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.close();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.release();if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf==null){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){buffer.close();if(closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:["+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("JarBuffer.closeclosed:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){out.close();}else{buffer.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){out.close();}else{buffer.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosed){out.close();}else{buffer.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){out.close();}else{buffer.write(assemLen,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){out.close();}else{buffer.write(assemSize,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=4){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer.length>0||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)=='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.flush();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.close();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.release();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer.length!=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer.length>=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(haveUnclosedEntry){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry||!closed){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){out.close();closed=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){this.buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.releaseOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.releaseOutputStream(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){if(!closed){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hadUnclosed){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosed){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf==null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){recordBuf=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length<0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer!=null&&buffer.length>0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null&&buffer.length>0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){out.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currSize,assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,currBytes,haveUnclosedEntry);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(bufferLength==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.charAt(buffer.length-1)!='n'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null){if(buffer.length>0||buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf==null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=super.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream()-1;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(buffer.length-1)=='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)=='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.charAt(buffer.length-1)=='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordBuf.length,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,closed,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)out.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)flushBuffer();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)buffer.release();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen!=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.flush();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.release();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null&&buffer.isClosed())buffer.close();elsebuffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf==null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen!=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry||!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)buffer.close();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){out.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){out=null;buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145While(buffer!=null&&buffer.size()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length==0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null||buffer.length<0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){out.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)flushBuffer();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.close():closed");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,out.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:n"+buffer.getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=(this.recordBuf!=null)?this.recordBuf.toByteArray():recordBuf.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=(this.recordBuf!=null)?this.recordBuf.toByteArray():buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=(this.recordBuf!=null)?this.recordBuf.toByteArray():Collections.EMPTY_LIST;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length==0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length==0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(bufferLength==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(bufferSize-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0L);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Because(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null){buffer.release();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null){buffer.finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null||buffer.length>0){if(buffer.close()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null&&buffer.length>0){if(buffer.closed()>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer!=null){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer!=null){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer!=null){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length<0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<2){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null||buffer.length==0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currName,haveUnclosedEntry);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currName,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();elsebuffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.flush();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();elsebuffer.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();elsebuffer.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen!=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen==0){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(bufferLength-1)!='/'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length()>0||buffer.charAt(buffer.length()-1)=='n'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length>0){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145While(buffer!=null&&buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordSize,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.flush();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.flush();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.flush();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.flush();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf==null){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,false,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.flush();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.release();if(!cloned){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){this.buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen!=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>=0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(assemBuf!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145cast(buffer,0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145cast(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145tate<T>out=getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.releaseOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.close();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closedsource:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.releaseOutputStream();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.length>0){buffer.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closedentry:"+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){buffer.flush();}else{System.err.println("TarBuffer.closedentry:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(bufferLength>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length>0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer>=null)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()>0){buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf==null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf==null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,out,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145this.os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145os.close(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)flushBuffer();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)scheduled.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null)out.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(bufferLength>0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>=0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null)buffer.release();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){buffer.release();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,off);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null&&buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=newOutputStream(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer!=null){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer!=null){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<2||buffer.length>6){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){if(buffer!=null)stopbuffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf!=null)stopBuffer();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null)stopbuffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.flush();}else{System.err.println("TarBuffer.closedentry:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(currName==null){buffer.flush();}else{System.err.println("TarBuffer.closedentry:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||out==null){buffer.close();if(out==null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.release();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<=0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemSize,0,assemBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemSize,0,assemBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){out.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf==null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.flush();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length<2){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<2||buffer.length>4){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.getLength()>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isEnabled(Feature.AUTO_CLOSE_SOURCE)){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isEnabled(Feature.QUOTED_FIELD_NAMES)){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isEnabled(Feature.AUTO_CLOSE_ERROR)){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<=0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,recordSize,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){if(buffer.length>0||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){out.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0)buffer.close();elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.close()){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.close())buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){for(inti=0;i<buffer.length;++i){buffer[i]=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){for(inti=0;i<buffer.length;i++){buffer[i]=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){for(inti=0;i<buffer.length;++i){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&out!=null){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.flush();}else{System.err.println("TarBuffer.closedsource:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();}else{System.err.println("TarBuffer.closedsource:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){out.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,this.assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!hasUnclosedEntry){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){buffer.close();out!=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='n'){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen>0){System.arraycopy(assemBuf,0,assemBuf,0,assemLen);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemLen==0){if(assemBuf!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemSize,currBytes,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,assemLen,currName,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.recordBuf!=null){this.recordBuf.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.recordBuf!=null){this.recordBuf.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.recordBuf!=null){this.recordBuf.close();}else{System.arraycopy(assemBuf,0,recordBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.recordBuf!=null){this.recordBuf.close();}else{System.arraycopy(assemBuf,0,recordBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.recordBuf!=null){this.recordBuf.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145finalOutputStreamout=this.recordBuf.toByteArray();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length<0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.close();}elsebuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosed){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!closed){if(buffer.length>0||buffer.length>0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='/'){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='/'){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length==0||buffer.charAt(buffer.length-1)!='n'){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0){buffer.close();if(out!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null||buffer.length<=0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.close())buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.isClosed())buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length==0){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=(this.recordBuf!=null?this.recordBuf.toByteArray():buffer.toByteArray());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=(this.recordBuf!=null?this.recordBuf.toByteArray():Collections.EMPTY_LIST);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(recordBuf.length==0){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<=0||buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.charAt(buffer.length-1)!='/'){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0)buffer.close();out=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){out.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){out.close();}else{buffer.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newTarBuffer(buffer.length,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newTarBuffer(buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){out.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null||assemBuf.length<0){buffer.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,buf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length<=0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='/'){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(bufferLength-1)!='/'){buffer.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){buffer.release();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.buffer!=null){this.buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.buffer!=null){this.buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.buffer!=null){this.buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){if(!cloned){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length>0){if(buffer.close()<LONGFILE_GNU){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length==0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(this.recordBuf!=null){OutputStreamout=this.recordBuf.getOutputStream();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.close();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.toByteArray();if(buffer!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer.length==0||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<=0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(bufferLength-1)!='/'){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.length>0){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isEnabled(Feature.AUTO_CLOSE_SOURCE)){buffer.close();if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)!='n'){buffer.flush();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer==null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Iterator<TarBuffer>out=this.recordBuf.entrySet().iterator();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Iterator<TarBuffer>out=buffer.entrySet().iterator();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Iterator<TarBuffer>out=buffer.getEntrySet().iterator();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream(),buffer.releaseAbsolutePath());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=getOutputStream(),buffer.getCharset());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length!=3){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.size()>0)buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isClosed())buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145because(buffer!=null&&buffer.isOpen())buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer==null){buffer.flush();}else{System.err.println("TarBuffer.closeclosed:"+currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Iterator<TarBuffer>out=buffer.getOutputs().iterator();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length*2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145finalOutputStreamout=this.recordBuf.getOutputStream();if(out!=null){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(!recorded){out.close();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamos=getOutputStream().close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,0L,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null&&buffer.length<0){buffer.close();if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null){buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length>0||buffer.charAt(buffer.length-1)=='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer.length<0||buffer.charAt(buffer.length-1)!='n'){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,0,currBytes,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null||buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(out!=null){if(buffer!=null||buffer.length<0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(closed){if(buffer!=null&&buffer.length>0){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=System.err.println("TarBuffer.closeclosed:%s."+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145buffer.close(assemBuf,false,closed);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145OutputStreamout=this.recordBuf.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length()-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newbyte[buffer.length()];
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length(),buffer.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newBuffer(buffer.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145Bufferbuffer=newArrayBuffer(buffer.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null||buffer.length<2){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145doClose(os);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145doClose(os,buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)stopBuffer();if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(buffer!=null)stopbuffer.close();if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145while(buffer!=null&&buffer.size()>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){out.close();}else{System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(assemBuf!=null){for(inti=0;i<assemBuf.length;++i){System.arraycopy(assemBuf,0,assemBuf,0,assemBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer.length>0||buffer.length>0){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java145if(hasUnclosedEntry){if(buffer.length<=0){buffer.close();}
