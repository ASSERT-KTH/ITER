projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatebooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatebooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatefinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatebooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatefinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatebooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinallonghaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalprotectedbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatefinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatefinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Unexpectederror:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectederror:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR".getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR",null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatestaticfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedstaticfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected",newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("JSC_INTERNAL_ERROR".getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+this.getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("JSC_INTERNAL_ERROR");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalprotectedbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedfinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedinthasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}",expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}",name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}",required);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}",getClass());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}",2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype:"+name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+"->");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+":");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+":"+identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+"identifier:"+name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,TEST_FONT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,TEST_VERSION);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+getMessage(),expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+getClass());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+getLineNumber());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getReturnCode());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalAssertionFailedErrort=newAssertionFailedError(getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getClass());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),getClass());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedfinalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedstaticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),TarArchiveOutputStream.DEFAULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getMessage(),this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_WARNING,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getMessage(),null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privateinthasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("Unexpectederror:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Unexpectederror:"+getMessage(),expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Unexpectederror:"+this.getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalprotectedinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privateinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedlonghaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalprotectedbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalprotectedfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalprotectedbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedstaticfinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedstaticfinalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalinthasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinallonghaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalbytehaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+name,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR",identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR",name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR",null,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR",null,newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_FONT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_VERSION);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_WARNING);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,NON_SOURCE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,TEST_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,NON_SOURCE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,TEST_FONT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractfinalbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalabstractbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+name,"Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+"Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("JSC_INTERNAL_ERROR","Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+",cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+getMessage(),"Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Cannotstartoftype{0}",expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalbytehaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalStringhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinallonghaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalbytehaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("msg.bad.invalid.type",null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",newString[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",name,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",null,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("JSC_INTERNAL_ERROR","Unexpectederror:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+name,"Unexpectederror:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalinthasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalcharhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalStringhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinallonghaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinalbytehaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalstaticbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticbooleanhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(1,TarArchiveOutputStream.DEFAULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,8);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,1L);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),TarArchiveOutputStream.TYPE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,getMessage(),this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,getMessage(),null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,getClass());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_WARNING,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedfinalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedfinalbytehaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("msg.bad.assertion.expected",newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected.error",newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected.",newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected:"+name,newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected.object",newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected:"+this,newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinallonghasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalStringhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalinthasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalstaticbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinallonghaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalbytehaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalStringhaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalprotectedbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57booleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedinthasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinallonghasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalStringhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatestaticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatestaticfinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatestaticfinalinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatefinalinthasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicinthasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalstaticbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicfinalinthasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicinthaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicinthasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publiclonghaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicbytehaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicdoublehaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("Unexpectedexception:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("expected:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("JSC_ERROR,");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("Unexpectederror:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("JSC_ERROR,expected:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("JSC_DELAYED_ERROR"));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("JSC_DELAYED_ERROR,");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("JSC_Failedtostartoftype");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR:expected");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+getError());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(this,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),READ_EXTENDS);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Cannotstartoftype{0}",name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR",newString[]{"Cannotstartoftype{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PublicstaticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatstaticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarNumber.TYPE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,TEST_PARAM);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalStringhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(this,TarArchiveOutputStream.DEFAULT_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getSourceName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Unexpectederror:"+this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatestaticfinalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finalprotectedstaticfinalbooleanhaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarInputStream.TYPE_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarNumber.TYPE_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,getSourceName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("msg.bad.assertion.error",newIOException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException(""));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException(",");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("Unexpectedidentifier:{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("JSC_ERROR,""));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.error("JSC_INTERNAL_ERROR","Cannotinstantiateanumericvalue");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Cannotinstantiateanumericvalue");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Cannotinstantiateastringvalue");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,10);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatestaticfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedstaticfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected".length(),newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected".class,newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected".length()+1,newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected",newObject[]{},null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,TEST_TYPE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicabstractfinalbooleanhasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERRORmissing:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERRORmissing:"+name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR:missing"{0}".getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR:missing'"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicinthaveUnclosedEntry=0;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57PrivatefinalbooleanhasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}",null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("Cannotstartoftype{0}",this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectederror:"+getMessage(),expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_STATE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_FAILED);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TarNumberInputStream.UTF8);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+"=>");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+":expected");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+"->"+name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype",name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",args);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57finallonghaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+System.identityHashCode(this));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+this.name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,getMessage(),NON_GLOBAL);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unknownobject:{0}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}isnotsupported.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}hasbeendeprecatedfor{1}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectedidentifier:{0}hasbeendeprecated.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,TEST_PARAM);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_PARAM);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedstaticfinalinthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57protectedstaticfinallonghaveUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privateinthasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57staticfinalbytehaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Cannotstartoftype{0}",required);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectederror:"+getMessage()+"}");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR","Unexpectederror:"+this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.invalid.type",expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),STRING_LITERAL_EXPECTED);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),STRING_EXPECTED);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),NON_SYNTHETIC);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedErrort=newAssertionFailedError(getMessage(),MISSING_EXTENDS);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicstaticfinallonghasUnclosedEntry=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected".equals(newObject[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected",newObject[]{},name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.expected",newObject[]{},this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57privatestaticfinalbytehasUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57publicshorthaveUnclosedEntry=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("JSC_INTERNAL_ERROR"+id);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+Arrays.asList(getMessage()));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+asPath());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Unexpectederror:"+this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+"bytes.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+name+"inerrormessage.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("")
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57AssertionFailedError.warning("msg.bad.assertion.error",newIOException("Unknownexception:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java57System.err.println("Failedtostartoftype",expected);
